/*
 * Generated by Bluespec Compiler (build 6a8cedf)
 * 
 * On Sun May 24 15:06:41 CST 2020
 * 
 */
#include "bluesim_primitives.h"
#include "mkTestbench_pipe.h"


/* String declarations */
static std::string const __str_literal_7("**************************************************************************",
					 74u);
static std::string const __str_literal_8("1:fetch", 7u);
static std::string const __str_literal_14("2:decode", 8u);
static std::string const __str_literal_25("3:execute", 9u);
static std::string const __str_literal_32("4:mem", 5u);
static std::string const __str_literal_40("5:write back", 12u);
static std::string const __str_literal_28("Forward rs1_val from MEM", 24u);
static std::string const __str_literal_30("Forward rs1_val from WB", 23u);
static std::string const __str_literal_29("Forward rs2_val from MEM", 24u);
static std::string const __str_literal_31("Forward rs2_val from WB", 23u);
static std::string const __str_literal_17("ID:Branch Instr", 15u);
static std::string const __str_literal_18("ID:Branch Target is %b", 22u);
static std::string const __str_literal_23("ID:Branch_EN is ", 16u);
static std::string const __str_literal_19("ID:JAL Instr", 12u);
static std::string const __str_literal_20("ID:JAL Target is %b", 19u);
static std::string const __str_literal_21("ID:JALR Instr", 13u);
static std::string const __str_literal_22("ID:JALR Target is %b", 20u);
static std::string const __str_literal_24("ID:valid_instr is ", 18u);
static std::string const __str_literal_10("IF:branch taken", 15u);
static std::string const __str_literal_11("IF:branch target is %b", 22u);
static std::string const __str_literal_12("IF:branch untaken", 17u);
static std::string const __str_literal_35("LW:addr is %0d, data is %0d", 27u);
static std::string const __str_literal_42("RegFile:write %0d in %0d", 24u);
static std::string const __str_literal_33("addr:%b", 7u);
static std::string const __str_literal_9("branch_EN is ", 13u);
static std::string const __str_literal_3("dmem0.txt", 9u);
static std::string const __str_literal_36("dmem0.upd(%0d,%b)", 17u);
static std::string const __str_literal_4("dmem1.txt", 9u);
static std::string const __str_literal_37("dmem1.upd(%0d,%b)", 17u);
static std::string const __str_literal_5("dmem2.txt", 9u);
static std::string const __str_literal_38("dmem2.upd(%0d,%b)", 17u);
static std::string const __str_literal_6("dmem3.txt", 9u);
static std::string const __str_literal_39("dmem3.upd(%0d,%b)", 17u);
static std::string const __str_literal_2("imem_forward2.txt", 17u);
static std::string const __str_literal_15("instr:%b", 8u);
static std::string const __str_literal_13("pc is %b", 8u);
static std::string const __str_literal_1("regfile.txt", 11u);
static std::string const __str_literal_26("rs1_val from RF:%b", 18u);
static std::string const __str_literal_27("rs2_val from RF:%b", 18u);
static std::string const __str_literal_34("val :%b", 7u);
static std::string const __str_literal_16("valid_instr:%b", 14u);
static std::string const __str_literal_41("write %0d in %0d", 16u);


/* Constructor */
MOD_mkTestbench_pipe::MOD_mkTestbench_pipe(tSimStateHdl simHdl, char const *name, Module *parent)
  : Module(simHdl, name, parent),
    __clk_handle_0(BAD_CLOCK_HANDLE),
    INST_regfile_flag(simHdl, "regfile_flag", this, 1u, (tUInt8)0u, (tUInt8)0u),
    INST_regfile_regfile(simHdl,
			 "regfile_regfile",
			 this,
			 __str_literal_1,
			 5u,
			 32u,
			 (tUInt8)0u,
			 (tUInt8)31u,
			 (tUInt8)0u),
    INST_s1_imem(simHdl, "s1_imem", this, __str_literal_2, 32u, 8u, 0u, 4294967295u, (tUInt8)0u),
    INST_s1_reg_if_id(simHdl, "s1_reg_if_id", this, 65u),
    INST_s1_reg_pc(simHdl, "s1_reg_pc", this, 32u, 0u, (tUInt8)0u),
    INST_s2_reg_branch(simHdl, "s2_reg_branch", this, 33u),
    INST_s2_reg_id_ex(simHdl, "s2_reg_id_ex", this, 237u),
    INST_s3_reg_ex_mem(simHdl, "s3_reg_ex_mem", this, 107u),
    INST_s3_reg_forward_mem(simHdl, "s3_reg_forward_mem", this, 38u),
    INST_s4_dmem0(simHdl, "s4_dmem0", this, __str_literal_3, 32u, 8u, 0u, 4294967295u, (tUInt8)0u),
    INST_s4_dmem1(simHdl, "s4_dmem1", this, __str_literal_4, 32u, 8u, 0u, 4294967295u, (tUInt8)0u),
    INST_s4_dmem2(simHdl, "s4_dmem2", this, __str_literal_5, 32u, 8u, 0u, 4294967295u, (tUInt8)0u),
    INST_s4_dmem3(simHdl, "s4_dmem3", this, __str_literal_6, 32u, 8u, 0u, 4294967295u, (tUInt8)0u),
    INST_s4_reg_forward_wb(simHdl, "s4_reg_forward_wb", this, 38u),
    INST_s4_reg_mem_wb(simHdl, "s4_reg_mem_wb", this, 39u),
    INST_step(simHdl, "step", this, 32u, 0u, (tUInt8)0u),
    PORT_RST_N((tUInt8)1u),
    DEF_s2_reg_id_ex___d94(237u),
    DEF_s3_reg_ex_mem___d249(107u),
    DEF_s1_reg_if_id___d18(65u),
    DEF_s1_reg_if_id_8_BITS_64_TO_33_3_CONCAT_s1_reg_i_ETC___d93(237u),
    DEF_s1_reg_if_id_8_BITS_7_TO_1_1_CONCAT_s1_reg_if__ETC___d91(140u),
    DEF_IF_s1_reg_if_id_8_BITS_20_TO_16_3_EQ_0_4_THEN__ETC___d92(65u),
    DEF_s1_reg_if_id_8_BITS_25_TO_21_0_CONCAT_s1_reg_i_ETC___d90(123u),
    DEF_s1_reg_if_id_8_BITS_32_TO_26_1_CONCAT_s1_reg_i_ETC___d89(96u),
    DEF_IF_s2_reg_id_ex_4_BITS_204_TO_198_14_EQ_0b1101_ETC___d241(107u),
    DEF_IF_s2_reg_id_ex_4_BITS_204_TO_198_14_EQ_0b1101_ETC___d240(72u),
    DEF_s1_reg_if_id_8_BITS_32_TO_26_1_CONCAT_s1_reg_i_ETC___d88(74u),
    DEF_IF_s2_reg_branch_BIT_32_THEN_s2_reg_branch_BIT_ETC___d17(65u)
{
  symbol_count = 23u;
  symbols = new tSym[symbol_count];
  init_symbols_0();
}


/* Symbol init fns */

void MOD_mkTestbench_pipe::init_symbols_0()
{
  init_symbol(&symbols[0u], "b__h6287", SYM_DEF, &DEF_b__h6287, 32u);
  init_symbol(&symbols[1u], "CAN_FIRE_RL_done", SYM_DEF, &DEF_CAN_FIRE_RL_done, 1u);
  init_symbol(&symbols[2u], "CAN_FIRE_RL_pipe", SYM_DEF, &DEF_CAN_FIRE_RL_pipe, 1u);
  init_symbol(&symbols[3u], "RL_done", SYM_RULE);
  init_symbol(&symbols[4u], "RL_pipe", SYM_RULE);
  init_symbol(&symbols[5u], "regfile_flag", SYM_MODULE, &INST_regfile_flag);
  init_symbol(&symbols[6u], "regfile_regfile", SYM_MODULE, &INST_regfile_regfile);
  init_symbol(&symbols[7u], "s1_imem", SYM_MODULE, &INST_s1_imem);
  init_symbol(&symbols[8u], "s1_reg_if_id", SYM_MODULE, &INST_s1_reg_if_id);
  init_symbol(&symbols[9u], "s1_reg_pc", SYM_MODULE, &INST_s1_reg_pc);
  init_symbol(&symbols[10u], "s2_reg_branch", SYM_MODULE, &INST_s2_reg_branch);
  init_symbol(&symbols[11u], "s2_reg_id_ex", SYM_MODULE, &INST_s2_reg_id_ex);
  init_symbol(&symbols[12u], "s3_reg_ex_mem", SYM_MODULE, &INST_s3_reg_ex_mem);
  init_symbol(&symbols[13u], "s3_reg_forward_mem", SYM_MODULE, &INST_s3_reg_forward_mem);
  init_symbol(&symbols[14u], "s4_dmem0", SYM_MODULE, &INST_s4_dmem0);
  init_symbol(&symbols[15u], "s4_dmem1", SYM_MODULE, &INST_s4_dmem1);
  init_symbol(&symbols[16u], "s4_dmem2", SYM_MODULE, &INST_s4_dmem2);
  init_symbol(&symbols[17u], "s4_dmem3", SYM_MODULE, &INST_s4_dmem3);
  init_symbol(&symbols[18u], "s4_reg_forward_wb", SYM_MODULE, &INST_s4_reg_forward_wb);
  init_symbol(&symbols[19u], "s4_reg_mem_wb", SYM_MODULE, &INST_s4_reg_mem_wb);
  init_symbol(&symbols[20u], "step", SYM_MODULE, &INST_step);
  init_symbol(&symbols[21u], "WILL_FIRE_RL_done", SYM_DEF, &DEF_WILL_FIRE_RL_done, 1u);
  init_symbol(&symbols[22u], "WILL_FIRE_RL_pipe", SYM_DEF, &DEF_WILL_FIRE_RL_pipe, 1u);
}


/* Rule actions */

void MOD_mkTestbench_pipe::RL_pipe()
{
  tUInt64 DEF_s2_reg_id_ex_4_BITS_204_TO_198_14_EQ_0b110111__ETC___d248;
  tUInt64 DEF_NOT_IF_s3_reg_ex_mem_49_BIT_0_52_THEN_s3_reg_e_ETC___d336;
  tUInt64 DEF_NOT_IF_s3_reg_ex_mem_49_BIT_0_52_THEN_s3_reg_e_ETC___d346;
  tUInt32 DEF_x__h1665;
  tUInt32 DEF_x__h2638;
  tUInt32 DEF_decoded_instr_funct10__h1831;
  tUInt32 DEF_x__h1634;
  tUInt32 DEF_branch_target_temp__h1812;
  tUInt32 DEF_step_56_PLUS_1___d357;
  tUInt32 DEF__0_CONCAT_s2_reg_id_ex_4_BITS_150_TO_139_91___d201;
  tUInt32 DEF_b__h3780;
  tUInt32 DEF_b__h4041;
  tUInt32 DEF_instr_SB_imm13__h1802;
  tUInt32 DEF_s4_dmem1_sub_s3_reg_ex_mem_49_BITS_37_TO_6_50__ETC___d263;
  tUInt32 DEF_imm21_UJ__h1803;
  tUInt8 DEF_NOT_s2_reg_branch_BIT_32___d4;
  tUInt8 DEF_NOT_s2_reg_branch_BIT_32_AND_s1_reg_if_id_8_BI_ETC___d73;
  tUInt8 DEF_IF_s3_reg_ex_mem_49_BIT_0_52_THEN_s3_reg_ex_me_ETC___d258;
  tUInt8 DEF_NOT_s3_reg_ex_mem_49_BITS_74_TO_72_56_EQ_0b0_66___d270;
  tUInt8 DEF_IF_s3_reg_ex_mem_49_BIT_0_52_THEN_s3_reg_ex_me_ETC___d303;
  tUInt8 DEF_IF_s3_reg_ex_mem_49_BIT_0_52_THEN_s3_reg_ex_me_ETC___d304;
  tUInt8 DEF_IF_s3_reg_ex_mem_49_BIT_0_52_THEN_s3_reg_ex_me_ETC___d285;
  tUInt8 DEF_IF_s3_reg_ex_mem_49_BIT_0_52_THEN_s3_reg_ex_me_ETC___d278;
  tUInt8 DEF_IF_s3_reg_ex_mem_49_BIT_0_52_THEN_s3_reg_ex_me_ETC___d305;
  tUInt8 DEF_IF_s3_reg_ex_mem_49_BIT_0_52_THEN_s3_reg_ex_me_ETC___d294;
  tUInt8 DEF_IF_s3_reg_ex_mem_49_BIT_0_52_THEN_s3_reg_ex_me_ETC___d306;
  tUInt8 DEF_IF_s3_reg_ex_mem_49_BIT_0_52_THEN_s3_reg_ex_me_ETC___d300;
  tUInt8 DEF_NOT_IF_s3_reg_ex_mem_49_BIT_0_52_THEN_s3_reg_e_ETC___d318;
  tUInt8 DEF_s4_reg_mem_wb_47_BIT_38_49_AND_s4_reg_mem_wb_4_ETC___d350;
  tUInt8 DEF_s4_reg_mem_wb_47_BIT_38_49_AND_s4_reg_mem_wb_4_ETC___d355;
  tUInt8 DEF_s3_reg_ex_mem_49_BITS_74_TO_72_56_EQ_0b0_66_AN_ETC___d269;
  tUInt8 DEF_NOT_s3_reg_ex_mem_49_BITS_74_TO_72_56_EQ_0b0_6_ETC___d276;
  tUInt8 DEF_s3_reg_ex_mem_49_BITS_74_TO_72_56_EQ_0b0_66_AN_ETC___d283;
  tUInt8 DEF_s3_reg_ex_mem_49_BITS_74_TO_72_56_EQ_0b0_66_AN_ETC___d289;
  tUInt8 DEF_NOT_s3_reg_ex_mem_49_BITS_74_TO_72_56_EQ_0b0_6_ETC___d292;
  tUInt8 DEF_s3_reg_ex_mem_49_BITS_74_TO_72_56_EQ_0b0_66_AN_ETC___d298;
  tUInt8 DEF_s1_reg_if_id_8_BITS_7_TO_1_1_EQ_0b1100111___d44;
  tUInt32 DEF_x__h3567;
  tUInt8 DEF_IF_s1_reg_if_id_8_BITS_20_TO_16_3_EQ_0_4_THEN__ETC___d58;
  tUInt8 DEF_IF_s1_reg_if_id_8_BITS_20_TO_16_3_EQ_0_4_THEN__ETC___d54;
  tUInt8 DEF_s1_reg_if_id_8_BITS_7_TO_1_1_EQ_0b1101111_2_OR_ETC___d71;
  tUInt8 DEF_IF_s1_reg_if_id_8_BITS_15_TO_13_8_EQ_0b0_9_THE_ETC___d70;
  tUInt8 DEF_IF_s1_reg_if_id_8_BITS_7_TO_1_1_EQ_0b1100011_2_ETC___d72;
  tUInt8 DEF_IF_s2_reg_id_ex_4_BITS_204_TO_198_14_EQ_0b1101_ETC___d143;
  tUInt8 DEF_IF_s3_reg_ex_mem_49_BIT_0_52_THEN_s3_reg_ex_me_ETC___d254;
  tUInt8 DEF__theResult_____1_snd_snd_rd__h4158;
  tUInt8 DEF_IF_s2_reg_id_ex_4_BITS_204_TO_198_14_EQ_0b1101_ETC___d243;
  tUInt8 DEF_x1_avValue_snd_rd__h5691;
  tUInt8 DEF_IF_s3_reg_ex_mem_49_BITS_74_TO_72_56_EQ_0b0_66_ETC___d296;
  tUInt8 DEF_IF_s3_reg_ex_mem_49_BITS_74_TO_72_56_EQ_0b0_66_ETC___d287;
  tUInt8 DEF_IF_s3_reg_ex_mem_49_BITS_74_TO_72_56_EQ_0b0_66_ETC___d302;
  tUInt32 DEF_rs1_val__h1807;
  tUInt32 DEF_rs2_val__h1808;
  tUInt32 DEF_jalr_target_temp__h1814;
  tUInt32 DEF_x1_avValue_snd_branch_target__h2490;
  tUInt32 DEF_jal_target_temp__h1813;
  tUInt8 DEF_s1_reg_if_id_8_BITS_7_TO_1_1_EQ_0b1101111___d32;
  tUInt32 DEF_x1_avValue_snd_branch_target__h2492;
  tUInt32 DEF__theResult_____1_fst_val__h3383;
  tUInt32 DEF_addr___1__h3326;
  tUInt32 DEF__theResult_____1_snd_fst_addr__h3390;
  tUInt32 DEF__theResult_____1_snd_snd_snd_rd_val__h4162;
  tUInt32 DEF_result___1__h3242;
  tUInt32 DEF_IF_s2_reg_id_ex_4_BITS_204_TO_198_14_EQ_0b1101_ETC___d247;
  tUInt32 DEF_result___1__h3219;
  tUInt32 DEF_x__h3538;
  tUInt32 DEF__theResult_____1_fst_val__h3377;
  tUInt32 DEF_x__h3206;
  tUInt32 DEF__theResult_____1_snd_fst_addr__h3396;
  tUInt32 DEF_x__h4006;
  tUInt32 DEF_v__h2906;
  tUInt32 DEF_v__h3063;
  tUInt32 DEF_v__h3009;
  tUInt32 DEF_result___1__h3753;
  tUInt32 DEF_result___1__h3748;
  tUInt32 DEF_result___1__h3700;
  tUInt32 DEF_result___1__h3653;
  tUInt32 DEF_result___1__h3648;
  tUInt32 DEF_result___1__h3639;
  tUInt32 DEF_result___1__h3630;
  tUInt32 DEF_result___1__h3583;
  tUInt32 DEF_result___1__h3577;
  tUInt32 DEF_result___1__h3571;
  tUInt32 DEF__theResult_____1__h3265;
  tUInt32 DEF_result___1__h3927;
  tUInt32 DEF_result___1__h3884;
  tUInt32 DEF_result___1__h3980;
  tUInt32 DEF_result___1__h3973;
  tUInt32 DEF_result___1__h3856;
  tUInt32 DEF_result___1__h3845;
  tUInt32 DEF_result___1__h3833;
  tUInt32 DEF_result___1__h3787;
  tUInt32 DEF_addr___1__h3307;
  tUInt32 DEF__theResult_____1__h3287;
  tUInt32 DEF_f___1_rd_val__h5664;
  tUInt32 DEF_x1_avValue_snd_rd_val__h5692;
  tUInt32 DEF_addr_byte__h4586;
  tUInt8 DEF_s3_reg_ex_mem_49_BITS_74_TO_72_56_EQ_0b0___d266;
  tUInt32 DEF_IF_s3_reg_ex_mem_49_BITS_74_TO_72_56_EQ_0b0_66_ETC___d280;
  tUInt32 DEF_f___1_rd_val__h5670;
  tUInt8 DEF_s3_reg_ex_mem_49_BITS_74_TO_72_56_EQ_0b1___d271;
  tUInt32 DEF_load_data__h4469;
  tUInt8 DEF_s3_reg_ex_mem_49_BITS_74_TO_72_56_EQ_0b10___d257;
  tUInt32 DEF_f___1_rd_val__h5678;
  tUInt32 DEF_f___1_rd_val__h5684;
  tUInt8 DEF_s1_reg_if_id_8_BITS_7_TO_1_1_EQ_0b1100011___d22;
  tUInt64 DEF_IF_s1_reg_if_id_8_BITS_7_TO_1_1_EQ_0b1100011_2_ETC___d78;
  tUInt64 DEF_s3_reg_ex_mem_49_BITS_5_TO_1_20_CONCAT_s3_reg__ETC___d332;
  tUInt8 DEF_IF_s3_reg_ex_mem_49_BIT_0_52_THEN_s3_reg_ex_me_ETC___d255;
  tUInt8 DEF_IF_s3_reg_ex_mem_49_BIT_0_52_THEN_s3_reg_ex_me_ETC___d265;
  tUInt64 DEF_IF_IF_s3_reg_ex_mem_49_BIT_0_52_THEN_s3_reg_ex_ETC___d344;
  tUInt64 DEF_s3_reg_ex_mem_49_BITS_5_TO_1_20_CONCAT_s3_reg__ETC___d341;
  tUInt8 DEF_s2_reg_branch_BIT_32___d2;
  tUInt8 DEF_s4_reg_mem_wb_47_BIT_0___d348;
  tUInt8 DEF_s1_reg_if_id_8_BIT_0___d20;
  tUInt8 DEF_s1_reg_if_id_8_BIT_32___d24;
  tUInt8 DEF_s3_reg_ex_mem_49_BIT_0___d252;
  tUInt8 DEF_s3_reg_ex_mem_49_BIT_6___d272;
  tUInt8 DEF_s2_reg_id_ex_4_BIT_0___d97;
  tUInt8 DEF_s3_reg_ex_mem_49_BITS_7_TO_6___d267;
  tUInt8 DEF_f3__h1806;
  tUInt8 DEF_f3__h2890;
  tUInt32 DEF_v__h3126;
  tUInt8 DEF_x__h3586;
  tUInt8 DEF_rd_forward_mem__h2897;
  tUInt8 DEF_rd_forward_wb__h2900;
  tUInt8 DEF_rd__h6164;
  tUInt8 DEF_x__h2533;
  tUInt8 DEF_rd__h4359;
  tUInt8 DEF_x__h3791;
  tUInt8 DEF_rs2_forward__h2896;
  tUInt8 DEF_rs1_forward__h2895;
  tUInt8 DEF_rd__h2888;
  tUInt8 DEF_x__h2577;
  tUInt8 DEF_f7__h2891;
  tUInt8 DEF_x__h4649;
  tUInt8 DEF_x__h5181;
  tUInt8 DEF_x__h5237;
  tUInt8 DEF_x__h5279;
  tUInt32 DEF_imm12_I__h1804;
  tUInt32 DEF_imm12_S__h2893;
  tUInt32 DEF_imm12_I__h2892;
  tUInt32 DEF_decoded_instr_imm20_U__h1835;
  tUInt32 DEF_imm20_U__h2894;
  tUInt32 DEF_branch_target__h1490;
  tUInt32 DEF_v__h2969;
  tUInt32 DEF_v__h3086;
  tUInt32 DEF_rd_val__h6165;
  tUInt32 DEF__read_instr__h1749;
  tUInt32 DEF_pc__h1797;
  tUInt32 DEF__read_val__h4279;
  tUInt32 DEF__read_rs2_val__h2812;
  tUInt32 DEF__read_rs1_val__h2811;
  tUInt32 DEF_pc__h2884;
  tUInt32 DEF_v__h1496;
  tUInt8 DEF_x__h1670;
  tUInt32 DEF_i__h1671;
  tUInt8 DEF_x__h1672;
  tUInt32 DEF_i__h1691;
  tUInt8 DEF_x__h1692;
  tUInt32 DEF_i__h1694;
  tUInt8 DEF_x__h1695;
  tUInt8 DEF_x__h4492;
  tUInt8 DEF_x__h4493;
  tUInt8 DEF_x__h4494;
  tUInt32 DEF__read_addr__h4280;
  tUInt8 DEF_x__h4495;
  tUInt8 DEF_rs1__h1800;
  tUInt32 DEF_x__h2091;
  tUInt8 DEF_rs2__h1801;
  tUInt32 DEF_x__h2387;
  tUInt32 DEF_v__h1562;
  tUInt64 DEF_s2_reg_branch___d1;
  tUInt64 DEF_s3_reg_forward_mem___d98;
  tUInt64 DEF_s4_reg_forward_wb___d107;
  tUInt64 DEF_s4_reg_mem_wb___d347;
  tUInt8 DEF_s3_reg_forward_mem_8_BIT_37_9_AND_s2_reg_id_ex_ETC___d103;
  tUInt8 DEF_s4_reg_forward_wb_07_BIT_37_08_AND_s2_reg_id_e_ETC___d111;
  tUInt8 DEF_s3_reg_forward_mem_8_BIT_37_9_AND_s2_reg_id_ex_ETC___d106;
  tUInt8 DEF_s3_reg_forward_mem_8_BIT_37___d99;
  tUInt8 DEF_s4_reg_forward_wb_07_BIT_37_08_AND_s2_reg_id_e_ETC___d113;
  tUInt8 DEF_s4_reg_forward_wb_07_BIT_37___d108;
  tUInt8 DEF_op__h2889;
  tUInt8 DEF_op__h1805;
  tUInt8 DEF_f3__h4360;
  DEF_s2_reg_id_ex___d94 = INST_s2_reg_id_ex.METH_read();
  DEF_op__h2889 = DEF_s2_reg_id_ex___d94.get_bits_in_word8(6u, 6u, 7u);
  DEF_s3_reg_ex_mem___d249 = INST_s3_reg_ex_mem.METH_read();
  DEF_f3__h4360 = DEF_s3_reg_ex_mem___d249.get_bits_in_word8(2u, 8u, 3u);
  DEF_s1_reg_if_id___d18 = INST_s1_reg_if_id.METH_read();
  DEF_op__h1805 = DEF_s1_reg_if_id___d18.get_bits_in_word8(0u, 1u, 7u);
  DEF_s4_reg_mem_wb___d347 = INST_s4_reg_mem_wb.METH_read();
  DEF_s3_reg_forward_mem___d98 = INST_s3_reg_forward_mem.METH_read();
  DEF_s3_reg_forward_mem_8_BIT_37___d99 = (tUInt8)(DEF_s3_reg_forward_mem___d98 >> 37u);
  DEF_s4_reg_forward_wb___d107 = INST_s4_reg_forward_wb.METH_read();
  DEF_s4_reg_forward_wb_07_BIT_37___d108 = (tUInt8)(DEF_s4_reg_forward_wb___d107 >> 37u);
  DEF_s2_reg_branch___d1 = INST_s2_reg_branch.METH_read();
  DEF_rs2__h1801 = DEF_s1_reg_if_id___d18.get_bits_in_word8(0u, 21u, 5u);
  DEF_v__h1562 = INST_s1_reg_pc.METH_read();
  DEF_x__h2387 = INST_regfile_regfile.METH_sub(DEF_rs2__h1801);
  DEF_rs1__h1800 = DEF_s1_reg_if_id___d18.get_bits_in_word8(0u, 16u, 5u);
  DEF_x__h2091 = INST_regfile_regfile.METH_sub(DEF_rs1__h1800);
  DEF_b__h6287 = INST_step.METH_read();
  DEF__read_addr__h4280 = primExtract32(32u, 107u, DEF_s3_reg_ex_mem___d249, 32u, 37u, 32u, 6u);
  DEF_x__h4495 = INST_s4_dmem0.METH_sub(DEF__read_addr__h4280);
  DEF_x__h4494 = INST_s4_dmem1.METH_sub(DEF__read_addr__h4280);
  DEF_x__h4493 = INST_s4_dmem2.METH_sub(DEF__read_addr__h4280);
  DEF_x__h4492 = INST_s4_dmem3.METH_sub(DEF__read_addr__h4280);
  DEF_pc__h2884 = primExtract32(32u, 237u, DEF_s2_reg_id_ex___d94, 32u, 236u, 32u, 205u);
  DEF__read_rs1_val__h2811 = primExtract32(32u, 237u, DEF_s2_reg_id_ex___d94, 32u, 64u, 32u, 33u);
  DEF__read_rs2_val__h2812 = primExtract32(32u, 237u, DEF_s2_reg_id_ex___d94, 32u, 32u, 32u, 1u);
  DEF__read_val__h4279 = primExtract32(32u, 107u, DEF_s3_reg_ex_mem___d249, 32u, 69u, 32u, 38u);
  DEF_pc__h1797 = primExtract32(32u, 65u, DEF_s1_reg_if_id___d18, 32u, 64u, 32u, 33u);
  DEF_imm12_S__h2893 = primExtract32(12u, 237u, DEF_s2_reg_id_ex___d94, 32u, 138u, 32u, 127u);
  DEF__read_instr__h1749 = primExtract32(32u, 65u, DEF_s1_reg_if_id___d18, 32u, 32u, 32u, 1u);
  DEF_rd_val__h6165 = (tUInt32)(DEF_s4_reg_mem_wb___d347 >> 1u);
  DEF_v__h3086 = (tUInt32)(DEF_s4_reg_forward_wb___d107);
  DEF_v__h2969 = (tUInt32)(DEF_s3_reg_forward_mem___d98);
  DEF_branch_target__h1490 = (tUInt32)(DEF_s2_reg_branch___d1);
  DEF_imm20_U__h2894 = primExtract32(20u, 237u, DEF_s2_reg_id_ex___d94, 32u, 113u, 32u, 94u);
  DEF_decoded_instr_imm20_U__h1835 = primExtract32(20u,
						   65u,
						   DEF_s1_reg_if_id___d18,
						   32u,
						   32u,
						   32u,
						   13u);
  DEF_imm12_I__h2892 = DEF_s2_reg_id_ex___d94.get_bits_in_word32(4u, 11u, 12u);
  DEF_imm12_I__h1804 = primExtract32(12u, 65u, DEF_s1_reg_if_id___d18, 32u, 32u, 32u, 21u);
  DEF_x__h5279 = primExtract8(8u, 107u, DEF_s3_reg_ex_mem___d249, 32u, 69u, 32u, 62u);
  DEF_x__h5237 = DEF_s3_reg_ex_mem___d249.get_bits_in_word8(1u, 22u, 8u);
  DEF_x__h5181 = DEF_s3_reg_ex_mem___d249.get_bits_in_word8(1u, 14u, 8u);
  DEF_x__h4649 = DEF_s3_reg_ex_mem___d249.get_bits_in_word8(1u, 6u, 8u);
  DEF_f7__h2891 = DEF_s2_reg_id_ex___d94.get_bits_in_word8(5u, 1u, 7u);
  DEF_x__h2577 = primExtract8(7u, 65u, DEF_s1_reg_if_id___d18, 32u, 32u, 32u, 26u);
  DEF_rd__h2888 = DEF_s2_reg_id_ex___d94.get_bits_in_word8(6u, 1u, 5u);
  DEF_rs1_forward__h2895 = primExtract8(5u, 237u, DEF_s2_reg_id_ex___d94, 32u, 192u, 32u, 188u);
  DEF_rs2_forward__h2896 = DEF_s2_reg_id_ex___d94.get_bits_in_word8(5u, 23u, 5u);
  DEF_x__h3791 = DEF_s2_reg_id_ex___d94.get_bits_in_word8(4u, 11u, 5u);
  DEF_rd__h4359 = DEF_s3_reg_ex_mem___d249.get_bits_in_word8(0u, 1u, 5u);
  DEF_rd__h6164 = (tUInt8)((tUInt8)31u & (DEF_s4_reg_mem_wb___d347 >> 33u));
  DEF_x__h2533 = DEF_s1_reg_if_id___d18.get_bits_in_word8(0u, 8u, 5u);
  DEF_rd_forward_wb__h2900 = (tUInt8)((tUInt8)31u & (DEF_s4_reg_forward_wb___d107 >> 32u));
  DEF_s4_reg_forward_wb_07_BIT_37_08_AND_s2_reg_id_e_ETC___d113 = DEF_s4_reg_forward_wb_07_BIT_37___d108 && DEF_rs2_forward__h2896 == DEF_rd_forward_wb__h2900;
  DEF_s4_reg_forward_wb_07_BIT_37_08_AND_s2_reg_id_e_ETC___d111 = DEF_s4_reg_forward_wb_07_BIT_37___d108 && DEF_rs1_forward__h2895 == DEF_rd_forward_wb__h2900;
  DEF_rd_forward_mem__h2897 = (tUInt8)((tUInt8)31u & (DEF_s3_reg_forward_mem___d98 >> 32u));
  DEF_s3_reg_forward_mem_8_BIT_37_9_AND_s2_reg_id_ex_ETC___d106 = DEF_s3_reg_forward_mem_8_BIT_37___d99 && DEF_rs2_forward__h2896 == DEF_rd_forward_mem__h2897;
  DEF_s3_reg_forward_mem_8_BIT_37_9_AND_s2_reg_id_ex_ETC___d103 = DEF_s3_reg_forward_mem_8_BIT_37___d99 && DEF_rs1_forward__h2895 == DEF_rd_forward_mem__h2897;
  DEF_f3__h2890 = DEF_s2_reg_id_ex___d94.get_bits_in_word8(5u, 8u, 3u);
  DEF_s3_reg_ex_mem_49_BITS_7_TO_6___d267 = DEF_s3_reg_ex_mem___d249.get_bits_in_word8(0u, 6u, 2u);
  DEF_f3__h1806 = DEF_s1_reg_if_id___d18.get_bits_in_word8(0u, 13u, 3u);
  DEF_s2_reg_id_ex_4_BIT_0___d97 = DEF_s2_reg_id_ex___d94.get_bits_in_word8(0u, 0u, 1u);
  DEF_s3_reg_ex_mem_49_BIT_6___d272 = DEF_s3_reg_ex_mem___d249.get_bits_in_word8(0u, 6u, 1u);
  DEF_s3_reg_ex_mem_49_BIT_0___d252 = DEF_s3_reg_ex_mem___d249.get_bits_in_word8(0u, 0u, 1u);
  DEF_s1_reg_if_id_8_BIT_32___d24 = DEF_s1_reg_if_id___d18.get_bits_in_word8(1u, 0u, 1u);
  DEF_s1_reg_if_id_8_BIT_0___d20 = DEF_s1_reg_if_id___d18.get_bits_in_word8(0u, 0u, 1u);
  DEF_s4_reg_mem_wb_47_BIT_0___d348 = (tUInt8)((tUInt8)1u & DEF_s4_reg_mem_wb___d347);
  DEF_s2_reg_branch_BIT_32___d2 = (tUInt8)(DEF_s2_reg_branch___d1 >> 32u);
  DEF_v__h1496 = DEF_s2_reg_branch_BIT_32___d2 ? DEF_branch_target__h1490 : DEF_v__h1562;
  DEF_i__h1694 = DEF_v__h1496 + 3u;
  DEF_x__h1695 = INST_s1_imem.METH_sub(DEF_i__h1694);
  DEF_i__h1691 = DEF_v__h1496 + 2u;
  DEF_x__h1692 = INST_s1_imem.METH_sub(DEF_i__h1691);
  DEF_i__h1671 = DEF_v__h1496 + 1u;
  DEF_x__h1672 = INST_s1_imem.METH_sub(DEF_i__h1671);
  DEF_x__h1670 = INST_s1_imem.METH_sub(DEF_v__h1496);
  DEF_s3_reg_ex_mem_49_BITS_5_TO_1_20_CONCAT_s3_reg__ETC___d332 = 137438953471llu & ((((tUInt64)(DEF_rd__h4359)) << 32u) | (tUInt64)(DEF__read_val__h4279));
  DEF_s3_reg_ex_mem_49_BITS_5_TO_1_20_CONCAT_s3_reg__ETC___d341 = 274877906943llu & ((DEF_s3_reg_ex_mem_49_BITS_5_TO_1_20_CONCAT_s3_reg__ETC___d332 << 1u) | (tUInt64)(DEF_s3_reg_ex_mem_49_BIT_0___d252));
  DEF_s1_reg_if_id_8_BITS_7_TO_1_1_EQ_0b1100011___d22 = DEF_op__h1805 == (tUInt8)99u;
  DEF_f___1_rd_val__h5678 = (tUInt32)(DEF_x__h4495);
  DEF_s3_reg_ex_mem_49_BITS_74_TO_72_56_EQ_0b10___d257 = DEF_f3__h4360 == (tUInt8)2u;
  DEF_s3_reg_ex_mem_49_BITS_74_TO_72_56_EQ_0b1___d271 = DEF_f3__h4360 == (tUInt8)1u;
  DEF_s3_reg_ex_mem_49_BITS_74_TO_72_56_EQ_0b0___d266 = DEF_f3__h4360 == (tUInt8)0u;
  DEF_addr_byte__h4586 = primShiftR32(32u, 32u, (tUInt32)(DEF__read_addr__h4280), 32u, 2u);
  DEF_IF_s3_reg_ex_mem_49_BITS_74_TO_72_56_EQ_0b0_66_ETC___d280 = DEF_s3_reg_ex_mem_49_BITS_74_TO_72_56_EQ_0b0___d266 ? DEF_addr_byte__h4586 : DEF__read_addr__h4280;
  DEF_f___1_rd_val__h5664 = primSignExt32(32u, 8u, (tUInt8)(DEF_x__h4495));
  DEF_v__h3009 = DEF_s3_reg_forward_mem_8_BIT_37_9_AND_s2_reg_id_ex_ETC___d106 ? DEF_v__h2969 : DEF__read_rs2_val__h2812;
  DEF_v__h3126 = DEF_s4_reg_forward_wb_07_BIT_37_08_AND_s2_reg_id_e_ETC___d113 ? DEF_v__h3086 : DEF_v__h3009;
  DEF_x__h3586 = (tUInt8)((tUInt8)31u & DEF_v__h3126);
  DEF_v__h2906 = DEF_s3_reg_forward_mem_8_BIT_37_9_AND_s2_reg_id_ex_ETC___d103 ? DEF_v__h2969 : DEF__read_rs1_val__h2811;
  DEF_v__h3063 = DEF_s4_reg_forward_wb_07_BIT_37_08_AND_s2_reg_id_e_ETC___d111 ? DEF_v__h3086 : DEF_v__h2906;
  DEF_result___1__h3787 = primShiftL32(32u, 32u, (tUInt32)(DEF_v__h3063), 5u, (tUInt8)(DEF_x__h3791));
  DEF_result___1__h3884 = primShiftRA32(32u,
					32u,
					(tUInt32)(DEF_v__h3063),
					5u,
					(tUInt8)(DEF_x__h3791));
  DEF_result___1__h3927 = primShiftR32(32u, 32u, (tUInt32)(DEF_v__h3063), 5u, (tUInt8)(DEF_x__h3791));
  DEF_result___1__h3571 = DEF_v__h3063 + DEF_v__h3126;
  DEF_result___1__h3577 = DEF_v__h3063 - DEF_v__h3126;
  DEF_result___1__h3583 = primShiftL32(32u, 32u, (tUInt32)(DEF_v__h3063), 5u, (tUInt8)(DEF_x__h3586));
  DEF_result___1__h3630 = primSLT8(1u,
				   32u,
				   (tUInt32)(DEF_v__h3063),
				   32u,
				   (tUInt32)(DEF_v__h3126)) ? 1u : 0u;
  DEF_result___1__h3639 = DEF_v__h3063 < DEF_v__h3126 ? 1u : 0u;
  DEF_result___1__h3648 = DEF_v__h3063 ^ DEF_v__h3126;
  DEF_result___1__h3653 = primShiftR32(32u, 32u, (tUInt32)(DEF_v__h3063), 5u, (tUInt8)(DEF_x__h3586));
  DEF_result___1__h3700 = primShiftRA32(32u,
					32u,
					(tUInt32)(DEF_v__h3063),
					5u,
					(tUInt8)(DEF_x__h3586));
  DEF_result___1__h3748 = DEF_v__h3063 | DEF_v__h3126;
  DEF_result___1__h3753 = DEF_v__h3063 & DEF_v__h3126;
  DEF_x__h3206 = DEF_pc__h2884;
  DEF__theResult_____1_fst_val__h3377 = DEF_pc__h2884;
  DEF_result___1__h3219 = ((tUInt32)(1048575u & primSignExt32(32u,
							      20u,
							      (tUInt32)(DEF_imm20_U__h2894)))) << 12u;
  DEF_result___1__h3242 = DEF_result___1__h3219 + DEF_pc__h2884;
  DEF__theResult_____1_fst_val__h3383 = DEF__theResult_____1_fst_val__h3377;
  DEF_s1_reg_if_id_8_BITS_7_TO_1_1_EQ_0b1101111___d32 = DEF_op__h1805 == (tUInt8)111u;
  DEF_jalr_target_temp__h1814 = DEF_pc__h1797 + primSignExt32(32u,
							      12u,
							      (tUInt32)(DEF_imm12_I__h1804));
  DEF_x1_avValue_snd_branch_target__h2490 = DEF_jalr_target_temp__h1814;
  DEF_rs2_val__h1808 = DEF_rs2__h1801 == (tUInt8)0u ? 0u : DEF_x__h2387;
  DEF_rs1_val__h1807 = DEF_rs1__h1800 == (tUInt8)0u ? 0u : DEF_x__h2091;
  DEF_IF_s3_reg_ex_mem_49_BITS_74_TO_72_56_EQ_0b0_66_ETC___d302 = DEF_s3_reg_ex_mem_49_BITS_74_TO_72_56_EQ_0b0___d266 ? DEF_x__h4649 : DEF_x__h5279;
  DEF_IF_s3_reg_ex_mem_49_BITS_74_TO_72_56_EQ_0b0_66_ETC___d287 = DEF_s3_reg_ex_mem_49_BITS_74_TO_72_56_EQ_0b0___d266 ? DEF_x__h4649 : DEF_x__h5181;
  DEF_IF_s3_reg_ex_mem_49_BITS_74_TO_72_56_EQ_0b0_66_ETC___d296 = DEF_s3_reg_ex_mem_49_BITS_74_TO_72_56_EQ_0b0___d266 ? DEF_x__h4649 : DEF_x__h5237;
  DEF_x1_avValue_snd_rd__h5691 = DEF_rd__h4359;
  DEF__theResult_____1_snd_snd_rd__h4158 = DEF_rd__h2888;
  switch (DEF_op__h2889) {
  case (tUInt8)19u:
  case (tUInt8)23u:
  case (tUInt8)51u:
  case (tUInt8)55u:
    DEF_IF_s2_reg_id_ex_4_BITS_204_TO_198_14_EQ_0b1101_ETC___d243 = DEF_rd__h2888;
    break;
  default:
    DEF_IF_s2_reg_id_ex_4_BITS_204_TO_198_14_EQ_0b1101_ETC___d243 = DEF__theResult_____1_snd_snd_rd__h4158;
  }
  DEF_IF_s3_reg_ex_mem_49_BIT_0_52_THEN_s3_reg_ex_me_ETC___d254 = DEF_s3_reg_ex_mem_49_BIT_0___d252 ? DEF_s3_reg_ex_mem___d249.get_bits_in_word8(2u,
																		 6u,
																		 2u) : (tUInt8)3u;
  DEF_IF_s3_reg_ex_mem_49_BIT_0_52_THEN_s3_reg_ex_me_ETC___d265 = DEF_IF_s3_reg_ex_mem_49_BIT_0_52_THEN_s3_reg_ex_me_ETC___d254 == (tUInt8)2u;
  DEF_IF_s3_reg_ex_mem_49_BIT_0_52_THEN_s3_reg_ex_me_ETC___d255 = DEF_IF_s3_reg_ex_mem_49_BIT_0_52_THEN_s3_reg_ex_me_ETC___d254 == (tUInt8)1u;
  switch (DEF_op__h2889) {
  case (tUInt8)3u:
    DEF_IF_s2_reg_id_ex_4_BITS_204_TO_198_14_EQ_0b1101_ETC___d143 = (tUInt8)1u;
    break;
  case (tUInt8)35u:
    DEF_IF_s2_reg_id_ex_4_BITS_204_TO_198_14_EQ_0b1101_ETC___d143 = (tUInt8)2u;
    break;
  case (tUInt8)99u:
    DEF_IF_s2_reg_id_ex_4_BITS_204_TO_198_14_EQ_0b1101_ETC___d143 = (tUInt8)3u;
    break;
  default:
    DEF_IF_s2_reg_id_ex_4_BITS_204_TO_198_14_EQ_0b1101_ETC___d143 = (tUInt8)0u;
  }
  DEF_IF_s1_reg_if_id_8_BITS_20_TO_16_3_EQ_0_4_THEN__ETC___d54 = DEF_rs1_val__h1807 == DEF_rs2_val__h1808;
  DEF_IF_s1_reg_if_id_8_BITS_20_TO_16_3_EQ_0_4_THEN__ETC___d58 = primSLT8(1u,
									  32u,
									  (tUInt32)(DEF_rs1_val__h1807),
									  32u,
									  (tUInt32)(DEF_rs2_val__h1808));
  switch (DEF_f3__h1806) {
  case (tUInt8)0u:
    DEF_IF_s1_reg_if_id_8_BITS_15_TO_13_8_EQ_0b0_9_THE_ETC___d70 = DEF_IF_s1_reg_if_id_8_BITS_20_TO_16_3_EQ_0_4_THEN__ETC___d54;
    break;
  case (tUInt8)1u:
    DEF_IF_s1_reg_if_id_8_BITS_15_TO_13_8_EQ_0b0_9_THE_ETC___d70 = !DEF_IF_s1_reg_if_id_8_BITS_20_TO_16_3_EQ_0_4_THEN__ETC___d54;
    break;
  case (tUInt8)4u:
    DEF_IF_s1_reg_if_id_8_BITS_15_TO_13_8_EQ_0b0_9_THE_ETC___d70 = DEF_IF_s1_reg_if_id_8_BITS_20_TO_16_3_EQ_0_4_THEN__ETC___d58;
    break;
  case (tUInt8)5u:
    DEF_IF_s1_reg_if_id_8_BITS_15_TO_13_8_EQ_0b0_9_THE_ETC___d70 = !DEF_IF_s1_reg_if_id_8_BITS_20_TO_16_3_EQ_0_4_THEN__ETC___d58;
    break;
  case (tUInt8)6u:
    DEF_IF_s1_reg_if_id_8_BITS_15_TO_13_8_EQ_0b0_9_THE_ETC___d70 = DEF_rs1_val__h1807 < DEF_rs2_val__h1808;
    break;
  default:
    DEF_IF_s1_reg_if_id_8_BITS_15_TO_13_8_EQ_0b0_9_THE_ETC___d70 = DEF_f3__h1806 == (tUInt8)7u && DEF_rs1_val__h1807 <= DEF_rs2_val__h1808;
  }
  DEF_x__h3567 = 1023u & ((((tUInt32)(DEF_f7__h2891)) << 3u) | (tUInt32)(DEF_f3__h2890));
  switch (DEF_x__h3567) {
  case 0u:
    DEF__theResult_____1__h3265 = DEF_result___1__h3571;
    break;
  case 256u:
    DEF__theResult_____1__h3265 = DEF_result___1__h3577;
    break;
  case 1u:
    DEF__theResult_____1__h3265 = DEF_result___1__h3583;
    break;
  case 2u:
    DEF__theResult_____1__h3265 = DEF_result___1__h3630;
    break;
  case 3u:
    DEF__theResult_____1__h3265 = DEF_result___1__h3639;
    break;
  case 4u:
    DEF__theResult_____1__h3265 = DEF_result___1__h3648;
    break;
  case 5u:
    DEF__theResult_____1__h3265 = DEF_result___1__h3653;
    break;
  case 261u:
    DEF__theResult_____1__h3265 = DEF_result___1__h3700;
    break;
  case 6u:
    DEF__theResult_____1__h3265 = DEF_result___1__h3748;
    break;
  default:
    DEF__theResult_____1__h3265 = DEF_result___1__h3753;
  }
  DEF_s1_reg_if_id_8_BITS_7_TO_1_1_EQ_0b1100111___d44 = DEF_op__h1805 == (tUInt8)103u;
  DEF_s1_reg_if_id_8_BITS_7_TO_1_1_EQ_0b1101111_2_OR_ETC___d71 = DEF_s1_reg_if_id_8_BITS_7_TO_1_1_EQ_0b1101111___d32 || DEF_s1_reg_if_id_8_BITS_7_TO_1_1_EQ_0b1100111___d44;
  DEF_IF_s1_reg_if_id_8_BITS_7_TO_1_1_EQ_0b1100011_2_ETC___d72 = DEF_s1_reg_if_id_8_BITS_7_TO_1_1_EQ_0b1100011___d22 ? DEF_IF_s1_reg_if_id_8_BITS_15_TO_13_8_EQ_0b0_9_THE_ETC___d70 : DEF_s1_reg_if_id_8_BITS_7_TO_1_1_EQ_0b1101111_2_OR_ETC___d71;
  DEF_s3_reg_ex_mem_49_BITS_74_TO_72_56_EQ_0b0_66_AN_ETC___d298 = DEF_s3_reg_ex_mem_49_BITS_74_TO_72_56_EQ_0b0___d266 && DEF_s3_reg_ex_mem_49_BITS_7_TO_6___d267 == (tUInt8)3u;
  DEF_s3_reg_ex_mem_49_BITS_74_TO_72_56_EQ_0b0_66_AN_ETC___d289 = DEF_s3_reg_ex_mem_49_BITS_74_TO_72_56_EQ_0b0___d266 && DEF_s3_reg_ex_mem_49_BITS_7_TO_6___d267 == (tUInt8)2u;
  DEF_s3_reg_ex_mem_49_BITS_74_TO_72_56_EQ_0b0_66_AN_ETC___d283 = DEF_s3_reg_ex_mem_49_BITS_74_TO_72_56_EQ_0b0___d266 && DEF_s3_reg_ex_mem_49_BITS_7_TO_6___d267 == (tUInt8)1u;
  DEF_s3_reg_ex_mem_49_BITS_74_TO_72_56_EQ_0b0_66_AN_ETC___d269 = DEF_s3_reg_ex_mem_49_BITS_74_TO_72_56_EQ_0b0___d266 && DEF_s3_reg_ex_mem_49_BITS_7_TO_6___d267 == (tUInt8)0u;
  DEF_s4_reg_mem_wb_47_BIT_38_49_AND_s4_reg_mem_wb_4_ETC___d350 = (tUInt8)(DEF_s4_reg_mem_wb___d347 >> 38u) && DEF_s4_reg_mem_wb_47_BIT_0___d348;
  DEF_s4_reg_mem_wb_47_BIT_38_49_AND_s4_reg_mem_wb_4_ETC___d355 = DEF_s4_reg_mem_wb_47_BIT_38_49_AND_s4_reg_mem_wb_4_ETC___d350 && !(DEF_rd__h6164 == (tUInt8)0u);
  DEF_NOT_IF_s3_reg_ex_mem_49_BIT_0_52_THEN_s3_reg_e_ETC___d318 = !(DEF_IF_s3_reg_ex_mem_49_BIT_0_52_THEN_s3_reg_ex_me_ETC___d254 == (tUInt8)3u) && (DEF_IF_s3_reg_ex_mem_49_BIT_0_52_THEN_s3_reg_ex_me_ETC___d254 == (tUInt8)0u || (DEF_IF_s3_reg_ex_mem_49_BIT_0_52_THEN_s3_reg_ex_me_ETC___d255 && (DEF_s3_reg_ex_mem_49_BITS_74_TO_72_56_EQ_0b0___d266 || (DEF_s3_reg_ex_mem_49_BITS_74_TO_72_56_EQ_0b1___d271 || (DEF_s3_reg_ex_mem_49_BITS_74_TO_72_56_EQ_0b10___d257 || (DEF_f3__h4360 == (tUInt8)4u || DEF_f3__h4360 == (tUInt8)5u))))));
  DEF_IF_s3_reg_ex_mem_49_BIT_0_52_THEN_s3_reg_ex_me_ETC___d306 = DEF_IF_s3_reg_ex_mem_49_BIT_0_52_THEN_s3_reg_ex_me_ETC___d265 && DEF_s3_reg_ex_mem_49_BITS_74_TO_72_56_EQ_0b0_66_AN_ETC___d298;
  DEF_IF_s3_reg_ex_mem_49_BIT_0_52_THEN_s3_reg_ex_me_ETC___d305 = DEF_IF_s3_reg_ex_mem_49_BIT_0_52_THEN_s3_reg_ex_me_ETC___d265 && DEF_s3_reg_ex_mem_49_BITS_74_TO_72_56_EQ_0b0_66_AN_ETC___d289;
  DEF_IF_s3_reg_ex_mem_49_BIT_0_52_THEN_s3_reg_ex_me_ETC___d304 = DEF_IF_s3_reg_ex_mem_49_BIT_0_52_THEN_s3_reg_ex_me_ETC___d265 && DEF_s3_reg_ex_mem_49_BITS_74_TO_72_56_EQ_0b0_66_AN_ETC___d283;
  DEF_IF_s3_reg_ex_mem_49_BIT_0_52_THEN_s3_reg_ex_me_ETC___d303 = DEF_IF_s3_reg_ex_mem_49_BIT_0_52_THEN_s3_reg_ex_me_ETC___d265 && DEF_s3_reg_ex_mem_49_BITS_74_TO_72_56_EQ_0b0_66_AN_ETC___d269;
  DEF_NOT_s3_reg_ex_mem_49_BITS_74_TO_72_56_EQ_0b0_66___d270 = !DEF_s3_reg_ex_mem_49_BITS_74_TO_72_56_EQ_0b0___d266;
  DEF_NOT_s3_reg_ex_mem_49_BITS_74_TO_72_56_EQ_0b0_6_ETC___d292 = DEF_NOT_s3_reg_ex_mem_49_BITS_74_TO_72_56_EQ_0b0_66___d270 && ((DEF_s3_reg_ex_mem_49_BITS_74_TO_72_56_EQ_0b1___d271 && DEF_s3_reg_ex_mem_49_BIT_6___d272) || DEF_s3_reg_ex_mem_49_BITS_74_TO_72_56_EQ_0b10___d257);
  DEF_NOT_s3_reg_ex_mem_49_BITS_74_TO_72_56_EQ_0b0_6_ETC___d276 = DEF_NOT_s3_reg_ex_mem_49_BITS_74_TO_72_56_EQ_0b0_66___d270 && ((DEF_s3_reg_ex_mem_49_BITS_74_TO_72_56_EQ_0b1___d271 && !DEF_s3_reg_ex_mem_49_BIT_6___d272) || DEF_s3_reg_ex_mem_49_BITS_74_TO_72_56_EQ_0b10___d257);
  DEF_IF_s3_reg_ex_mem_49_BIT_0_52_THEN_s3_reg_ex_me_ETC___d300 = DEF_IF_s3_reg_ex_mem_49_BIT_0_52_THEN_s3_reg_ex_me_ETC___d265 && (DEF_s3_reg_ex_mem_49_BITS_74_TO_72_56_EQ_0b0_66_AN_ETC___d298 || DEF_NOT_s3_reg_ex_mem_49_BITS_74_TO_72_56_EQ_0b0_6_ETC___d292);
  DEF_IF_s3_reg_ex_mem_49_BIT_0_52_THEN_s3_reg_ex_me_ETC___d294 = DEF_IF_s3_reg_ex_mem_49_BIT_0_52_THEN_s3_reg_ex_me_ETC___d265 && (DEF_s3_reg_ex_mem_49_BITS_74_TO_72_56_EQ_0b0_66_AN_ETC___d289 || DEF_NOT_s3_reg_ex_mem_49_BITS_74_TO_72_56_EQ_0b0_6_ETC___d292);
  DEF_IF_s3_reg_ex_mem_49_BIT_0_52_THEN_s3_reg_ex_me_ETC___d278 = DEF_IF_s3_reg_ex_mem_49_BIT_0_52_THEN_s3_reg_ex_me_ETC___d265 && (DEF_s3_reg_ex_mem_49_BITS_74_TO_72_56_EQ_0b0_66_AN_ETC___d269 || DEF_NOT_s3_reg_ex_mem_49_BITS_74_TO_72_56_EQ_0b0_6_ETC___d276);
  DEF_IF_s3_reg_ex_mem_49_BIT_0_52_THEN_s3_reg_ex_me_ETC___d285 = DEF_IF_s3_reg_ex_mem_49_BIT_0_52_THEN_s3_reg_ex_me_ETC___d265 && (DEF_s3_reg_ex_mem_49_BITS_74_TO_72_56_EQ_0b0_66_AN_ETC___d283 || DEF_NOT_s3_reg_ex_mem_49_BITS_74_TO_72_56_EQ_0b0_6_ETC___d276);
  DEF_IF_s3_reg_ex_mem_49_BIT_0_52_THEN_s3_reg_ex_me_ETC___d258 = DEF_IF_s3_reg_ex_mem_49_BIT_0_52_THEN_s3_reg_ex_me_ETC___d255 && DEF_s3_reg_ex_mem_49_BITS_74_TO_72_56_EQ_0b10___d257;
  DEF_NOT_s2_reg_branch_BIT_32___d4 = !DEF_s2_reg_branch_BIT_32___d2;
  DEF_NOT_s2_reg_branch_BIT_32_AND_s1_reg_if_id_8_BI_ETC___d73 = DEF_NOT_s2_reg_branch_BIT_32___d4 && DEF_s1_reg_if_id_8_BIT_0___d20;
  DEF_imm21_UJ__h1803 = 2097151u & (((((((tUInt32)(DEF_s1_reg_if_id_8_BIT_32___d24)) << 20u) | (((tUInt32)(DEF_s1_reg_if_id___d18.get_bits_in_word8(0u,
																		    13u,
																		    8u))) << 12u)) | (((tUInt32)(DEF_s1_reg_if_id___d18.get_bits_in_word8(0u,
																											  21u,
																											  1u))) << 11u)) | (DEF_s1_reg_if_id___d18.get_bits_in_word32(0u,
																																		      22u,
																																		      10u) << 1u)) | (tUInt32)((tUInt8)0u));
  DEF_jal_target_temp__h1813 = DEF_rs1_val__h1807 + primSignExt32(32u,
								  21u,
								  (tUInt32)(DEF_imm21_UJ__h1803));
  DEF_x1_avValue_snd_branch_target__h2492 = DEF_s1_reg_if_id_8_BITS_7_TO_1_1_EQ_0b1101111___d32 ? DEF_jal_target_temp__h1813 : DEF_x1_avValue_snd_branch_target__h2490;
  DEF_s4_dmem1_sub_s3_reg_ex_mem_49_BITS_37_TO_6_50__ETC___d263 = 65535u & ((((tUInt32)(DEF_x__h4494)) << 8u) | (tUInt32)(DEF_x__h4495));
  DEF_f___1_rd_val__h5684 = DEF_s4_dmem1_sub_s3_reg_ex_mem_49_BITS_37_TO_6_50__ETC___d263;
  DEF_load_data__h4469 = ((((tUInt32)(DEF_x__h4492)) << 24u) | (((tUInt32)(DEF_x__h4493)) << 16u)) | DEF_s4_dmem1_sub_s3_reg_ex_mem_49_BITS_37_TO_6_50__ETC___d263;
  DEF_f___1_rd_val__h5670 = primSignExt32(32u,
					  16u,
					  (tUInt32)(DEF_s4_dmem1_sub_s3_reg_ex_mem_49_BITS_37_TO_6_50__ETC___d263));
  switch (DEF_f3__h4360) {
  case (tUInt8)0u:
    DEF_x1_avValue_snd_rd_val__h5692 = DEF_f___1_rd_val__h5664;
    break;
  case (tUInt8)1u:
    DEF_x1_avValue_snd_rd_val__h5692 = DEF_f___1_rd_val__h5670;
    break;
  case (tUInt8)2u:
    DEF_x1_avValue_snd_rd_val__h5692 = DEF_load_data__h4469;
    break;
  case (tUInt8)4u:
    DEF_x1_avValue_snd_rd_val__h5692 = DEF_f___1_rd_val__h5678;
    break;
  case (tUInt8)5u:
    DEF_x1_avValue_snd_rd_val__h5692 = DEF_f___1_rd_val__h5684;
    break;
  default:
    DEF_x1_avValue_snd_rd_val__h5692 = DEF__read_val__h4279;
  }
  switch (DEF_IF_s3_reg_ex_mem_49_BIT_0_52_THEN_s3_reg_ex_me_ETC___d254) {
  case (tUInt8)1u:
    DEF_IF_IF_s3_reg_ex_mem_49_BIT_0_52_THEN_s3_reg_ex_ETC___d344 = 274877906943llu & (((((tUInt64)(DEF_x1_avValue_snd_rd__h5691)) << 33u) | (((tUInt64)(DEF_x1_avValue_snd_rd_val__h5692)) << 1u)) | (tUInt64)(DEF_s3_reg_ex_mem_49_BIT_0___d252));
    break;
  default:
    DEF_IF_IF_s3_reg_ex_mem_49_BIT_0_52_THEN_s3_reg_ex_ETC___d344 = DEF_s3_reg_ex_mem_49_BITS_5_TO_1_20_CONCAT_s3_reg__ETC___d341;
  }
  DEF_instr_SB_imm13__h1802 = 8191u & (((((((tUInt32)(DEF_s1_reg_if_id_8_BIT_32___d24)) << 12u) | (((tUInt32)(DEF_s1_reg_if_id___d18.get_bits_in_word8(0u,
																		       8u,
																		       1u))) << 11u)) | (((tUInt32)(DEF_s1_reg_if_id___d18.get_bits_in_word8(0u,
																											     26u,
																											     6u))) << 5u)) | (((tUInt32)(DEF_s1_reg_if_id___d18.get_bits_in_word8(0u,
																																				  9u,
																																				  4u))) << 1u)) | (tUInt32)((tUInt8)0u));
  DEF_b__h4041 = primSignExt32(32u, 12u, (tUInt32)(DEF_imm12_S__h2893));
  DEF_addr___1__h3326 = DEF_v__h3063 + DEF_b__h4041;
  DEF__theResult_____1_snd_fst_addr__h3390 = DEF_addr___1__h3326;
  DEF_b__h3780 = primSignExt32(32u, 12u, (tUInt32)(DEF_imm12_I__h2892));
  DEF_addr___1__h3307 = DEF_v__h3063 + DEF_b__h3780;
  DEF_result___1__h3833 = primSLT8(1u,
				   32u,
				   (tUInt32)(DEF_v__h3063),
				   32u,
				   (tUInt32)(DEF_b__h3780)) ? 1u : 0u;
  DEF__theResult_____1_snd_fst_addr__h3396 = DEF_op__h2889 == (tUInt8)3u ? DEF_addr___1__h3307 : DEF__theResult_____1_snd_fst_addr__h3390;
  DEF_x__h4006 = DEF__theResult_____1_snd_fst_addr__h3396;
  DEF__0_CONCAT_s2_reg_id_ex_4_BITS_150_TO_139_91___d201 = DEF_imm12_I__h2892;
  DEF_result___1__h3845 = DEF_v__h3063 < DEF__0_CONCAT_s2_reg_id_ex_4_BITS_150_TO_139_91___d201 ? 1u : 0u;
  DEF_result___1__h3856 = DEF_v__h3063 ^ DEF__0_CONCAT_s2_reg_id_ex_4_BITS_150_TO_139_91___d201;
  DEF_result___1__h3973 = DEF_v__h3063 | DEF__0_CONCAT_s2_reg_id_ex_4_BITS_150_TO_139_91___d201;
  DEF_result___1__h3980 = DEF_v__h3063 & DEF__0_CONCAT_s2_reg_id_ex_4_BITS_150_TO_139_91___d201;
  switch (DEF_f3__h2890) {
  case (tUInt8)0u:
    DEF__theResult_____1__h3287 = DEF_addr___1__h3307;
    break;
  case (tUInt8)1u:
    DEF__theResult_____1__h3287 = DEF_result___1__h3787;
    break;
  case (tUInt8)2u:
    DEF__theResult_____1__h3287 = DEF_result___1__h3833;
    break;
  case (tUInt8)3u:
    DEF__theResult_____1__h3287 = DEF_result___1__h3845;
    break;
  case (tUInt8)4u:
    DEF__theResult_____1__h3287 = DEF_result___1__h3856;
    break;
  case (tUInt8)5u:
    DEF__theResult_____1__h3287 = DEF_s2_reg_id_ex___d94.get_bits_in_word8(4u,
									   21u,
									   1u) ? DEF_result___1__h3884 : DEF_result___1__h3927;
    break;
  case (tUInt8)6u:
    DEF__theResult_____1__h3287 = DEF_result___1__h3973;
    break;
  default:
    DEF__theResult_____1__h3287 = DEF_result___1__h3980;
  }
  switch (DEF_op__h2889) {
  case (tUInt8)55u:
    DEF_x__h3538 = DEF_result___1__h3219;
    break;
  case (tUInt8)23u:
    DEF_x__h3538 = DEF_result___1__h3242;
    break;
  case (tUInt8)51u:
    DEF_x__h3538 = DEF__theResult_____1__h3265;
    break;
  case (tUInt8)19u:
    DEF_x__h3538 = DEF__theResult_____1__h3287;
    break;
  case (tUInt8)35u:
    DEF_x__h3538 = DEF_v__h3126;
    break;
  default:
    DEF_x__h3538 = DEF__theResult_____1_fst_val__h3383;
  }
  DEF__theResult_____1_snd_snd_snd_rd_val__h4162 = DEF__theResult_____1__h3287;
  switch (DEF_op__h2889) {
  case (tUInt8)55u:
    DEF_IF_s2_reg_id_ex_4_BITS_204_TO_198_14_EQ_0b1101_ETC___d247 = DEF_result___1__h3219;
    break;
  case (tUInt8)23u:
    DEF_IF_s2_reg_id_ex_4_BITS_204_TO_198_14_EQ_0b1101_ETC___d247 = DEF_result___1__h3242;
    break;
  case (tUInt8)51u:
    DEF_IF_s2_reg_id_ex_4_BITS_204_TO_198_14_EQ_0b1101_ETC___d247 = DEF__theResult_____1__h3265;
    break;
  default:
    DEF_IF_s2_reg_id_ex_4_BITS_204_TO_198_14_EQ_0b1101_ETC___d247 = DEF__theResult_____1_snd_snd_snd_rd_val__h4162;
  }
  DEF_step_56_PLUS_1___d357 = DEF_b__h6287 + 1u;
  DEF_x__h1634 = DEF_v__h1496 + 4u;
  DEF_branch_target_temp__h1812 = DEF_pc__h1797 + primSignExt32(32u,
								13u,
								(tUInt32)(DEF_instr_SB_imm13__h1802));
  DEF_IF_s1_reg_if_id_8_BITS_7_TO_1_1_EQ_0b1100011_2_ETC___d78 = DEF_s1_reg_if_id_8_BITS_7_TO_1_1_EQ_0b1100011___d22 ? 8589934591llu & ((((tUInt64)(DEF_IF_s1_reg_if_id_8_BITS_15_TO_13_8_EQ_0b0_9_THE_ETC___d70)) << 32u) | (tUInt64)(DEF_branch_target_temp__h1812)) : 8589934591llu & ((((tUInt64)(DEF_s1_reg_if_id_8_BITS_7_TO_1_1_EQ_0b1101111_2_OR_ETC___d71)) << 32u) | (tUInt64)(DEF_x1_avValue_snd_branch_target__h2492));
  DEF_IF_s1_reg_if_id_8_BITS_20_TO_16_3_EQ_0_4_THEN__ETC___d92.set_bits_in_word((tUInt8)(DEF_rs1_val__h1807 >> 31u),
										2u,
										0u,
										1u).set_whole_word((((tUInt32)(2147483647u & DEF_rs1_val__h1807)) << 1u) | (tUInt32)((tUInt8)(DEF_rs2_val__h1808 >> 31u)),
												   1u).set_whole_word((((tUInt32)(2147483647u & DEF_rs2_val__h1808)) << 1u) | (tUInt32)(DEF_NOT_s2_reg_branch_BIT_32_AND_s1_reg_if_id_8_BI_ETC___d73),
														      0u);
  DEF_IF_s2_reg_id_ex_4_BITS_204_TO_198_14_EQ_0b1101_ETC___d240.set_bits_in_word((tUInt8)255u & ((DEF_IF_s2_reg_id_ex_4_BITS_204_TO_198_14_EQ_0b1101_ETC___d143 << 6u) | (tUInt8)(DEF_x__h3538 >> 26u)),
										 2u,
										 0u,
										 8u).set_whole_word((((tUInt32)(67108863u & DEF_x__h3538)) << 6u) | (tUInt32)((tUInt8)(DEF_x__h4006 >> 26u)),
												    1u).set_whole_word(((((tUInt32)(67108863u & DEF_x__h4006)) << 6u) | (((tUInt32)(DEF_rd__h2888)) << 1u)) | (tUInt32)(DEF_s2_reg_id_ex_4_BIT_0___d97),
														       0u);
  DEF_IF_s2_reg_id_ex_4_BITS_204_TO_198_14_EQ_0b1101_ETC___d241.set_bits_in_word((tUInt32)(DEF_x__h3206 >> 21u),
										 3u,
										 0u,
										 11u).set_whole_word(((((tUInt32)(2097151u & DEF_x__h3206)) << 11u) | (((tUInt32)(DEF_f3__h2890)) << 8u)) | (tUInt32)(DEF_IF_s2_reg_id_ex_4_BITS_204_TO_198_14_EQ_0b1101_ETC___d240.get_bits_in_word8(2u,
																																		      0u,
																																		      8u)),
												     2u).set_whole_word(DEF_IF_s2_reg_id_ex_4_BITS_204_TO_198_14_EQ_0b1101_ETC___d240.get_whole_word(1u),
															1u).set_whole_word(DEF_IF_s2_reg_id_ex_4_BITS_204_TO_198_14_EQ_0b1101_ETC___d240.get_whole_word(0u),
																	   0u);
  DEF_decoded_instr_funct10__h1831 = 1023u & ((((tUInt32)(DEF_x__h2577)) << 3u) | (tUInt32)(DEF_f3__h1806));
  DEF_x__h2638 = 4095u & ((((tUInt32)(DEF_x__h2577)) << 5u) | (tUInt32)(DEF_x__h2533));
  DEF_s1_reg_if_id_8_BITS_32_TO_26_1_CONCAT_s1_reg_i_ETC___d88.set_bits_in_word((tUInt32)(DEF_x__h2638 >> 2u),
										2u,
										0u,
										10u).set_whole_word(((((tUInt32)((tUInt8)((tUInt8)3u & DEF_x__h2638))) << 30u) | (DEF_instr_SB_imm13__h1802 << 17u)) | (tUInt32)(DEF_decoded_instr_imm20_U__h1835 >> 3u),
												    1u).set_whole_word(((((tUInt32)((tUInt8)((tUInt8)7u & DEF_decoded_instr_imm20_U__h1835))) << 29u) | (DEF_imm21_UJ__h1803 << 8u)) | (tUInt32)(DEF_s1_reg_if_id___d18.get_bits_in_word8(0u,
																																			  21u,
																																			  8u)),
														       0u);
  DEF_s1_reg_if_id_8_BITS_32_TO_26_1_CONCAT_s1_reg_i_ETC___d89.set_whole_word(((DEF_decoded_instr_funct10__h1831 << 22u) | (DEF_imm12_I__h1804 << 10u)) | DEF_s1_reg_if_id_8_BITS_32_TO_26_1_CONCAT_s1_reg_i_ETC___d88.get_bits_in_word32(2u,
																													  0u,
																													  10u),
									      2u).set_whole_word(DEF_s1_reg_if_id_8_BITS_32_TO_26_1_CONCAT_s1_reg_i_ETC___d88.get_whole_word(1u),
												 1u).set_whole_word(DEF_s1_reg_if_id_8_BITS_32_TO_26_1_CONCAT_s1_reg_i_ETC___d88.get_whole_word(0u),
														    0u);
  DEF_s1_reg_if_id_8_BITS_25_TO_21_0_CONCAT_s1_reg_i_ETC___d90.build_concat(576460752303423487llu & (((((((tUInt64)(DEF_rs2__h1801)) << 54u) | (((tUInt64)(DEF_imm12_I__h1804)) << 42u)) | (((tUInt64)(DEF_f3__h1806)) << 39u)) | (((tUInt64)(DEF_x__h2577)) << 32u)) | (tUInt64)(DEF_s1_reg_if_id_8_BITS_32_TO_26_1_CONCAT_s1_reg_i_ETC___d89.get_whole_word(2u))),
									    64u,
									    59u).set_whole_word(DEF_s1_reg_if_id_8_BITS_32_TO_26_1_CONCAT_s1_reg_i_ETC___d89.get_whole_word(1u),
												1u).set_whole_word(DEF_s1_reg_if_id_8_BITS_32_TO_26_1_CONCAT_s1_reg_i_ETC___d89.get_whole_word(0u),
														   0u);
  DEF_s1_reg_if_id_8_BITS_7_TO_1_1_CONCAT_s1_reg_if__ETC___d91.build_concat(17592186044415llu & ((((((tUInt64)(DEF_op__h1805)) << 37u) | (((tUInt64)(DEF_x__h2533)) << 32u)) | (((tUInt64)(DEF_rs1__h1800)) << 27u)) | (tUInt64)(DEF_s1_reg_if_id_8_BITS_25_TO_21_0_CONCAT_s1_reg_i_ETC___d90.get_bits_in_word32(3u,
																																						 0u,
																																						 27u))),
									    96u,
									    44u).set_whole_word(DEF_s1_reg_if_id_8_BITS_25_TO_21_0_CONCAT_s1_reg_i_ETC___d90.get_whole_word(2u),
												2u).set_whole_word(DEF_s1_reg_if_id_8_BITS_25_TO_21_0_CONCAT_s1_reg_i_ETC___d90.get_whole_word(1u),
														   1u).set_whole_word(DEF_s1_reg_if_id_8_BITS_25_TO_21_0_CONCAT_s1_reg_i_ETC___d90.get_whole_word(0u),
																      0u);
  DEF_s1_reg_if_id_8_BITS_64_TO_33_3_CONCAT_s1_reg_i_ETC___d93.set_bits_in_word((tUInt32)(DEF_pc__h1797 >> 19u),
										7u,
										0u,
										13u).set_whole_word((((tUInt32)(524287u & DEF_pc__h1797)) << 13u) | primExtract32(13u,
																				  140u,
																				  DEF_s1_reg_if_id_8_BITS_7_TO_1_1_CONCAT_s1_reg_if__ETC___d91,
																				  32u,
																				  139u,
																				  32u,
																				  127u),
												    6u).set_whole_word(primExtract32(32u,
																     140u,
																     DEF_s1_reg_if_id_8_BITS_7_TO_1_1_CONCAT_s1_reg_if__ETC___d91,
																     32u,
																     126u,
																     32u,
																     95u),
														       5u).set_whole_word(primExtract32(32u,
																			140u,
																			DEF_s1_reg_if_id_8_BITS_7_TO_1_1_CONCAT_s1_reg_if__ETC___d91,
																			32u,
																			94u,
																			32u,
																			63u),
																	  4u).set_whole_word(primExtract32(32u,
																					   140u,
																					   DEF_s1_reg_if_id_8_BITS_7_TO_1_1_CONCAT_s1_reg_if__ETC___d91,
																					   32u,
																					   62u,
																					   32u,
																					   31u),
																			     3u).set_whole_word((DEF_s1_reg_if_id_8_BITS_7_TO_1_1_CONCAT_s1_reg_if__ETC___d91.get_bits_in_word32(0u,
																																 0u,
																																 31u) << 1u) | (tUInt32)(DEF_IF_s1_reg_if_id_8_BITS_20_TO_16_3_EQ_0_4_THEN__ETC___d92.get_bits_in_word8(2u,
																																													0u,
																																													1u)),
																						2u).set_whole_word(DEF_IF_s1_reg_if_id_8_BITS_20_TO_16_3_EQ_0_4_THEN__ETC___d92.get_whole_word(1u),
																								   1u).set_whole_word(DEF_IF_s1_reg_if_id_8_BITS_20_TO_16_3_EQ_0_4_THEN__ETC___d92.get_whole_word(0u),
																										      0u);
  DEF_x__h1665 = (((((tUInt32)(DEF_x__h1670)) << 24u) | (((tUInt32)(DEF_x__h1672)) << 16u)) | (((tUInt32)(DEF_x__h1692)) << 8u)) | (tUInt32)(DEF_x__h1695);
  DEF_IF_s2_reg_branch_BIT_32_THEN_s2_reg_branch_BIT_ETC___d17.set_bits_in_word((tUInt8)(DEF_x__h1634 >> 31u),
										2u,
										0u,
										1u).set_whole_word((((tUInt32)(2147483647u & DEF_x__h1634)) << 1u) | (tUInt32)((tUInt8)(DEF_x__h1665 >> 31u)),
												   1u).set_whole_word((((tUInt32)(2147483647u & DEF_x__h1665)) << 1u) | (tUInt32)((tUInt8)1u),
														      0u);
  DEF_NOT_IF_s3_reg_ex_mem_49_BIT_0_52_THEN_s3_reg_e_ETC___d346 = 549755813887llu & ((((tUInt64)(DEF_NOT_IF_s3_reg_ex_mem_49_BIT_0_52_THEN_s3_reg_e_ETC___d318)) << 38u) | DEF_IF_IF_s3_reg_ex_mem_49_BIT_0_52_THEN_s3_reg_ex_ETC___d344);
  DEF_NOT_IF_s3_reg_ex_mem_49_BIT_0_52_THEN_s3_reg_e_ETC___d336 = 274877906943llu & ((((tUInt64)(DEF_NOT_IF_s3_reg_ex_mem_49_BIT_0_52_THEN_s3_reg_e_ETC___d318)) << 37u) | (DEF_IF_s3_reg_ex_mem_49_BIT_0_52_THEN_s3_reg_ex_me_ETC___d255 ? 137438953471llu & ((((tUInt64)(DEF_x1_avValue_snd_rd__h5691)) << 32u) | (tUInt64)(DEF_x1_avValue_snd_rd_val__h5692)) : DEF_s3_reg_ex_mem_49_BITS_5_TO_1_20_CONCAT_s3_reg__ETC___d332));
  DEF_s2_reg_id_ex_4_BITS_204_TO_198_14_EQ_0b110111__ETC___d248 = 274877906943llu & (((((tUInt64)(DEF_op__h2889 == (tUInt8)55u || (DEF_op__h2889 == (tUInt8)23u || (DEF_op__h2889 == (tUInt8)51u || DEF_op__h2889 == (tUInt8)19u)))) << 37u) | (((tUInt64)(DEF_IF_s2_reg_id_ex_4_BITS_204_TO_198_14_EQ_0b1101_ETC___d243)) << 32u)) | (tUInt64)(DEF_IF_s2_reg_id_ex_4_BITS_204_TO_198_14_EQ_0b1101_ETC___d247));
  if (!(PORT_RST_N == (tUInt8)0u))
  {
    dollar_display(sim_hdl, this, "s", &__str_literal_7);
    dollar_display(sim_hdl, this, "s", &__str_literal_8);
    dollar_display(sim_hdl, this, "s,1", &__str_literal_9, DEF_s2_reg_branch_BIT_32___d2);
    if (DEF_s2_reg_branch_BIT_32___d2)
      dollar_display(sim_hdl, this, "s", &__str_literal_10);
    if (DEF_s2_reg_branch_BIT_32___d2)
      dollar_display(sim_hdl, this, "s,32", &__str_literal_11, DEF_branch_target__h1490);
    if (DEF_NOT_s2_reg_branch_BIT_32___d4)
      dollar_display(sim_hdl, this, "s", &__str_literal_12);
    dollar_display(sim_hdl, this, "s,32", &__str_literal_13, DEF_v__h1496);
  }
  INST_s1_reg_pc.METH_write(DEF_x__h1634);
  INST_s1_reg_if_id.METH_write(DEF_IF_s2_reg_branch_BIT_32_THEN_s2_reg_branch_BIT_ETC___d17);
  if (!(PORT_RST_N == (tUInt8)0u))
  {
    dollar_display(sim_hdl, this, "s", &__str_literal_14);
    dollar_display(sim_hdl, this, "s,32", &__str_literal_15, DEF__read_instr__h1749);
    dollar_display(sim_hdl, this, "s,1", &__str_literal_16, DEF_s1_reg_if_id_8_BIT_0___d20);
    if (DEF_s1_reg_if_id_8_BITS_7_TO_1_1_EQ_0b1100011___d22)
      dollar_display(sim_hdl, this, "s", &__str_literal_17);
    if (DEF_s1_reg_if_id_8_BITS_7_TO_1_1_EQ_0b1100011___d22)
      dollar_display(sim_hdl, this, "s,32", &__str_literal_18, DEF_branch_target_temp__h1812);
    if (DEF_s1_reg_if_id_8_BITS_7_TO_1_1_EQ_0b1101111___d32)
      dollar_display(sim_hdl, this, "s", &__str_literal_19);
    if (DEF_s1_reg_if_id_8_BITS_7_TO_1_1_EQ_0b1101111___d32)
      dollar_display(sim_hdl, this, "s,32", &__str_literal_20, DEF_jal_target_temp__h1813);
    if (DEF_s1_reg_if_id_8_BITS_7_TO_1_1_EQ_0b1100111___d44)
      dollar_display(sim_hdl, this, "s", &__str_literal_21);
    if (DEF_s1_reg_if_id_8_BITS_7_TO_1_1_EQ_0b1100111___d44)
      dollar_display(sim_hdl, this, "s,32", &__str_literal_22, DEF_jalr_target_temp__h1814);
    dollar_display(sim_hdl,
		   this,
		   "s,1",
		   &__str_literal_23,
		   DEF_IF_s1_reg_if_id_8_BITS_7_TO_1_1_EQ_0b1100011_2_ETC___d72);
    dollar_display(sim_hdl,
		   this,
		   "s,1",
		   &__str_literal_24,
		   DEF_NOT_s2_reg_branch_BIT_32_AND_s1_reg_if_id_8_BI_ETC___d73);
  }
  INST_s2_reg_branch.METH_write(DEF_IF_s1_reg_if_id_8_BITS_7_TO_1_1_EQ_0b1100011_2_ETC___d78);
  INST_s2_reg_id_ex.METH_write(DEF_s1_reg_if_id_8_BITS_64_TO_33_3_CONCAT_s1_reg_i_ETC___d93);
  if (!(PORT_RST_N == (tUInt8)0u))
  {
    dollar_display(sim_hdl, this, "s", &__str_literal_25);
    dollar_display(sim_hdl, this, "s,32", &__str_literal_26, DEF__read_rs1_val__h2811);
    dollar_display(sim_hdl, this, "s,32", &__str_literal_27, DEF__read_rs2_val__h2812);
    dollar_display(sim_hdl, this, "s,1", &__str_literal_16, DEF_s2_reg_id_ex_4_BIT_0___d97);
    if (DEF_s3_reg_forward_mem_8_BIT_37_9_AND_s2_reg_id_ex_ETC___d103)
      dollar_display(sim_hdl, this, "s", &__str_literal_28);
    if (DEF_s3_reg_forward_mem_8_BIT_37_9_AND_s2_reg_id_ex_ETC___d106)
      dollar_display(sim_hdl, this, "s", &__str_literal_29);
    if (DEF_s4_reg_forward_wb_07_BIT_37_08_AND_s2_reg_id_e_ETC___d111)
      dollar_display(sim_hdl, this, "s", &__str_literal_30);
    if (DEF_s4_reg_forward_wb_07_BIT_37_08_AND_s2_reg_id_e_ETC___d113)
      dollar_display(sim_hdl, this, "s", &__str_literal_31);
  }
  INST_s3_reg_ex_mem.METH_write(DEF_IF_s2_reg_id_ex_4_BITS_204_TO_198_14_EQ_0b1101_ETC___d241);
  INST_s3_reg_forward_mem.METH_write(DEF_s2_reg_id_ex_4_BITS_204_TO_198_14_EQ_0b110111__ETC___d248);
  if (!(PORT_RST_N == (tUInt8)0u))
  {
    dollar_display(sim_hdl, this, "s", &__str_literal_32);
    dollar_display(sim_hdl, this, "s,32", &__str_literal_33, DEF__read_addr__h4280);
    dollar_display(sim_hdl, this, "s,32", &__str_literal_34, DEF__read_val__h4279);
    dollar_display(sim_hdl, this, "s,1", &__str_literal_16, DEF_s3_reg_ex_mem_49_BIT_0___d252);
    if (DEF_IF_s3_reg_ex_mem_49_BIT_0_52_THEN_s3_reg_ex_me_ETC___d258)
      dollar_display(sim_hdl,
		     this,
		     "s,32,32",
		     &__str_literal_35,
		     DEF__read_addr__h4280,
		     DEF_load_data__h4469);
  }
  if (DEF_IF_s3_reg_ex_mem_49_BIT_0_52_THEN_s3_reg_ex_me_ETC___d278)
    INST_s4_dmem0.METH_upd(DEF_IF_s3_reg_ex_mem_49_BITS_74_TO_72_56_EQ_0b0_66_ETC___d280, DEF_x__h4649);
  if (DEF_IF_s3_reg_ex_mem_49_BIT_0_52_THEN_s3_reg_ex_me_ETC___d285)
    INST_s4_dmem1.METH_upd(DEF_IF_s3_reg_ex_mem_49_BITS_74_TO_72_56_EQ_0b0_66_ETC___d280,
			   DEF_IF_s3_reg_ex_mem_49_BITS_74_TO_72_56_EQ_0b0_66_ETC___d287);
  if (DEF_IF_s3_reg_ex_mem_49_BIT_0_52_THEN_s3_reg_ex_me_ETC___d294)
    INST_s4_dmem2.METH_upd(DEF_IF_s3_reg_ex_mem_49_BITS_74_TO_72_56_EQ_0b0_66_ETC___d280,
			   DEF_IF_s3_reg_ex_mem_49_BITS_74_TO_72_56_EQ_0b0_66_ETC___d296);
  if (DEF_IF_s3_reg_ex_mem_49_BIT_0_52_THEN_s3_reg_ex_me_ETC___d300)
    INST_s4_dmem3.METH_upd(DEF_IF_s3_reg_ex_mem_49_BITS_74_TO_72_56_EQ_0b0_66_ETC___d280,
			   DEF_IF_s3_reg_ex_mem_49_BITS_74_TO_72_56_EQ_0b0_66_ETC___d302);
  if (!(PORT_RST_N == (tUInt8)0u))
  {
    if (DEF_IF_s3_reg_ex_mem_49_BIT_0_52_THEN_s3_reg_ex_me_ETC___d303)
      dollar_display(sim_hdl, this, "s,32,8", &__str_literal_36, DEF_addr_byte__h4586, DEF_x__h4649);
    if (DEF_IF_s3_reg_ex_mem_49_BIT_0_52_THEN_s3_reg_ex_me_ETC___d304)
      dollar_display(sim_hdl, this, "s,32,8", &__str_literal_37, DEF_addr_byte__h4586, DEF_x__h4649);
    if (DEF_IF_s3_reg_ex_mem_49_BIT_0_52_THEN_s3_reg_ex_me_ETC___d305)
      dollar_display(sim_hdl, this, "s,32,8", &__str_literal_38, DEF_addr_byte__h4586, DEF_x__h4649);
    if (DEF_IF_s3_reg_ex_mem_49_BIT_0_52_THEN_s3_reg_ex_me_ETC___d306)
      dollar_display(sim_hdl, this, "s,32,8", &__str_literal_39, DEF_addr_byte__h4586, DEF_x__h4649);
  }
  INST_s4_reg_forward_wb.METH_write(DEF_NOT_IF_s3_reg_ex_mem_49_BIT_0_52_THEN_s3_reg_e_ETC___d336);
  INST_s4_reg_mem_wb.METH_write(DEF_NOT_IF_s3_reg_ex_mem_49_BIT_0_52_THEN_s3_reg_e_ETC___d346);
  if (!(PORT_RST_N == (tUInt8)0u))
  {
    dollar_display(sim_hdl, this, "s", &__str_literal_40);
    dollar_display(sim_hdl, this, "s,1", &__str_literal_16, DEF_s4_reg_mem_wb_47_BIT_0___d348);
    if (DEF_s4_reg_mem_wb_47_BIT_38_49_AND_s4_reg_mem_wb_4_ETC___d350)
      dollar_display(sim_hdl, this, "s,32,5", &__str_literal_41, DEF_rd_val__h6165, DEF_rd__h6164);
  }
  if (DEF_s4_reg_mem_wb_47_BIT_38_49_AND_s4_reg_mem_wb_4_ETC___d355)
    INST_regfile_regfile.METH_upd(DEF_rd__h6164, DEF_rd_val__h6165);
  if (!(PORT_RST_N == (tUInt8)0u))
    if (DEF_s4_reg_mem_wb_47_BIT_38_49_AND_s4_reg_mem_wb_4_ETC___d350)
      dollar_display(sim_hdl, this, "s,32,5", &__str_literal_42, DEF_rd_val__h6165, DEF_rd__h6164);
  INST_step.METH_write(DEF_step_56_PLUS_1___d357);
}

void MOD_mkTestbench_pipe::RL_done()
{
  if (!(PORT_RST_N == (tUInt8)0u))
    dollar_finish(sim_hdl, "32", 1u);
}


/* Methods */


/* Reset routines */

void MOD_mkTestbench_pipe::reset_RST_N(tUInt8 ARG_rst_in)
{
  PORT_RST_N = ARG_rst_in;
  INST_step.reset_RST(ARG_rst_in);
  INST_s1_reg_pc.reset_RST(ARG_rst_in);
  INST_regfile_flag.reset_RST(ARG_rst_in);
}


/* Static handles to reset routines */


/* Functions for the parent module to register its reset fns */


/* Functions to set the elaborated clock id */

void MOD_mkTestbench_pipe::set_clk_0(char const *s)
{
  __clk_handle_0 = bk_get_or_define_clock(sim_hdl, s);
}


/* State dumping routine */
void MOD_mkTestbench_pipe::dump_state(unsigned int indent)
{
  printf("%*s%s:\n", indent, "", inst_name);
  INST_regfile_flag.dump_state(indent + 2u);
  INST_regfile_regfile.dump_state(indent + 2u);
  INST_s1_imem.dump_state(indent + 2u);
  INST_s1_reg_if_id.dump_state(indent + 2u);
  INST_s1_reg_pc.dump_state(indent + 2u);
  INST_s2_reg_branch.dump_state(indent + 2u);
  INST_s2_reg_id_ex.dump_state(indent + 2u);
  INST_s3_reg_ex_mem.dump_state(indent + 2u);
  INST_s3_reg_forward_mem.dump_state(indent + 2u);
  INST_s4_dmem0.dump_state(indent + 2u);
  INST_s4_dmem1.dump_state(indent + 2u);
  INST_s4_dmem2.dump_state(indent + 2u);
  INST_s4_dmem3.dump_state(indent + 2u);
  INST_s4_reg_forward_wb.dump_state(indent + 2u);
  INST_s4_reg_mem_wb.dump_state(indent + 2u);
  INST_step.dump_state(indent + 2u);
}


/* VCD dumping routines */

unsigned int MOD_mkTestbench_pipe::dump_VCD_defs(unsigned int levels)
{
  vcd_write_scope_start(sim_hdl, inst_name);
  vcd_num = vcd_reserve_ids(sim_hdl, 34u);
  unsigned int num = vcd_num;
  for (unsigned int clk = 0u; clk < bk_num_clocks(sim_hdl); ++clk)
    vcd_add_clock_def(sim_hdl, this, bk_clock_name(sim_hdl, clk), bk_clock_vcd_num(sim_hdl, clk));
  vcd_write_def(sim_hdl, bk_clock_vcd_num(sim_hdl, __clk_handle_0), "CLK", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_done", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_pipe", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "IF_s1_reg_if_id_8_BITS_20_TO_16_3_EQ_0_4_THEN__ETC___d92", 65u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "IF_s2_reg_branch_BIT_32_THEN_s2_reg_branch_BIT_ETC___d17", 65u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "IF_s2_reg_id_ex_4_BITS_204_TO_198_14_EQ_0b1101_ETC___d240", 72u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "IF_s2_reg_id_ex_4_BITS_204_TO_198_14_EQ_0b1101_ETC___d241", 107u);
  vcd_write_def(sim_hdl, num++, "RST_N", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_done", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_pipe", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h6287", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "s1_reg_if_id_8_BITS_25_TO_21_0_CONCAT_s1_reg_i_ETC___d90", 123u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "s1_reg_if_id_8_BITS_32_TO_26_1_CONCAT_s1_reg_i_ETC___d88", 74u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "s1_reg_if_id_8_BITS_32_TO_26_1_CONCAT_s1_reg_i_ETC___d89", 96u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "s1_reg_if_id_8_BITS_64_TO_33_3_CONCAT_s1_reg_i_ETC___d93", 237u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "s1_reg_if_id_8_BITS_7_TO_1_1_CONCAT_s1_reg_if__ETC___d91", 140u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "s1_reg_if_id___d18", 65u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "s2_reg_id_ex___d94", 237u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "s3_reg_ex_mem___d249", 107u);
  num = INST_regfile_flag.dump_VCD_defs(num);
  num = INST_regfile_regfile.dump_VCD_defs(num);
  num = INST_s1_imem.dump_VCD_defs(num);
  num = INST_s1_reg_if_id.dump_VCD_defs(num);
  num = INST_s1_reg_pc.dump_VCD_defs(num);
  num = INST_s2_reg_branch.dump_VCD_defs(num);
  num = INST_s2_reg_id_ex.dump_VCD_defs(num);
  num = INST_s3_reg_ex_mem.dump_VCD_defs(num);
  num = INST_s3_reg_forward_mem.dump_VCD_defs(num);
  num = INST_s4_dmem0.dump_VCD_defs(num);
  num = INST_s4_dmem1.dump_VCD_defs(num);
  num = INST_s4_dmem2.dump_VCD_defs(num);
  num = INST_s4_dmem3.dump_VCD_defs(num);
  num = INST_s4_reg_forward_wb.dump_VCD_defs(num);
  num = INST_s4_reg_mem_wb.dump_VCD_defs(num);
  num = INST_step.dump_VCD_defs(num);
  vcd_write_scope_end(sim_hdl);
  return num;
}

void MOD_mkTestbench_pipe::dump_VCD(tVCDDumpType dt,
				    unsigned int levels,
				    MOD_mkTestbench_pipe &backing)
{
  vcd_defs(dt, backing);
  vcd_prims(dt, backing);
}

void MOD_mkTestbench_pipe::vcd_defs(tVCDDumpType dt, MOD_mkTestbench_pipe &backing)
{
  unsigned int num = vcd_num;
  if (dt == VCD_DUMP_XS)
  {
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 65u);
    vcd_write_x(sim_hdl, num++, 65u);
    vcd_write_x(sim_hdl, num++, 72u);
    vcd_write_x(sim_hdl, num++, 107u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 123u);
    vcd_write_x(sim_hdl, num++, 74u);
    vcd_write_x(sim_hdl, num++, 96u);
    vcd_write_x(sim_hdl, num++, 237u);
    vcd_write_x(sim_hdl, num++, 140u);
    vcd_write_x(sim_hdl, num++, 65u);
    vcd_write_x(sim_hdl, num++, 237u);
    vcd_write_x(sim_hdl, num++, 107u);
  }
  else
    if (dt == VCD_DUMP_CHANGES)
    {
      if ((backing.DEF_CAN_FIRE_RL_done) != DEF_CAN_FIRE_RL_done)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_done, 1u);
	backing.DEF_CAN_FIRE_RL_done = DEF_CAN_FIRE_RL_done;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_pipe) != DEF_CAN_FIRE_RL_pipe)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_pipe, 1u);
	backing.DEF_CAN_FIRE_RL_pipe = DEF_CAN_FIRE_RL_pipe;
      }
      ++num;
      if ((backing.DEF_IF_s1_reg_if_id_8_BITS_20_TO_16_3_EQ_0_4_THEN__ETC___d92) != DEF_IF_s1_reg_if_id_8_BITS_20_TO_16_3_EQ_0_4_THEN__ETC___d92)
      {
	vcd_write_val(sim_hdl, num, DEF_IF_s1_reg_if_id_8_BITS_20_TO_16_3_EQ_0_4_THEN__ETC___d92, 65u);
	backing.DEF_IF_s1_reg_if_id_8_BITS_20_TO_16_3_EQ_0_4_THEN__ETC___d92 = DEF_IF_s1_reg_if_id_8_BITS_20_TO_16_3_EQ_0_4_THEN__ETC___d92;
      }
      ++num;
      if ((backing.DEF_IF_s2_reg_branch_BIT_32_THEN_s2_reg_branch_BIT_ETC___d17) != DEF_IF_s2_reg_branch_BIT_32_THEN_s2_reg_branch_BIT_ETC___d17)
      {
	vcd_write_val(sim_hdl, num, DEF_IF_s2_reg_branch_BIT_32_THEN_s2_reg_branch_BIT_ETC___d17, 65u);
	backing.DEF_IF_s2_reg_branch_BIT_32_THEN_s2_reg_branch_BIT_ETC___d17 = DEF_IF_s2_reg_branch_BIT_32_THEN_s2_reg_branch_BIT_ETC___d17;
      }
      ++num;
      if ((backing.DEF_IF_s2_reg_id_ex_4_BITS_204_TO_198_14_EQ_0b1101_ETC___d240) != DEF_IF_s2_reg_id_ex_4_BITS_204_TO_198_14_EQ_0b1101_ETC___d240)
      {
	vcd_write_val(sim_hdl, num, DEF_IF_s2_reg_id_ex_4_BITS_204_TO_198_14_EQ_0b1101_ETC___d240, 72u);
	backing.DEF_IF_s2_reg_id_ex_4_BITS_204_TO_198_14_EQ_0b1101_ETC___d240 = DEF_IF_s2_reg_id_ex_4_BITS_204_TO_198_14_EQ_0b1101_ETC___d240;
      }
      ++num;
      if ((backing.DEF_IF_s2_reg_id_ex_4_BITS_204_TO_198_14_EQ_0b1101_ETC___d241) != DEF_IF_s2_reg_id_ex_4_BITS_204_TO_198_14_EQ_0b1101_ETC___d241)
      {
	vcd_write_val(sim_hdl, num, DEF_IF_s2_reg_id_ex_4_BITS_204_TO_198_14_EQ_0b1101_ETC___d241, 107u);
	backing.DEF_IF_s2_reg_id_ex_4_BITS_204_TO_198_14_EQ_0b1101_ETC___d241 = DEF_IF_s2_reg_id_ex_4_BITS_204_TO_198_14_EQ_0b1101_ETC___d241;
      }
      ++num;
      if ((backing.PORT_RST_N) != PORT_RST_N)
      {
	vcd_write_val(sim_hdl, num, PORT_RST_N, 1u);
	backing.PORT_RST_N = PORT_RST_N;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_done) != DEF_WILL_FIRE_RL_done)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_done, 1u);
	backing.DEF_WILL_FIRE_RL_done = DEF_WILL_FIRE_RL_done;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_pipe) != DEF_WILL_FIRE_RL_pipe)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_pipe, 1u);
	backing.DEF_WILL_FIRE_RL_pipe = DEF_WILL_FIRE_RL_pipe;
      }
      ++num;
      if ((backing.DEF_b__h6287) != DEF_b__h6287)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h6287, 32u);
	backing.DEF_b__h6287 = DEF_b__h6287;
      }
      ++num;
      if ((backing.DEF_s1_reg_if_id_8_BITS_25_TO_21_0_CONCAT_s1_reg_i_ETC___d90) != DEF_s1_reg_if_id_8_BITS_25_TO_21_0_CONCAT_s1_reg_i_ETC___d90)
      {
	vcd_write_val(sim_hdl, num, DEF_s1_reg_if_id_8_BITS_25_TO_21_0_CONCAT_s1_reg_i_ETC___d90, 123u);
	backing.DEF_s1_reg_if_id_8_BITS_25_TO_21_0_CONCAT_s1_reg_i_ETC___d90 = DEF_s1_reg_if_id_8_BITS_25_TO_21_0_CONCAT_s1_reg_i_ETC___d90;
      }
      ++num;
      if ((backing.DEF_s1_reg_if_id_8_BITS_32_TO_26_1_CONCAT_s1_reg_i_ETC___d88) != DEF_s1_reg_if_id_8_BITS_32_TO_26_1_CONCAT_s1_reg_i_ETC___d88)
      {
	vcd_write_val(sim_hdl, num, DEF_s1_reg_if_id_8_BITS_32_TO_26_1_CONCAT_s1_reg_i_ETC___d88, 74u);
	backing.DEF_s1_reg_if_id_8_BITS_32_TO_26_1_CONCAT_s1_reg_i_ETC___d88 = DEF_s1_reg_if_id_8_BITS_32_TO_26_1_CONCAT_s1_reg_i_ETC___d88;
      }
      ++num;
      if ((backing.DEF_s1_reg_if_id_8_BITS_32_TO_26_1_CONCAT_s1_reg_i_ETC___d89) != DEF_s1_reg_if_id_8_BITS_32_TO_26_1_CONCAT_s1_reg_i_ETC___d89)
      {
	vcd_write_val(sim_hdl, num, DEF_s1_reg_if_id_8_BITS_32_TO_26_1_CONCAT_s1_reg_i_ETC___d89, 96u);
	backing.DEF_s1_reg_if_id_8_BITS_32_TO_26_1_CONCAT_s1_reg_i_ETC___d89 = DEF_s1_reg_if_id_8_BITS_32_TO_26_1_CONCAT_s1_reg_i_ETC___d89;
      }
      ++num;
      if ((backing.DEF_s1_reg_if_id_8_BITS_64_TO_33_3_CONCAT_s1_reg_i_ETC___d93) != DEF_s1_reg_if_id_8_BITS_64_TO_33_3_CONCAT_s1_reg_i_ETC___d93)
      {
	vcd_write_val(sim_hdl, num, DEF_s1_reg_if_id_8_BITS_64_TO_33_3_CONCAT_s1_reg_i_ETC___d93, 237u);
	backing.DEF_s1_reg_if_id_8_BITS_64_TO_33_3_CONCAT_s1_reg_i_ETC___d93 = DEF_s1_reg_if_id_8_BITS_64_TO_33_3_CONCAT_s1_reg_i_ETC___d93;
      }
      ++num;
      if ((backing.DEF_s1_reg_if_id_8_BITS_7_TO_1_1_CONCAT_s1_reg_if__ETC___d91) != DEF_s1_reg_if_id_8_BITS_7_TO_1_1_CONCAT_s1_reg_if__ETC___d91)
      {
	vcd_write_val(sim_hdl, num, DEF_s1_reg_if_id_8_BITS_7_TO_1_1_CONCAT_s1_reg_if__ETC___d91, 140u);
	backing.DEF_s1_reg_if_id_8_BITS_7_TO_1_1_CONCAT_s1_reg_if__ETC___d91 = DEF_s1_reg_if_id_8_BITS_7_TO_1_1_CONCAT_s1_reg_if__ETC___d91;
      }
      ++num;
      if ((backing.DEF_s1_reg_if_id___d18) != DEF_s1_reg_if_id___d18)
      {
	vcd_write_val(sim_hdl, num, DEF_s1_reg_if_id___d18, 65u);
	backing.DEF_s1_reg_if_id___d18 = DEF_s1_reg_if_id___d18;
      }
      ++num;
      if ((backing.DEF_s2_reg_id_ex___d94) != DEF_s2_reg_id_ex___d94)
      {
	vcd_write_val(sim_hdl, num, DEF_s2_reg_id_ex___d94, 237u);
	backing.DEF_s2_reg_id_ex___d94 = DEF_s2_reg_id_ex___d94;
      }
      ++num;
      if ((backing.DEF_s3_reg_ex_mem___d249) != DEF_s3_reg_ex_mem___d249)
      {
	vcd_write_val(sim_hdl, num, DEF_s3_reg_ex_mem___d249, 107u);
	backing.DEF_s3_reg_ex_mem___d249 = DEF_s3_reg_ex_mem___d249;
      }
      ++num;
    }
    else
    {
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_done, 1u);
      backing.DEF_CAN_FIRE_RL_done = DEF_CAN_FIRE_RL_done;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_pipe, 1u);
      backing.DEF_CAN_FIRE_RL_pipe = DEF_CAN_FIRE_RL_pipe;
      vcd_write_val(sim_hdl, num++, DEF_IF_s1_reg_if_id_8_BITS_20_TO_16_3_EQ_0_4_THEN__ETC___d92, 65u);
      backing.DEF_IF_s1_reg_if_id_8_BITS_20_TO_16_3_EQ_0_4_THEN__ETC___d92 = DEF_IF_s1_reg_if_id_8_BITS_20_TO_16_3_EQ_0_4_THEN__ETC___d92;
      vcd_write_val(sim_hdl, num++, DEF_IF_s2_reg_branch_BIT_32_THEN_s2_reg_branch_BIT_ETC___d17, 65u);
      backing.DEF_IF_s2_reg_branch_BIT_32_THEN_s2_reg_branch_BIT_ETC___d17 = DEF_IF_s2_reg_branch_BIT_32_THEN_s2_reg_branch_BIT_ETC___d17;
      vcd_write_val(sim_hdl, num++, DEF_IF_s2_reg_id_ex_4_BITS_204_TO_198_14_EQ_0b1101_ETC___d240, 72u);
      backing.DEF_IF_s2_reg_id_ex_4_BITS_204_TO_198_14_EQ_0b1101_ETC___d240 = DEF_IF_s2_reg_id_ex_4_BITS_204_TO_198_14_EQ_0b1101_ETC___d240;
      vcd_write_val(sim_hdl, num++, DEF_IF_s2_reg_id_ex_4_BITS_204_TO_198_14_EQ_0b1101_ETC___d241, 107u);
      backing.DEF_IF_s2_reg_id_ex_4_BITS_204_TO_198_14_EQ_0b1101_ETC___d241 = DEF_IF_s2_reg_id_ex_4_BITS_204_TO_198_14_EQ_0b1101_ETC___d241;
      vcd_write_val(sim_hdl, num++, PORT_RST_N, 1u);
      backing.PORT_RST_N = PORT_RST_N;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_done, 1u);
      backing.DEF_WILL_FIRE_RL_done = DEF_WILL_FIRE_RL_done;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_pipe, 1u);
      backing.DEF_WILL_FIRE_RL_pipe = DEF_WILL_FIRE_RL_pipe;
      vcd_write_val(sim_hdl, num++, DEF_b__h6287, 32u);
      backing.DEF_b__h6287 = DEF_b__h6287;
      vcd_write_val(sim_hdl, num++, DEF_s1_reg_if_id_8_BITS_25_TO_21_0_CONCAT_s1_reg_i_ETC___d90, 123u);
      backing.DEF_s1_reg_if_id_8_BITS_25_TO_21_0_CONCAT_s1_reg_i_ETC___d90 = DEF_s1_reg_if_id_8_BITS_25_TO_21_0_CONCAT_s1_reg_i_ETC___d90;
      vcd_write_val(sim_hdl, num++, DEF_s1_reg_if_id_8_BITS_32_TO_26_1_CONCAT_s1_reg_i_ETC___d88, 74u);
      backing.DEF_s1_reg_if_id_8_BITS_32_TO_26_1_CONCAT_s1_reg_i_ETC___d88 = DEF_s1_reg_if_id_8_BITS_32_TO_26_1_CONCAT_s1_reg_i_ETC___d88;
      vcd_write_val(sim_hdl, num++, DEF_s1_reg_if_id_8_BITS_32_TO_26_1_CONCAT_s1_reg_i_ETC___d89, 96u);
      backing.DEF_s1_reg_if_id_8_BITS_32_TO_26_1_CONCAT_s1_reg_i_ETC___d89 = DEF_s1_reg_if_id_8_BITS_32_TO_26_1_CONCAT_s1_reg_i_ETC___d89;
      vcd_write_val(sim_hdl, num++, DEF_s1_reg_if_id_8_BITS_64_TO_33_3_CONCAT_s1_reg_i_ETC___d93, 237u);
      backing.DEF_s1_reg_if_id_8_BITS_64_TO_33_3_CONCAT_s1_reg_i_ETC___d93 = DEF_s1_reg_if_id_8_BITS_64_TO_33_3_CONCAT_s1_reg_i_ETC___d93;
      vcd_write_val(sim_hdl, num++, DEF_s1_reg_if_id_8_BITS_7_TO_1_1_CONCAT_s1_reg_if__ETC___d91, 140u);
      backing.DEF_s1_reg_if_id_8_BITS_7_TO_1_1_CONCAT_s1_reg_if__ETC___d91 = DEF_s1_reg_if_id_8_BITS_7_TO_1_1_CONCAT_s1_reg_if__ETC___d91;
      vcd_write_val(sim_hdl, num++, DEF_s1_reg_if_id___d18, 65u);
      backing.DEF_s1_reg_if_id___d18 = DEF_s1_reg_if_id___d18;
      vcd_write_val(sim_hdl, num++, DEF_s2_reg_id_ex___d94, 237u);
      backing.DEF_s2_reg_id_ex___d94 = DEF_s2_reg_id_ex___d94;
      vcd_write_val(sim_hdl, num++, DEF_s3_reg_ex_mem___d249, 107u);
      backing.DEF_s3_reg_ex_mem___d249 = DEF_s3_reg_ex_mem___d249;
    }
}

void MOD_mkTestbench_pipe::vcd_prims(tVCDDumpType dt, MOD_mkTestbench_pipe &backing)
{
  INST_regfile_flag.dump_VCD(dt, backing.INST_regfile_flag);
  INST_regfile_regfile.dump_VCD(dt, backing.INST_regfile_regfile);
  INST_s1_imem.dump_VCD(dt, backing.INST_s1_imem);
  INST_s1_reg_if_id.dump_VCD(dt, backing.INST_s1_reg_if_id);
  INST_s1_reg_pc.dump_VCD(dt, backing.INST_s1_reg_pc);
  INST_s2_reg_branch.dump_VCD(dt, backing.INST_s2_reg_branch);
  INST_s2_reg_id_ex.dump_VCD(dt, backing.INST_s2_reg_id_ex);
  INST_s3_reg_ex_mem.dump_VCD(dt, backing.INST_s3_reg_ex_mem);
  INST_s3_reg_forward_mem.dump_VCD(dt, backing.INST_s3_reg_forward_mem);
  INST_s4_dmem0.dump_VCD(dt, backing.INST_s4_dmem0);
  INST_s4_dmem1.dump_VCD(dt, backing.INST_s4_dmem1);
  INST_s4_dmem2.dump_VCD(dt, backing.INST_s4_dmem2);
  INST_s4_dmem3.dump_VCD(dt, backing.INST_s4_dmem3);
  INST_s4_reg_forward_wb.dump_VCD(dt, backing.INST_s4_reg_forward_wb);
  INST_s4_reg_mem_wb.dump_VCD(dt, backing.INST_s4_reg_mem_wb);
  INST_step.dump_VCD(dt, backing.INST_step);
}
