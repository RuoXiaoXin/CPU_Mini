/*
 * Generated by Bluespec Compiler (build 6a8cedf)
 * 
 * On Sat May 23 17:51:06 CST 2020
 * 
 */
#include "bluesim_primitives.h"
#include "mkTestbench_pipe.h"


/* String declarations */
static std::string const __str_literal_7("**************************************************************************",
					 74u);
static std::string const __str_literal_8("1:fetch", 7u);
static std::string const __str_literal_14("2:decode", 8u);
static std::string const __str_literal_19("3:execute", 9u);
static std::string const __str_literal_24("4:mem", 5u);
static std::string const __str_literal_34("5:write back", 12u);
static std::string const __str_literal_16("ID:Branch Instr", 15u);
static std::string const __str_literal_17("ID:Branch Target is %b", 22u);
static std::string const __str_literal_18("ID:Branch_EN is ", 16u);
static std::string const __str_literal_10("IF:branch taken", 15u);
static std::string const __str_literal_11("IF:branch target is %b", 22u);
static std::string const __str_literal_12("IF:branch untaken", 17u);
static std::string const __str_literal_29("LW:addr is %0d, data is %0d", 27u);
static std::string const __str_literal_37("RegFile:write %0d in %0d", 24u);
static std::string const __str_literal_25("addr:%0d", 8u);
static std::string const __str_literal_27("addr:%b", 7u);
static std::string const __str_literal_9("branch_EN is ", 13u);
static std::string const __str_literal_3("dmem0.txt", 9u);
static std::string const __str_literal_30("dmem0.upd(%0d,%b)", 17u);
static std::string const __str_literal_4("dmem1.txt", 9u);
static std::string const __str_literal_31("dmem1.upd(%0d,%b)", 17u);
static std::string const __str_literal_5("dmem2.txt", 9u);
static std::string const __str_literal_32("dmem2.upd(%0d,%b)", 17u);
static std::string const __str_literal_6("dmem3.txt", 9u);
static std::string const __str_literal_33("dmem3.upd(%0d,%b)", 17u);
static std::string const __str_literal_36("if valid,write %0d in %0d", 25u);
static std::string const __str_literal_2("imem_beq.txt", 12u);
static std::string const __str_literal_15("instr:%b", 8u);
static std::string const __str_literal_13("pc is %b", 8u);
static std::string const __str_literal_35("rd_valid:%b", 11u);
static std::string const __str_literal_1("regfile.txt", 11u);
static std::string const __str_literal_22("rs1_val:%0d", 11u);
static std::string const __str_literal_20("rs1_val:%b", 10u);
static std::string const __str_literal_23("rs2_val:%0d", 11u);
static std::string const __str_literal_21("rs2_val:%b", 10u);
static std::string const __str_literal_26("val :%0d", 8u);
static std::string const __str_literal_28("val :%b", 7u);


/* Constructor */
MOD_mkTestbench_pipe::MOD_mkTestbench_pipe(tSimStateHdl simHdl, char const *name, Module *parent)
  : Module(simHdl, name, parent),
    __clk_handle_0(BAD_CLOCK_HANDLE),
    INST_regfile_flag(simHdl, "regfile_flag", this, 1u, (tUInt8)0u, (tUInt8)0u),
    INST_regfile_regfile(simHdl,
			 "regfile_regfile",
			 this,
			 __str_literal_1,
			 5u,
			 32u,
			 (tUInt8)0u,
			 (tUInt8)31u,
			 (tUInt8)0u),
    INST_s1_imem(simHdl, "s1_imem", this, __str_literal_2, 32u, 8u, 0u, 4294967295u, (tUInt8)0u),
    INST_s1_reg_if_id(simHdl, "s1_reg_if_id", this, 65u),
    INST_s1_reg_pc(simHdl, "s1_reg_pc", this, 32u, 0u, (tUInt8)0u),
    INST_s2_reg_branch(simHdl, "s2_reg_branch", this, 33u),
    INST_s2_reg_id_ex(simHdl, "s2_reg_id_ex", this, 237u),
    INST_s3_reg_ex_mem(simHdl, "s3_reg_ex_mem", this, 107u),
    INST_s4_dmem0(simHdl, "s4_dmem0", this, __str_literal_3, 32u, 8u, 0u, 4294967295u, (tUInt8)0u),
    INST_s4_dmem1(simHdl, "s4_dmem1", this, __str_literal_4, 32u, 8u, 0u, 4294967295u, (tUInt8)0u),
    INST_s4_dmem2(simHdl, "s4_dmem2", this, __str_literal_5, 32u, 8u, 0u, 4294967295u, (tUInt8)0u),
    INST_s4_dmem3(simHdl, "s4_dmem3", this, __str_literal_6, 32u, 8u, 0u, 4294967295u, (tUInt8)0u),
    INST_s4_reg_mem_wb(simHdl, "s4_reg_mem_wb", this, 39u),
    INST_step(simHdl, "step", this, 32u, 0u, (tUInt8)0u),
    PORT_RST_N((tUInt8)1u),
    DEF_s2_reg_id_ex___d82(237u),
    DEF_s3_reg_ex_mem___d189(107u),
    DEF_s1_reg_if_id___d18(65u),
    DEF_s1_reg_if_id_8_BITS_64_TO_33_2_CONCAT_s1_reg_i_ETC___d81(237u),
    DEF_s1_reg_if_id_8_BITS_7_TO_1_0_CONCAT_s1_reg_if__ETC___d79(140u),
    DEF_IF_s1_reg_if_id_8_BITS_20_TO_16_3_EQ_0_4_THEN__ETC___d80(65u),
    DEF_s1_reg_if_id_8_BITS_25_TO_21_7_CONCAT_s1_reg_i_ETC___d78(123u),
    DEF_s1_reg_if_id_8_BITS_32_TO_26_4_CONCAT_s1_reg_i_ETC___d77(96u),
    DEF_IF_s2_reg_id_ex_2_BITS_204_TO_198_5_EQ_0b11001_ETC___d188(107u),
    DEF_IF_s2_reg_id_ex_2_BITS_204_TO_198_5_EQ_0b11001_ETC___d187(72u),
    DEF_s1_reg_if_id_8_BITS_32_TO_26_4_CONCAT_s1_reg_i_ETC___d76(74u),
    DEF_IF_s2_reg_branch_BIT_32_THEN_s2_reg_branch_BIT_ETC___d17(65u)
{
  symbol_count = 21u;
  symbols = new tSym[symbol_count];
  init_symbols_0();
}


/* Symbol init fns */

void MOD_mkTestbench_pipe::init_symbols_0()
{
  init_symbol(&symbols[0u], "b__h5326", SYM_DEF, &DEF_b__h5326, 32u);
  init_symbol(&symbols[1u], "CAN_FIRE_RL_done", SYM_DEF, &DEF_CAN_FIRE_RL_done, 1u);
  init_symbol(&symbols[2u], "CAN_FIRE_RL_pipe", SYM_DEF, &DEF_CAN_FIRE_RL_pipe, 1u);
  init_symbol(&symbols[3u], "RL_done", SYM_RULE);
  init_symbol(&symbols[4u], "RL_pipe", SYM_RULE);
  init_symbol(&symbols[5u], "regfile_flag", SYM_MODULE, &INST_regfile_flag);
  init_symbol(&symbols[6u], "regfile_regfile", SYM_MODULE, &INST_regfile_regfile);
  init_symbol(&symbols[7u], "s1_imem", SYM_MODULE, &INST_s1_imem);
  init_symbol(&symbols[8u], "s1_reg_if_id", SYM_MODULE, &INST_s1_reg_if_id);
  init_symbol(&symbols[9u], "s1_reg_pc", SYM_MODULE, &INST_s1_reg_pc);
  init_symbol(&symbols[10u], "s2_reg_branch", SYM_MODULE, &INST_s2_reg_branch);
  init_symbol(&symbols[11u], "s2_reg_id_ex", SYM_MODULE, &INST_s2_reg_id_ex);
  init_symbol(&symbols[12u], "s3_reg_ex_mem", SYM_MODULE, &INST_s3_reg_ex_mem);
  init_symbol(&symbols[13u], "s4_dmem0", SYM_MODULE, &INST_s4_dmem0);
  init_symbol(&symbols[14u], "s4_dmem1", SYM_MODULE, &INST_s4_dmem1);
  init_symbol(&symbols[15u], "s4_dmem2", SYM_MODULE, &INST_s4_dmem2);
  init_symbol(&symbols[16u], "s4_dmem3", SYM_MODULE, &INST_s4_dmem3);
  init_symbol(&symbols[17u], "s4_reg_mem_wb", SYM_MODULE, &INST_s4_reg_mem_wb);
  init_symbol(&symbols[18u], "step", SYM_MODULE, &INST_step);
  init_symbol(&symbols[19u], "WILL_FIRE_RL_done", SYM_DEF, &DEF_WILL_FIRE_RL_done, 1u);
  init_symbol(&symbols[20u], "WILL_FIRE_RL_pipe", SYM_DEF, &DEF_WILL_FIRE_RL_pipe, 1u);
}


/* Rule actions */

void MOD_mkTestbench_pipe::RL_pipe()
{
  tUInt64 DEF_s1_reg_if_id_8_BITS_7_TO_1_0_EQ_0b1100011_1_AN_ETC___d60;
  tUInt64 DEF_NOT_IF_s3_reg_ex_mem_89_BIT_0_92_THEN_s3_reg_e_ETC___d280;
  tUInt32 DEF_decoded_instr_imm21_UJ__h1758;
  tUInt32 DEF_x__h1621;
  tUInt32 DEF_x__h2269;
  tUInt32 DEF_decoded_instr_funct10__h1753;
  tUInt32 DEF_x__h1589;
  tUInt32 DEF_step_90_PLUS_1___d291;
  tUInt32 DEF__0_CONCAT_s2_reg_id_ex_2_BITS_150_TO_139_40___d150;
  tUInt32 DEF_b__h3085;
  tUInt32 DEF_b__h3340;
  tUInt32 DEF_instr_SB_imm13__h1731;
  tUInt32 DEF_s4_dmem1_sub_s3_reg_ex_mem_89_BITS_37_TO_6_90__ETC___d203;
  tUInt8 DEF_NOT_s2_reg_branch_BIT_32___d4;
  tUInt8 DEF_s1_reg_if_id_8_BITS_7_TO_1_0_EQ_0b1100011_1_AN_ETC___d58;
  tUInt8 DEF_IF_s3_reg_ex_mem_89_BIT_0_92_THEN_s3_reg_ex_me_ETC___d198;
  tUInt8 DEF_NOT_s3_reg_ex_mem_89_BITS_74_TO_72_96_EQ_0b0_06___d210;
  tUInt8 DEF_IF_s3_reg_ex_mem_89_BIT_0_92_THEN_s3_reg_ex_me_ETC___d243;
  tUInt8 DEF_IF_s3_reg_ex_mem_89_BIT_0_92_THEN_s3_reg_ex_me_ETC___d244;
  tUInt8 DEF_IF_s3_reg_ex_mem_89_BIT_0_92_THEN_s3_reg_ex_me_ETC___d225;
  tUInt8 DEF_IF_s3_reg_ex_mem_89_BIT_0_92_THEN_s3_reg_ex_me_ETC___d218;
  tUInt8 DEF_IF_s3_reg_ex_mem_89_BIT_0_92_THEN_s3_reg_ex_me_ETC___d245;
  tUInt8 DEF_IF_s3_reg_ex_mem_89_BIT_0_92_THEN_s3_reg_ex_me_ETC___d234;
  tUInt8 DEF_IF_s3_reg_ex_mem_89_BIT_0_92_THEN_s3_reg_ex_me_ETC___d246;
  tUInt8 DEF_IF_s3_reg_ex_mem_89_BIT_0_92_THEN_s3_reg_ex_me_ETC___d240;
  tUInt8 DEF_s4_reg_mem_wb_81_BIT_38_82_AND_s4_reg_mem_wb_8_ETC___d286;
  tUInt8 DEF_s4_reg_mem_wb_81_BIT_38_82_AND_s4_reg_mem_wb_8_ETC___d289;
  tUInt8 DEF_s3_reg_ex_mem_89_BITS_74_TO_72_96_EQ_0b0_06_AN_ETC___d209;
  tUInt8 DEF_NOT_s3_reg_ex_mem_89_BITS_74_TO_72_96_EQ_0b0_0_ETC___d216;
  tUInt8 DEF_s3_reg_ex_mem_89_BITS_74_TO_72_96_EQ_0b0_06_AN_ETC___d223;
  tUInt8 DEF_s3_reg_ex_mem_89_BITS_74_TO_72_96_EQ_0b0_06_AN_ETC___d229;
  tUInt8 DEF_NOT_s3_reg_ex_mem_89_BITS_74_TO_72_96_EQ_0b0_0_ETC___d232;
  tUInt8 DEF_s3_reg_ex_mem_89_BITS_74_TO_72_96_EQ_0b0_06_AN_ETC___d238;
  tUInt8 DEF_s1_reg_if_id_8_BITS_7_TO_1_0_EQ_0b1100011___d21;
  tUInt32 DEF_x__h2873;
  tUInt8 DEF_IF_s1_reg_if_id_8_BITS_20_TO_16_3_EQ_0_4_THEN__ETC___d45;
  tUInt8 DEF_IF_s1_reg_if_id_8_BITS_20_TO_16_3_EQ_0_4_THEN__ETC___d41;
  tUInt8 DEF_IF_s1_reg_if_id_8_BITS_15_TO_13_1_EQ_0b0_2_THE_ETC___d57;
  tUInt8 DEF_IF_s2_reg_id_ex_2_BITS_204_TO_198_5_EQ_0b11001_ETC___d103;
  tUInt8 DEF_IF_s3_reg_ex_mem_89_BIT_0_92_THEN_s3_reg_ex_me_ETC___d194;
  tUInt8 DEF_x_f3__h2778;
  tUInt8 DEF_x1_avValue_rd__h3787;
  tUInt8 DEF_IF_s3_reg_ex_mem_89_BITS_74_TO_72_96_EQ_0b0_06_ETC___d236;
  tUInt8 DEF_IF_s3_reg_ex_mem_89_BITS_74_TO_72_96_EQ_0b0_06_ETC___d227;
  tUInt8 DEF_IF_s3_reg_ex_mem_89_BITS_74_TO_72_96_EQ_0b0_06_ETC___d242;
  tUInt32 DEF_rs1_val__h1734;
  tUInt32 DEF_rs2_val__h1735;
  tUInt32 DEF_branch_target___1__h1795;
  tUInt32 DEF_x_branch_target__h2107;
  tUInt32 DEF__theResult___snd_val__h2759;
  tUInt32 DEF_addr___1__h2736;
  tUInt32 DEF__theResult___snd_addr__h2760;
  tUInt32 DEF__theResult___snd_val__h2766;
  tUInt32 DEF_x__h2869;
  tUInt32 DEF_x__h2633;
  tUInt32 DEF__theResult___snd_addr__h2767;
  tUInt32 DEF_x__h3315;
  tUInt32 DEF_result___1__h3058;
  tUInt32 DEF_result___1__h3053;
  tUInt32 DEF_result___1__h3006;
  tUInt32 DEF_result___1__h2960;
  tUInt32 DEF_result___1__h2955;
  tUInt32 DEF_result___1__h2946;
  tUInt32 DEF_result___1__h2937;
  tUInt32 DEF_result___1__h2891;
  tUInt32 DEF_result___1__h2885;
  tUInt32 DEF_result___1__h2879;
  tUInt32 DEF__theResult____h2690;
  tUInt32 DEF_result___1__h3236;
  tUInt32 DEF_result___1__h3193;
  tUInt32 DEF_result___1__h3289;
  tUInt32 DEF_result___1__h3282;
  tUInt32 DEF_result___1__h3165;
  tUInt32 DEF_result___1__h3154;
  tUInt32 DEF_result___1__h3142;
  tUInt32 DEF_result___1__h3096;
  tUInt32 DEF_result___1__h3079;
  tUInt32 DEF__theResult____h2707;
  tUInt32 DEF_rv___1_rd_val__h3759;
  tUInt32 DEF_x1_avValue_rd_val__h3788;
  tUInt32 DEF_addr_byte__h3845;
  tUInt8 DEF_s3_reg_ex_mem_89_BITS_74_TO_72_96_EQ_0b0___d206;
  tUInt32 DEF_IF_s3_reg_ex_mem_89_BITS_74_TO_72_96_EQ_0b0_06_ETC___d220;
  tUInt32 DEF_rv___1_rd_val__h3765;
  tUInt8 DEF_s3_reg_ex_mem_89_BITS_74_TO_72_96_EQ_0b1___d211;
  tUInt32 DEF_load_data__h3708;
  tUInt8 DEF_s3_reg_ex_mem_89_BITS_74_TO_72_96_EQ_0b10___d197;
  tUInt32 DEF_rv___1_rd_val__h3773;
  tUInt32 DEF_rv___1_rd_val__h3779;
  tUInt8 DEF_IF_s3_reg_ex_mem_89_BIT_0_92_THEN_s3_reg_ex_me_ETC___d195;
  tUInt8 DEF_IF_s3_reg_ex_mem_89_BIT_0_92_THEN_s3_reg_ex_me_ETC___d205;
  tUInt64 DEF_s3_reg_ex_mem_89_BITS_5_TO_1_60_CONCAT_s3_reg__ETC___d275;
  tUInt64 DEF_IF_IF_s3_reg_ex_mem_89_BIT_0_92_THEN_s3_reg_ex_ETC___d278;
  tUInt8 DEF_s2_reg_branch_BIT_32___d2;
  tUInt8 DEF_s4_reg_mem_wb_81_BIT_38___d282;
  tUInt8 DEF_s1_reg_if_id_8_BIT_32___d23;
  tUInt8 DEF_s3_reg_ex_mem_89_BIT_0___d192;
  tUInt8 DEF_s3_reg_ex_mem_89_BIT_6___d212;
  tUInt8 DEF_s3_reg_ex_mem_89_BITS_7_TO_6___d207;
  tUInt8 DEF_f3__h1733;
  tUInt8 DEF_f3__h2641;
  tUInt8 DEF__read_rd__h5178;
  tUInt8 DEF_x__h2145;
  tUInt8 DEF_rd__h3602;
  tUInt8 DEF_x__h2894;
  tUInt8 DEF_x__h3100;
  tUInt8 DEF_rd__h2639;
  tUInt8 DEF_op__h1732;
  tUInt8 DEF_x__h2189;
  tUInt8 DEF_f7__h2642;
  tUInt8 DEF_op__h2640;
  tUInt8 DEF_x__h3908;
  tUInt8 DEF_x__h4440;
  tUInt8 DEF_x__h4496;
  tUInt8 DEF_x__h4538;
  tUInt32 DEF_x__h2169;
  tUInt32 DEF_imm12_S__h2644;
  tUInt32 DEF_imm12_I__h2643;
  tUInt32 DEF_decoded_instr_imm20_U__h1757;
  tUInt32 DEF_branch_target__h1436;
  tUInt32 DEF__read_rd_val__h5179;
  tUInt32 DEF__read_instr__h1706;
  tUInt32 DEF_pc__h1726;
  tUInt32 DEF__read_val__h3503;
  tUInt32 DEF__read_rs2_val__h2528;
  tUInt32 DEF__read_rs1_val__h2527;
  tUInt32 DEF_pc__h2635;
  tUInt32 DEF_pc_temp__h1556;
  tUInt8 DEF_x__h1626;
  tUInt32 DEF_i__h1627;
  tUInt8 DEF_x__h1628;
  tUInt32 DEF_i__h1647;
  tUInt8 DEF_x__h1648;
  tUInt32 DEF_i__h1650;
  tUInt8 DEF_x__h1651;
  tUInt8 DEF_x__h3730;
  tUInt8 DEF_x__h3731;
  tUInt8 DEF_x__h3732;
  tUInt32 DEF__read_addr__h3504;
  tUInt8 DEF_x__h3733;
  tUInt8 DEF_rs1__h1729;
  tUInt32 DEF_x__h2015;
  tUInt8 DEF_rs2__h1730;
  tUInt32 DEF_x__h2036;
  tUInt32 DEF_v__h1510;
  tUInt64 DEF_s2_reg_branch___d1;
  tUInt64 DEF_s4_reg_mem_wb___d281;
  tUInt8 DEF_f3__h3603;
  DEF_s2_reg_id_ex___d82 = INST_s2_reg_id_ex.METH_read();
  DEF_s3_reg_ex_mem___d189 = INST_s3_reg_ex_mem.METH_read();
  DEF_f3__h3603 = DEF_s3_reg_ex_mem___d189.get_bits_in_word8(2u, 8u, 3u);
  DEF_s1_reg_if_id___d18 = INST_s1_reg_if_id.METH_read();
  DEF_s4_reg_mem_wb___d281 = INST_s4_reg_mem_wb.METH_read();
  DEF_v__h1510 = INST_s1_reg_pc.METH_read();
  DEF_s2_reg_branch___d1 = INST_s2_reg_branch.METH_read();
  DEF_rs2__h1730 = DEF_s1_reg_if_id___d18.get_bits_in_word8(0u, 21u, 5u);
  DEF_x__h2036 = INST_regfile_regfile.METH_sub(DEF_rs2__h1730);
  DEF_rs1__h1729 = DEF_s1_reg_if_id___d18.get_bits_in_word8(0u, 16u, 5u);
  DEF_x__h2015 = INST_regfile_regfile.METH_sub(DEF_rs1__h1729);
  DEF_b__h5326 = INST_step.METH_read();
  DEF__read_addr__h3504 = primExtract32(32u, 107u, DEF_s3_reg_ex_mem___d189, 32u, 37u, 32u, 6u);
  DEF_x__h3733 = INST_s4_dmem0.METH_sub(DEF__read_addr__h3504);
  DEF_x__h3732 = INST_s4_dmem1.METH_sub(DEF__read_addr__h3504);
  DEF_x__h3731 = INST_s4_dmem2.METH_sub(DEF__read_addr__h3504);
  DEF_x__h3730 = INST_s4_dmem3.METH_sub(DEF__read_addr__h3504);
  DEF_pc__h2635 = primExtract32(32u, 237u, DEF_s2_reg_id_ex___d82, 32u, 236u, 32u, 205u);
  DEF__read_rs1_val__h2527 = primExtract32(32u, 237u, DEF_s2_reg_id_ex___d82, 32u, 64u, 32u, 33u);
  DEF__read_rs2_val__h2528 = primExtract32(32u, 237u, DEF_s2_reg_id_ex___d82, 32u, 32u, 32u, 1u);
  DEF__read_val__h3503 = primExtract32(32u, 107u, DEF_s3_reg_ex_mem___d189, 32u, 69u, 32u, 38u);
  DEF_pc__h1726 = primExtract32(32u, 65u, DEF_s1_reg_if_id___d18, 32u, 64u, 32u, 33u);
  DEF__read_instr__h1706 = primExtract32(32u, 65u, DEF_s1_reg_if_id___d18, 32u, 32u, 32u, 1u);
  DEF_branch_target__h1436 = (tUInt32)(DEF_s2_reg_branch___d1);
  DEF__read_rd_val__h5179 = (tUInt32)(DEF_s4_reg_mem_wb___d281 >> 1u);
  DEF_decoded_instr_imm20_U__h1757 = primExtract32(20u,
						   65u,
						   DEF_s1_reg_if_id___d18,
						   32u,
						   32u,
						   32u,
						   13u);
  DEF_imm12_I__h2643 = DEF_s2_reg_id_ex___d82.get_bits_in_word32(4u, 11u, 12u);
  DEF_imm12_S__h2644 = primExtract32(12u, 237u, DEF_s2_reg_id_ex___d82, 32u, 138u, 32u, 127u);
  DEF_x__h2169 = primExtract32(12u, 65u, DEF_s1_reg_if_id___d18, 32u, 32u, 32u, 21u);
  DEF_x__h4496 = DEF_s3_reg_ex_mem___d189.get_bits_in_word8(1u, 22u, 8u);
  DEF_x__h4538 = primExtract8(8u, 107u, DEF_s3_reg_ex_mem___d189, 32u, 69u, 32u, 62u);
  DEF_x__h4440 = DEF_s3_reg_ex_mem___d189.get_bits_in_word8(1u, 14u, 8u);
  DEF_x__h3908 = DEF_s3_reg_ex_mem___d189.get_bits_in_word8(1u, 6u, 8u);
  DEF_op__h2640 = DEF_s2_reg_id_ex___d82.get_bits_in_word8(6u, 6u, 7u);
  DEF_f7__h2642 = DEF_s2_reg_id_ex___d82.get_bits_in_word8(5u, 1u, 7u);
  DEF_op__h1732 = DEF_s1_reg_if_id___d18.get_bits_in_word8(0u, 1u, 7u);
  DEF_x__h2189 = primExtract8(7u, 65u, DEF_s1_reg_if_id___d18, 32u, 32u, 32u, 26u);
  DEF_rd__h2639 = DEF_s2_reg_id_ex___d82.get_bits_in_word8(6u, 1u, 5u);
  DEF_x__h3100 = DEF_s2_reg_id_ex___d82.get_bits_in_word8(4u, 11u, 5u);
  DEF_x__h2894 = DEF_s2_reg_id_ex___d82.get_bits_in_word8(0u, 1u, 5u);
  DEF_rd__h3602 = DEF_s3_reg_ex_mem___d189.get_bits_in_word8(0u, 1u, 5u);
  DEF__read_rd__h5178 = (tUInt8)((tUInt8)31u & (DEF_s4_reg_mem_wb___d281 >> 33u));
  DEF_x__h2145 = DEF_s1_reg_if_id___d18.get_bits_in_word8(0u, 8u, 5u);
  DEF_f3__h2641 = DEF_s2_reg_id_ex___d82.get_bits_in_word8(5u, 8u, 3u);
  DEF_f3__h1733 = DEF_s1_reg_if_id___d18.get_bits_in_word8(0u, 13u, 3u);
  DEF_s3_reg_ex_mem_89_BITS_7_TO_6___d207 = DEF_s3_reg_ex_mem___d189.get_bits_in_word8(0u, 6u, 2u);
  DEF_s3_reg_ex_mem_89_BIT_6___d212 = DEF_s3_reg_ex_mem___d189.get_bits_in_word8(0u, 6u, 1u);
  DEF_s3_reg_ex_mem_89_BIT_0___d192 = DEF_s3_reg_ex_mem___d189.get_bits_in_word8(0u, 0u, 1u);
  DEF_s4_reg_mem_wb_81_BIT_38___d282 = (tUInt8)(DEF_s4_reg_mem_wb___d281 >> 38u);
  DEF_s1_reg_if_id_8_BIT_32___d23 = DEF_s1_reg_if_id___d18.get_bits_in_word8(1u, 0u, 1u);
  DEF_s2_reg_branch_BIT_32___d2 = (tUInt8)(DEF_s2_reg_branch___d1 >> 32u);
  DEF_pc_temp__h1556 = DEF_s2_reg_branch_BIT_32___d2 ? DEF_branch_target__h1436 : DEF_v__h1510;
  DEF_i__h1650 = DEF_pc_temp__h1556 + 3u;
  DEF_x__h1651 = INST_s1_imem.METH_sub(DEF_i__h1650);
  DEF_i__h1647 = DEF_pc_temp__h1556 + 2u;
  DEF_x__h1648 = INST_s1_imem.METH_sub(DEF_i__h1647);
  DEF_i__h1627 = DEF_pc_temp__h1556 + 1u;
  DEF_x__h1628 = INST_s1_imem.METH_sub(DEF_i__h1627);
  DEF_x__h1626 = INST_s1_imem.METH_sub(DEF_pc_temp__h1556);
  DEF_s3_reg_ex_mem_89_BITS_5_TO_1_60_CONCAT_s3_reg__ETC___d275 = 274877906943llu & (((((tUInt64)(DEF_rd__h3602)) << 33u) | (((tUInt64)(DEF__read_val__h3503)) << 1u)) | (tUInt64)(DEF_s3_reg_ex_mem_89_BIT_0___d192));
  DEF_rv___1_rd_val__h3773 = (tUInt32)(DEF_x__h3733);
  DEF_s3_reg_ex_mem_89_BITS_74_TO_72_96_EQ_0b10___d197 = DEF_f3__h3603 == (tUInt8)2u;
  DEF_s3_reg_ex_mem_89_BITS_74_TO_72_96_EQ_0b1___d211 = DEF_f3__h3603 == (tUInt8)1u;
  DEF_s3_reg_ex_mem_89_BITS_74_TO_72_96_EQ_0b0___d206 = DEF_f3__h3603 == (tUInt8)0u;
  DEF_addr_byte__h3845 = primShiftR32(32u, 32u, (tUInt32)(DEF__read_addr__h3504), 32u, 2u);
  DEF_IF_s3_reg_ex_mem_89_BITS_74_TO_72_96_EQ_0b0_06_ETC___d220 = DEF_s3_reg_ex_mem_89_BITS_74_TO_72_96_EQ_0b0___d206 ? DEF_addr_byte__h3845 : DEF__read_addr__h3504;
  DEF_result___1__h3096 = primShiftL32(32u,
				       32u,
				       (tUInt32)(DEF__read_rs1_val__h2527),
				       5u,
				       (tUInt8)(DEF_x__h3100));
  DEF_rv___1_rd_val__h3759 = primSignExt32(32u, 8u, (tUInt8)(DEF_x__h3733));
  DEF_result___1__h3193 = primShiftRA32(32u,
					32u,
					(tUInt32)(DEF__read_rs1_val__h2527),
					5u,
					(tUInt8)(DEF_x__h3100));
  DEF_result___1__h3236 = primShiftR32(32u,
				       32u,
				       (tUInt32)(DEF__read_rs1_val__h2527),
				       5u,
				       (tUInt8)(DEF_x__h3100));
  DEF_result___1__h2955 = DEF__read_rs1_val__h2527 ^ DEF__read_rs2_val__h2528;
  DEF_result___1__h2879 = DEF__read_rs1_val__h2527 + DEF__read_rs2_val__h2528;
  DEF_result___1__h2885 = DEF__read_rs1_val__h2527 - DEF__read_rs2_val__h2528;
  DEF_result___1__h2891 = primShiftL32(32u,
				       32u,
				       (tUInt32)(DEF__read_rs1_val__h2527),
				       5u,
				       (tUInt8)(DEF_x__h2894));
  DEF_result___1__h2946 = DEF__read_rs1_val__h2527 < DEF__read_rs2_val__h2528 ? 1u : 0u;
  DEF_result___1__h2937 = primSLT8(1u,
				   32u,
				   (tUInt32)(DEF__read_rs1_val__h2527),
				   32u,
				   (tUInt32)(DEF__read_rs2_val__h2528)) ? 1u : 0u;
  DEF_result___1__h2960 = primShiftR32(32u,
				       32u,
				       (tUInt32)(DEF__read_rs1_val__h2527),
				       5u,
				       (tUInt8)(DEF_x__h2894));
  DEF_result___1__h3006 = primShiftRA32(32u,
					32u,
					(tUInt32)(DEF__read_rs1_val__h2527),
					5u,
					(tUInt8)(DEF_x__h2894));
  DEF_result___1__h3053 = DEF__read_rs1_val__h2527 | DEF__read_rs2_val__h2528;
  DEF_result___1__h3058 = DEF__read_rs1_val__h2527 & DEF__read_rs2_val__h2528;
  DEF_x__h2633 = DEF_pc__h2635;
  DEF__theResult___snd_val__h2759 = DEF__read_rs2_val__h2528;
  DEF__theResult___snd_val__h2766 = DEF__theResult___snd_val__h2759;
  DEF_rs2_val__h1735 = DEF_rs2__h1730 == (tUInt8)0u ? 0u : DEF_x__h2036;
  DEF_rs1_val__h1734 = DEF_rs1__h1729 == (tUInt8)0u ? 0u : DEF_x__h2015;
  DEF_IF_s3_reg_ex_mem_89_BITS_74_TO_72_96_EQ_0b0_06_ETC___d242 = DEF_s3_reg_ex_mem_89_BITS_74_TO_72_96_EQ_0b0___d206 ? DEF_x__h3908 : DEF_x__h4538;
  DEF_IF_s3_reg_ex_mem_89_BITS_74_TO_72_96_EQ_0b0_06_ETC___d227 = DEF_s3_reg_ex_mem_89_BITS_74_TO_72_96_EQ_0b0___d206 ? DEF_x__h3908 : DEF_x__h4440;
  DEF_IF_s3_reg_ex_mem_89_BITS_74_TO_72_96_EQ_0b0_06_ETC___d236 = DEF_s3_reg_ex_mem_89_BITS_74_TO_72_96_EQ_0b0___d206 ? DEF_x__h3908 : DEF_x__h4496;
  DEF_x1_avValue_rd__h3787 = DEF_rd__h3602;
  DEF_IF_s3_reg_ex_mem_89_BIT_0_92_THEN_s3_reg_ex_me_ETC___d194 = DEF_s3_reg_ex_mem_89_BIT_0___d192 ? DEF_s3_reg_ex_mem___d189.get_bits_in_word8(2u,
																		 6u,
																		 2u) : (tUInt8)3u;
  DEF_IF_s3_reg_ex_mem_89_BIT_0_92_THEN_s3_reg_ex_me_ETC___d205 = DEF_IF_s3_reg_ex_mem_89_BIT_0_92_THEN_s3_reg_ex_me_ETC___d194 == (tUInt8)2u;
  DEF_IF_s3_reg_ex_mem_89_BIT_0_92_THEN_s3_reg_ex_me_ETC___d195 = DEF_IF_s3_reg_ex_mem_89_BIT_0_92_THEN_s3_reg_ex_me_ETC___d194 == (tUInt8)1u;
  DEF_x_f3__h2778 = DEF_f3__h2641;
  switch (DEF_op__h2640) {
  case (tUInt8)19u:
  case (tUInt8)51u:
    DEF_IF_s2_reg_id_ex_2_BITS_204_TO_198_5_EQ_0b11001_ETC___d103 = (tUInt8)0u;
    break;
  case (tUInt8)3u:
    DEF_IF_s2_reg_id_ex_2_BITS_204_TO_198_5_EQ_0b11001_ETC___d103 = (tUInt8)1u;
    break;
  case (tUInt8)35u:
    DEF_IF_s2_reg_id_ex_2_BITS_204_TO_198_5_EQ_0b11001_ETC___d103 = (tUInt8)2u;
    break;
  default:
    DEF_IF_s2_reg_id_ex_2_BITS_204_TO_198_5_EQ_0b11001_ETC___d103 = (tUInt8)3u;
  }
  DEF_IF_s1_reg_if_id_8_BITS_20_TO_16_3_EQ_0_4_THEN__ETC___d41 = DEF_rs1_val__h1734 == DEF_rs2_val__h1735;
  DEF_IF_s1_reg_if_id_8_BITS_20_TO_16_3_EQ_0_4_THEN__ETC___d45 = primSLT8(1u,
									  32u,
									  (tUInt32)(DEF_rs1_val__h1734),
									  32u,
									  (tUInt32)(DEF_rs2_val__h1735));
  switch (DEF_f3__h1733) {
  case (tUInt8)0u:
    DEF_IF_s1_reg_if_id_8_BITS_15_TO_13_1_EQ_0b0_2_THE_ETC___d57 = DEF_IF_s1_reg_if_id_8_BITS_20_TO_16_3_EQ_0_4_THEN__ETC___d41;
    break;
  case (tUInt8)1u:
    DEF_IF_s1_reg_if_id_8_BITS_15_TO_13_1_EQ_0b0_2_THE_ETC___d57 = !DEF_IF_s1_reg_if_id_8_BITS_20_TO_16_3_EQ_0_4_THEN__ETC___d41;
    break;
  case (tUInt8)4u:
    DEF_IF_s1_reg_if_id_8_BITS_15_TO_13_1_EQ_0b0_2_THE_ETC___d57 = DEF_IF_s1_reg_if_id_8_BITS_20_TO_16_3_EQ_0_4_THEN__ETC___d45;
    break;
  case (tUInt8)5u:
    DEF_IF_s1_reg_if_id_8_BITS_15_TO_13_1_EQ_0b0_2_THE_ETC___d57 = !DEF_IF_s1_reg_if_id_8_BITS_20_TO_16_3_EQ_0_4_THEN__ETC___d45;
    break;
  case (tUInt8)6u:
    DEF_IF_s1_reg_if_id_8_BITS_15_TO_13_1_EQ_0b0_2_THE_ETC___d57 = DEF_rs1_val__h1734 < DEF_rs2_val__h1735;
    break;
  default:
    DEF_IF_s1_reg_if_id_8_BITS_15_TO_13_1_EQ_0b0_2_THE_ETC___d57 = DEF_f3__h1733 == (tUInt8)7u && DEF_rs1_val__h1734 <= DEF_rs2_val__h1735;
  }
  DEF_x__h2873 = 1023u & ((((tUInt32)(DEF_f7__h2642)) << 3u) | (tUInt32)(DEF_f3__h2641));
  switch (DEF_x__h2873) {
  case 0u:
    DEF__theResult____h2690 = DEF_result___1__h2879;
    break;
  case 256u:
    DEF__theResult____h2690 = DEF_result___1__h2885;
    break;
  case 1u:
    DEF__theResult____h2690 = DEF_result___1__h2891;
    break;
  case 2u:
    DEF__theResult____h2690 = DEF_result___1__h2937;
    break;
  case 3u:
    DEF__theResult____h2690 = DEF_result___1__h2946;
    break;
  case 4u:
    DEF__theResult____h2690 = DEF_result___1__h2955;
    break;
  case 5u:
    DEF__theResult____h2690 = DEF_result___1__h2960;
    break;
  case 261u:
    DEF__theResult____h2690 = DEF_result___1__h3006;
    break;
  case 6u:
    DEF__theResult____h2690 = DEF_result___1__h3053;
    break;
  default:
    DEF__theResult____h2690 = DEF_result___1__h3058;
  }
  DEF_s1_reg_if_id_8_BITS_7_TO_1_0_EQ_0b1100011___d21 = DEF_op__h1732 == (tUInt8)99u;
  DEF_s3_reg_ex_mem_89_BITS_74_TO_72_96_EQ_0b0_06_AN_ETC___d238 = DEF_s3_reg_ex_mem_89_BITS_74_TO_72_96_EQ_0b0___d206 && DEF_s3_reg_ex_mem_89_BITS_7_TO_6___d207 == (tUInt8)3u;
  DEF_s3_reg_ex_mem_89_BITS_74_TO_72_96_EQ_0b0_06_AN_ETC___d229 = DEF_s3_reg_ex_mem_89_BITS_74_TO_72_96_EQ_0b0___d206 && DEF_s3_reg_ex_mem_89_BITS_7_TO_6___d207 == (tUInt8)2u;
  DEF_s3_reg_ex_mem_89_BITS_74_TO_72_96_EQ_0b0_06_AN_ETC___d223 = DEF_s3_reg_ex_mem_89_BITS_74_TO_72_96_EQ_0b0___d206 && DEF_s3_reg_ex_mem_89_BITS_7_TO_6___d207 == (tUInt8)1u;
  DEF_s4_reg_mem_wb_81_BIT_38_82_AND_s4_reg_mem_wb_8_ETC___d286 = DEF_s4_reg_mem_wb_81_BIT_38___d282 && (tUInt8)((tUInt8)1u & DEF_s4_reg_mem_wb___d281);
  DEF_s3_reg_ex_mem_89_BITS_74_TO_72_96_EQ_0b0_06_AN_ETC___d209 = DEF_s3_reg_ex_mem_89_BITS_74_TO_72_96_EQ_0b0___d206 && DEF_s3_reg_ex_mem_89_BITS_7_TO_6___d207 == (tUInt8)0u;
  DEF_s4_reg_mem_wb_81_BIT_38_82_AND_s4_reg_mem_wb_8_ETC___d289 = DEF_s4_reg_mem_wb_81_BIT_38_82_AND_s4_reg_mem_wb_8_ETC___d286 && !(DEF__read_rd__h5178 == (tUInt8)0u);
  DEF_IF_s3_reg_ex_mem_89_BIT_0_92_THEN_s3_reg_ex_me_ETC___d246 = DEF_IF_s3_reg_ex_mem_89_BIT_0_92_THEN_s3_reg_ex_me_ETC___d205 && DEF_s3_reg_ex_mem_89_BITS_74_TO_72_96_EQ_0b0_06_AN_ETC___d238;
  DEF_IF_s3_reg_ex_mem_89_BIT_0_92_THEN_s3_reg_ex_me_ETC___d245 = DEF_IF_s3_reg_ex_mem_89_BIT_0_92_THEN_s3_reg_ex_me_ETC___d205 && DEF_s3_reg_ex_mem_89_BITS_74_TO_72_96_EQ_0b0_06_AN_ETC___d229;
  DEF_IF_s3_reg_ex_mem_89_BIT_0_92_THEN_s3_reg_ex_me_ETC___d244 = DEF_IF_s3_reg_ex_mem_89_BIT_0_92_THEN_s3_reg_ex_me_ETC___d205 && DEF_s3_reg_ex_mem_89_BITS_74_TO_72_96_EQ_0b0_06_AN_ETC___d223;
  DEF_IF_s3_reg_ex_mem_89_BIT_0_92_THEN_s3_reg_ex_me_ETC___d243 = DEF_IF_s3_reg_ex_mem_89_BIT_0_92_THEN_s3_reg_ex_me_ETC___d205 && DEF_s3_reg_ex_mem_89_BITS_74_TO_72_96_EQ_0b0_06_AN_ETC___d209;
  DEF_NOT_s3_reg_ex_mem_89_BITS_74_TO_72_96_EQ_0b0_06___d210 = !DEF_s3_reg_ex_mem_89_BITS_74_TO_72_96_EQ_0b0___d206;
  DEF_NOT_s3_reg_ex_mem_89_BITS_74_TO_72_96_EQ_0b0_0_ETC___d232 = DEF_NOT_s3_reg_ex_mem_89_BITS_74_TO_72_96_EQ_0b0_06___d210 && ((DEF_s3_reg_ex_mem_89_BITS_74_TO_72_96_EQ_0b1___d211 && DEF_s3_reg_ex_mem_89_BIT_6___d212) || DEF_s3_reg_ex_mem_89_BITS_74_TO_72_96_EQ_0b10___d197);
  DEF_NOT_s3_reg_ex_mem_89_BITS_74_TO_72_96_EQ_0b0_0_ETC___d216 = DEF_NOT_s3_reg_ex_mem_89_BITS_74_TO_72_96_EQ_0b0_06___d210 && ((DEF_s3_reg_ex_mem_89_BITS_74_TO_72_96_EQ_0b1___d211 && !DEF_s3_reg_ex_mem_89_BIT_6___d212) || DEF_s3_reg_ex_mem_89_BITS_74_TO_72_96_EQ_0b10___d197);
  DEF_IF_s3_reg_ex_mem_89_BIT_0_92_THEN_s3_reg_ex_me_ETC___d240 = DEF_IF_s3_reg_ex_mem_89_BIT_0_92_THEN_s3_reg_ex_me_ETC___d205 && (DEF_s3_reg_ex_mem_89_BITS_74_TO_72_96_EQ_0b0_06_AN_ETC___d238 || DEF_NOT_s3_reg_ex_mem_89_BITS_74_TO_72_96_EQ_0b0_0_ETC___d232);
  DEF_IF_s3_reg_ex_mem_89_BIT_0_92_THEN_s3_reg_ex_me_ETC___d234 = DEF_IF_s3_reg_ex_mem_89_BIT_0_92_THEN_s3_reg_ex_me_ETC___d205 && (DEF_s3_reg_ex_mem_89_BITS_74_TO_72_96_EQ_0b0_06_AN_ETC___d229 || DEF_NOT_s3_reg_ex_mem_89_BITS_74_TO_72_96_EQ_0b0_0_ETC___d232);
  DEF_IF_s3_reg_ex_mem_89_BIT_0_92_THEN_s3_reg_ex_me_ETC___d218 = DEF_IF_s3_reg_ex_mem_89_BIT_0_92_THEN_s3_reg_ex_me_ETC___d205 && (DEF_s3_reg_ex_mem_89_BITS_74_TO_72_96_EQ_0b0_06_AN_ETC___d209 || DEF_NOT_s3_reg_ex_mem_89_BITS_74_TO_72_96_EQ_0b0_0_ETC___d216);
  DEF_IF_s3_reg_ex_mem_89_BIT_0_92_THEN_s3_reg_ex_me_ETC___d225 = DEF_IF_s3_reg_ex_mem_89_BIT_0_92_THEN_s3_reg_ex_me_ETC___d205 && (DEF_s3_reg_ex_mem_89_BITS_74_TO_72_96_EQ_0b0_06_AN_ETC___d223 || DEF_NOT_s3_reg_ex_mem_89_BITS_74_TO_72_96_EQ_0b0_0_ETC___d216);
  DEF_IF_s3_reg_ex_mem_89_BIT_0_92_THEN_s3_reg_ex_me_ETC___d198 = DEF_IF_s3_reg_ex_mem_89_BIT_0_92_THEN_s3_reg_ex_me_ETC___d195 && DEF_s3_reg_ex_mem_89_BITS_74_TO_72_96_EQ_0b10___d197;
  DEF_s1_reg_if_id_8_BITS_7_TO_1_0_EQ_0b1100011_1_AN_ETC___d58 = DEF_s1_reg_if_id_8_BITS_7_TO_1_0_EQ_0b1100011___d21 && DEF_IF_s1_reg_if_id_8_BITS_15_TO_13_1_EQ_0b0_2_THE_ETC___d57;
  DEF_NOT_s2_reg_branch_BIT_32___d4 = !DEF_s2_reg_branch_BIT_32___d2;
  DEF_instr_SB_imm13__h1731 = 8191u & (((((((tUInt32)(DEF_s1_reg_if_id_8_BIT_32___d23)) << 12u) | (((tUInt32)(DEF_s1_reg_if_id___d18.get_bits_in_word8(0u,
																		       8u,
																		       1u))) << 11u)) | (((tUInt32)(DEF_s1_reg_if_id___d18.get_bits_in_word8(0u,
																											     26u,
																											     6u))) << 5u)) | (((tUInt32)(DEF_s1_reg_if_id___d18.get_bits_in_word8(0u,
																																				  9u,
																																				  4u))) << 1u)) | (tUInt32)((tUInt8)0u));
  DEF_branch_target___1__h1795 = DEF_pc__h1726 + primSignExt32(32u,
							       13u,
							       (tUInt32)(DEF_instr_SB_imm13__h1731));
  DEF_x_branch_target__h2107 = DEF_branch_target___1__h1795;
  DEF_s4_dmem1_sub_s3_reg_ex_mem_89_BITS_37_TO_6_90__ETC___d203 = 65535u & ((((tUInt32)(DEF_x__h3732)) << 8u) | (tUInt32)(DEF_x__h3733));
  DEF_rv___1_rd_val__h3779 = DEF_s4_dmem1_sub_s3_reg_ex_mem_89_BITS_37_TO_6_90__ETC___d203;
  DEF_load_data__h3708 = ((((tUInt32)(DEF_x__h3730)) << 24u) | (((tUInt32)(DEF_x__h3731)) << 16u)) | DEF_s4_dmem1_sub_s3_reg_ex_mem_89_BITS_37_TO_6_90__ETC___d203;
  DEF_rv___1_rd_val__h3765 = primSignExt32(32u,
					   16u,
					   (tUInt32)(DEF_s4_dmem1_sub_s3_reg_ex_mem_89_BITS_37_TO_6_90__ETC___d203));
  switch (DEF_f3__h3603) {
  case (tUInt8)0u:
    DEF_x1_avValue_rd_val__h3788 = DEF_rv___1_rd_val__h3759;
    break;
  case (tUInt8)1u:
    DEF_x1_avValue_rd_val__h3788 = DEF_rv___1_rd_val__h3765;
    break;
  case (tUInt8)2u:
    DEF_x1_avValue_rd_val__h3788 = DEF_load_data__h3708;
    break;
  case (tUInt8)4u:
    DEF_x1_avValue_rd_val__h3788 = DEF_rv___1_rd_val__h3773;
    break;
  case (tUInt8)5u:
    DEF_x1_avValue_rd_val__h3788 = DEF_rv___1_rd_val__h3779;
    break;
  default:
    DEF_x1_avValue_rd_val__h3788 = DEF__read_val__h3503;
  }
  switch (DEF_IF_s3_reg_ex_mem_89_BIT_0_92_THEN_s3_reg_ex_me_ETC___d194) {
  case (tUInt8)1u:
    DEF_IF_IF_s3_reg_ex_mem_89_BIT_0_92_THEN_s3_reg_ex_ETC___d278 = 274877906943llu & (((((tUInt64)(DEF_x1_avValue_rd__h3787)) << 33u) | (((tUInt64)(DEF_x1_avValue_rd_val__h3788)) << 1u)) | (tUInt64)(DEF_s3_reg_ex_mem_89_BIT_0___d192));
    break;
  default:
    DEF_IF_IF_s3_reg_ex_mem_89_BIT_0_92_THEN_s3_reg_ex_ETC___d278 = DEF_s3_reg_ex_mem_89_BITS_5_TO_1_60_CONCAT_s3_reg__ETC___d275;
  }
  DEF_b__h3340 = primSignExt32(32u, 12u, (tUInt32)(DEF_imm12_S__h2644));
  DEF_addr___1__h2736 = DEF__read_rs1_val__h2527 + DEF_b__h3340;
  DEF__theResult___snd_addr__h2760 = DEF_addr___1__h2736;
  DEF__0_CONCAT_s2_reg_id_ex_2_BITS_150_TO_139_40___d150 = DEF_imm12_I__h2643;
  DEF_result___1__h3154 = DEF__read_rs1_val__h2527 < DEF__0_CONCAT_s2_reg_id_ex_2_BITS_150_TO_139_40___d150 ? 1u : 0u;
  DEF_result___1__h3165 = DEF__read_rs1_val__h2527 ^ DEF__0_CONCAT_s2_reg_id_ex_2_BITS_150_TO_139_40___d150;
  DEF_result___1__h3282 = DEF__read_rs1_val__h2527 | DEF__0_CONCAT_s2_reg_id_ex_2_BITS_150_TO_139_40___d150;
  DEF_result___1__h3289 = DEF__read_rs1_val__h2527 & DEF__0_CONCAT_s2_reg_id_ex_2_BITS_150_TO_139_40___d150;
  DEF_b__h3085 = primSignExt32(32u, 12u, (tUInt32)(DEF_imm12_I__h2643));
  DEF_result___1__h3079 = DEF__read_rs1_val__h2527 + DEF_b__h3085;
  DEF_result___1__h3142 = primSLT8(1u,
				   32u,
				   (tUInt32)(DEF__read_rs1_val__h2527),
				   32u,
				   (tUInt32)(DEF_b__h3085)) ? 1u : 0u;
  switch (DEF_f3__h2641) {
  case (tUInt8)0u:
    DEF__theResult____h2707 = DEF_result___1__h3079;
    break;
  case (tUInt8)1u:
    DEF__theResult____h2707 = DEF_result___1__h3096;
    break;
  case (tUInt8)2u:
    DEF__theResult____h2707 = DEF_result___1__h3142;
    break;
  case (tUInt8)3u:
    DEF__theResult____h2707 = DEF_result___1__h3154;
    break;
  case (tUInt8)4u:
    DEF__theResult____h2707 = DEF_result___1__h3165;
    break;
  case (tUInt8)5u:
    DEF__theResult____h2707 = DEF_s2_reg_id_ex___d82.get_bits_in_word8(4u,
								       21u,
								       1u) ? DEF_result___1__h3193 : DEF_result___1__h3236;
    break;
  case (tUInt8)6u:
    DEF__theResult____h2707 = DEF_result___1__h3282;
    break;
  default:
    DEF__theResult____h2707 = DEF_result___1__h3289;
  }
  DEF__theResult___snd_addr__h2767 = DEF_op__h2640 == (tUInt8)3u ? DEF_result___1__h3079 : DEF__theResult___snd_addr__h2760;
  DEF_x__h3315 = DEF__theResult___snd_addr__h2767;
  switch (DEF_op__h2640) {
  case (tUInt8)51u:
    DEF_x__h2869 = DEF__theResult____h2690;
    break;
  case (tUInt8)19u:
    DEF_x__h2869 = DEF__theResult____h2707;
    break;
  default:
    DEF_x__h2869 = DEF__theResult___snd_val__h2766;
  }
  DEF_step_90_PLUS_1___d291 = DEF_b__h5326 + 1u;
  DEF_x__h1589 = DEF_pc_temp__h1556 + 4u;
  DEF_IF_s1_reg_if_id_8_BITS_20_TO_16_3_EQ_0_4_THEN__ETC___d80.set_bits_in_word((tUInt8)(DEF_rs1_val__h1734 >> 31u),
										2u,
										0u,
										1u).set_whole_word((((tUInt32)(2147483647u & DEF_rs1_val__h1734)) << 1u) | (tUInt32)((tUInt8)(DEF_rs2_val__h1735 >> 31u)),
												   1u).set_whole_word((((tUInt32)(2147483647u & DEF_rs2_val__h1735)) << 1u) | (tUInt32)((tUInt8)1u),
														      0u);
  DEF_IF_s2_reg_id_ex_2_BITS_204_TO_198_5_EQ_0b11001_ETC___d187.set_bits_in_word((tUInt8)255u & ((DEF_IF_s2_reg_id_ex_2_BITS_204_TO_198_5_EQ_0b11001_ETC___d103 << 6u) | (tUInt8)(DEF_x__h2869 >> 26u)),
										 2u,
										 0u,
										 8u).set_whole_word((((tUInt32)(67108863u & DEF_x__h2869)) << 6u) | (tUInt32)((tUInt8)(DEF_x__h3315 >> 26u)),
												    1u).set_whole_word(((((tUInt32)(67108863u & DEF_x__h3315)) << 6u) | (((tUInt32)(DEF_rd__h2639)) << 1u)) | (tUInt32)(DEF_s2_reg_id_ex___d82.get_bits_in_word8(0u,
																																 0u,
																																 1u)),
														       0u);
  DEF_IF_s2_reg_id_ex_2_BITS_204_TO_198_5_EQ_0b11001_ETC___d188.set_bits_in_word((tUInt32)(DEF_x__h2633 >> 21u),
										 3u,
										 0u,
										 11u).set_whole_word(((((tUInt32)(2097151u & DEF_x__h2633)) << 11u) | (((tUInt32)(DEF_x_f3__h2778)) << 8u)) | (tUInt32)(DEF_IF_s2_reg_id_ex_2_BITS_204_TO_198_5_EQ_0b11001_ETC___d187.get_bits_in_word8(2u,
																																			0u,
																																			8u)),
												     2u).set_whole_word(DEF_IF_s2_reg_id_ex_2_BITS_204_TO_198_5_EQ_0b11001_ETC___d187.get_whole_word(1u),
															1u).set_whole_word(DEF_IF_s2_reg_id_ex_2_BITS_204_TO_198_5_EQ_0b11001_ETC___d187.get_whole_word(0u),
																	   0u);
  DEF_decoded_instr_funct10__h1753 = 1023u & ((((tUInt32)(DEF_x__h2189)) << 3u) | (tUInt32)(DEF_f3__h1733));
  DEF_x__h2269 = 4095u & ((((tUInt32)(DEF_x__h2189)) << 5u) | (tUInt32)(DEF_x__h2145));
  DEF_s1_reg_if_id_8_BITS_7_TO_1_0_EQ_0b1100011_1_AN_ETC___d60 = 8589934591llu & ((((tUInt64)(DEF_s1_reg_if_id_8_BITS_7_TO_1_0_EQ_0b1100011_1_AN_ETC___d58)) << 32u) | (tUInt64)(DEF_x_branch_target__h2107));
  DEF_x__h1621 = (((((tUInt32)(DEF_x__h1626)) << 24u) | (((tUInt32)(DEF_x__h1628)) << 16u)) | (((tUInt32)(DEF_x__h1648)) << 8u)) | (tUInt32)(DEF_x__h1651);
  DEF_IF_s2_reg_branch_BIT_32_THEN_s2_reg_branch_BIT_ETC___d17.set_bits_in_word((tUInt8)(DEF_x__h1589 >> 31u),
										2u,
										0u,
										1u).set_whole_word((((tUInt32)(2147483647u & DEF_x__h1589)) << 1u) | (tUInt32)((tUInt8)(DEF_x__h1621 >> 31u)),
												   1u).set_whole_word((((tUInt32)(2147483647u & DEF_x__h1621)) << 1u) | (tUInt32)(DEF_NOT_s2_reg_branch_BIT_32___d4),
														      0u);
  DEF_decoded_instr_imm21_UJ__h1758 = 2097151u & (((((((tUInt32)(DEF_s1_reg_if_id_8_BIT_32___d23)) << 20u) | (((tUInt32)(DEF_s1_reg_if_id___d18.get_bits_in_word8(0u,
																				  13u,
																				  8u))) << 12u)) | (((tUInt32)(DEF_s1_reg_if_id___d18.get_bits_in_word8(0u,
																													21u,
																													1u))) << 11u)) | (DEF_s1_reg_if_id___d18.get_bits_in_word32(0u,
																																				    22u,
																																				    10u) << 1u)) | (tUInt32)((tUInt8)0u));
  DEF_s1_reg_if_id_8_BITS_32_TO_26_4_CONCAT_s1_reg_i_ETC___d76.set_bits_in_word((tUInt32)(DEF_x__h2269 >> 2u),
										2u,
										0u,
										10u).set_whole_word(((((tUInt32)((tUInt8)((tUInt8)3u & DEF_x__h2269))) << 30u) | (DEF_instr_SB_imm13__h1731 << 17u)) | (tUInt32)(DEF_decoded_instr_imm20_U__h1757 >> 3u),
												    1u).set_whole_word(((((tUInt32)((tUInt8)((tUInt8)7u & DEF_decoded_instr_imm20_U__h1757))) << 29u) | (DEF_decoded_instr_imm21_UJ__h1758 << 8u)) | (tUInt32)(DEF_s1_reg_if_id___d18.get_bits_in_word8(0u,
																																					21u,
																																					8u)),
														       0u);
  DEF_s1_reg_if_id_8_BITS_32_TO_26_4_CONCAT_s1_reg_i_ETC___d77.set_whole_word(((DEF_decoded_instr_funct10__h1753 << 22u) | (DEF_x__h2169 << 10u)) | DEF_s1_reg_if_id_8_BITS_32_TO_26_4_CONCAT_s1_reg_i_ETC___d76.get_bits_in_word32(2u,
																												    0u,
																												    10u),
									      2u).set_whole_word(DEF_s1_reg_if_id_8_BITS_32_TO_26_4_CONCAT_s1_reg_i_ETC___d76.get_whole_word(1u),
												 1u).set_whole_word(DEF_s1_reg_if_id_8_BITS_32_TO_26_4_CONCAT_s1_reg_i_ETC___d76.get_whole_word(0u),
														    0u);
  DEF_s1_reg_if_id_8_BITS_25_TO_21_7_CONCAT_s1_reg_i_ETC___d78.build_concat(576460752303423487llu & (((((((tUInt64)(DEF_rs2__h1730)) << 54u) | (((tUInt64)(DEF_x__h2169)) << 42u)) | (((tUInt64)(DEF_f3__h1733)) << 39u)) | (((tUInt64)(DEF_x__h2189)) << 32u)) | (tUInt64)(DEF_s1_reg_if_id_8_BITS_32_TO_26_4_CONCAT_s1_reg_i_ETC___d77.get_whole_word(2u))),
									    64u,
									    59u).set_whole_word(DEF_s1_reg_if_id_8_BITS_32_TO_26_4_CONCAT_s1_reg_i_ETC___d77.get_whole_word(1u),
												1u).set_whole_word(DEF_s1_reg_if_id_8_BITS_32_TO_26_4_CONCAT_s1_reg_i_ETC___d77.get_whole_word(0u),
														   0u);
  DEF_s1_reg_if_id_8_BITS_7_TO_1_0_CONCAT_s1_reg_if__ETC___d79.build_concat(17592186044415llu & ((((((tUInt64)(DEF_op__h1732)) << 37u) | (((tUInt64)(DEF_x__h2145)) << 32u)) | (((tUInt64)(DEF_rs1__h1729)) << 27u)) | (tUInt64)(DEF_s1_reg_if_id_8_BITS_25_TO_21_7_CONCAT_s1_reg_i_ETC___d78.get_bits_in_word32(3u,
																																						 0u,
																																						 27u))),
									    96u,
									    44u).set_whole_word(DEF_s1_reg_if_id_8_BITS_25_TO_21_7_CONCAT_s1_reg_i_ETC___d78.get_whole_word(2u),
												2u).set_whole_word(DEF_s1_reg_if_id_8_BITS_25_TO_21_7_CONCAT_s1_reg_i_ETC___d78.get_whole_word(1u),
														   1u).set_whole_word(DEF_s1_reg_if_id_8_BITS_25_TO_21_7_CONCAT_s1_reg_i_ETC___d78.get_whole_word(0u),
																      0u);
  DEF_s1_reg_if_id_8_BITS_64_TO_33_2_CONCAT_s1_reg_i_ETC___d81.set_bits_in_word((tUInt32)(DEF_pc__h1726 >> 19u),
										7u,
										0u,
										13u).set_whole_word((((tUInt32)(524287u & DEF_pc__h1726)) << 13u) | primExtract32(13u,
																				  140u,
																				  DEF_s1_reg_if_id_8_BITS_7_TO_1_0_CONCAT_s1_reg_if__ETC___d79,
																				  32u,
																				  139u,
																				  32u,
																				  127u),
												    6u).set_whole_word(primExtract32(32u,
																     140u,
																     DEF_s1_reg_if_id_8_BITS_7_TO_1_0_CONCAT_s1_reg_if__ETC___d79,
																     32u,
																     126u,
																     32u,
																     95u),
														       5u).set_whole_word(primExtract32(32u,
																			140u,
																			DEF_s1_reg_if_id_8_BITS_7_TO_1_0_CONCAT_s1_reg_if__ETC___d79,
																			32u,
																			94u,
																			32u,
																			63u),
																	  4u).set_whole_word(primExtract32(32u,
																					   140u,
																					   DEF_s1_reg_if_id_8_BITS_7_TO_1_0_CONCAT_s1_reg_if__ETC___d79,
																					   32u,
																					   62u,
																					   32u,
																					   31u),
																			     3u).set_whole_word((DEF_s1_reg_if_id_8_BITS_7_TO_1_0_CONCAT_s1_reg_if__ETC___d79.get_bits_in_word32(0u,
																																 0u,
																																 31u) << 1u) | (tUInt32)(DEF_IF_s1_reg_if_id_8_BITS_20_TO_16_3_EQ_0_4_THEN__ETC___d80.get_bits_in_word8(2u,
																																													0u,
																																													1u)),
																						2u).set_whole_word(DEF_IF_s1_reg_if_id_8_BITS_20_TO_16_3_EQ_0_4_THEN__ETC___d80.get_whole_word(1u),
																								   1u).set_whole_word(DEF_IF_s1_reg_if_id_8_BITS_20_TO_16_3_EQ_0_4_THEN__ETC___d80.get_whole_word(0u),
																										      0u);
  DEF_NOT_IF_s3_reg_ex_mem_89_BIT_0_92_THEN_s3_reg_e_ETC___d280 = 549755813887llu & ((((tUInt64)(!(DEF_IF_s3_reg_ex_mem_89_BIT_0_92_THEN_s3_reg_ex_me_ETC___d194 == (tUInt8)3u) && (DEF_IF_s3_reg_ex_mem_89_BIT_0_92_THEN_s3_reg_ex_me_ETC___d194 == (tUInt8)0u || (DEF_IF_s3_reg_ex_mem_89_BIT_0_92_THEN_s3_reg_ex_me_ETC___d195 && (DEF_s3_reg_ex_mem_89_BITS_74_TO_72_96_EQ_0b0___d206 || (DEF_s3_reg_ex_mem_89_BITS_74_TO_72_96_EQ_0b1___d211 || (DEF_s3_reg_ex_mem_89_BITS_74_TO_72_96_EQ_0b10___d197 || (DEF_f3__h3603 == (tUInt8)4u || DEF_f3__h3603 == (tUInt8)5u)))))))) << 38u) | DEF_IF_IF_s3_reg_ex_mem_89_BIT_0_92_THEN_s3_reg_ex_ETC___d278);
  if (!(PORT_RST_N == (tUInt8)0u))
  {
    dollar_display(sim_hdl, this, "s", &__str_literal_7);
    dollar_display(sim_hdl, this, "s", &__str_literal_8);
    dollar_display(sim_hdl, this, "s,1", &__str_literal_9, DEF_s2_reg_branch_BIT_32___d2);
    if (DEF_s2_reg_branch_BIT_32___d2)
      dollar_display(sim_hdl, this, "s", &__str_literal_10);
    if (DEF_s2_reg_branch_BIT_32___d2)
      dollar_display(sim_hdl, this, "s,32", &__str_literal_11, DEF_branch_target__h1436);
    if (DEF_NOT_s2_reg_branch_BIT_32___d4)
      dollar_display(sim_hdl, this, "s", &__str_literal_12);
    dollar_display(sim_hdl, this, "s,32", &__str_literal_13, DEF_pc_temp__h1556);
  }
  INST_s1_reg_pc.METH_write(DEF_x__h1589);
  INST_s1_reg_if_id.METH_write(DEF_IF_s2_reg_branch_BIT_32_THEN_s2_reg_branch_BIT_ETC___d17);
  if (!(PORT_RST_N == (tUInt8)0u))
  {
    dollar_display(sim_hdl, this, "s", &__str_literal_14);
    dollar_display(sim_hdl, this, "s,32", &__str_literal_15, DEF__read_instr__h1706);
    if (DEF_s1_reg_if_id_8_BITS_7_TO_1_0_EQ_0b1100011___d21)
      dollar_display(sim_hdl, this, "s", &__str_literal_16);
    if (DEF_s1_reg_if_id_8_BITS_7_TO_1_0_EQ_0b1100011___d21)
      dollar_display(sim_hdl, this, "s,32", &__str_literal_17, DEF_branch_target___1__h1795);
    dollar_display(sim_hdl,
		   this,
		   "s,1",
		   &__str_literal_18,
		   DEF_s1_reg_if_id_8_BITS_7_TO_1_0_EQ_0b1100011_1_AN_ETC___d58);
  }
  INST_s2_reg_branch.METH_write(DEF_s1_reg_if_id_8_BITS_7_TO_1_0_EQ_0b1100011_1_AN_ETC___d60);
  INST_s2_reg_id_ex.METH_write(DEF_s1_reg_if_id_8_BITS_64_TO_33_2_CONCAT_s1_reg_i_ETC___d81);
  if (!(PORT_RST_N == (tUInt8)0u))
  {
    dollar_display(sim_hdl, this, "s", &__str_literal_19);
    dollar_display(sim_hdl, this, "s,32", &__str_literal_20, DEF__read_rs1_val__h2527);
    dollar_display(sim_hdl, this, "s,32", &__str_literal_21, DEF__read_rs2_val__h2528);
    dollar_display(sim_hdl, this, "s,32", &__str_literal_22, DEF__read_rs1_val__h2527);
    dollar_display(sim_hdl, this, "s,32", &__str_literal_23, DEF__read_rs2_val__h2528);
  }
  INST_s3_reg_ex_mem.METH_write(DEF_IF_s2_reg_id_ex_2_BITS_204_TO_198_5_EQ_0b11001_ETC___d188);
  if (!(PORT_RST_N == (tUInt8)0u))
  {
    dollar_display(sim_hdl, this, "s", &__str_literal_24);
    dollar_display(sim_hdl, this, "s,32", &__str_literal_25, DEF__read_addr__h3504);
    dollar_display(sim_hdl, this, "s,32", &__str_literal_26, DEF__read_val__h3503);
    dollar_display(sim_hdl, this, "s,32", &__str_literal_27, DEF__read_addr__h3504);
    dollar_display(sim_hdl, this, "s,32", &__str_literal_28, DEF__read_val__h3503);
    if (DEF_IF_s3_reg_ex_mem_89_BIT_0_92_THEN_s3_reg_ex_me_ETC___d198)
      dollar_display(sim_hdl,
		     this,
		     "s,32,32",
		     &__str_literal_29,
		     DEF__read_addr__h3504,
		     DEF_load_data__h3708);
  }
  if (DEF_IF_s3_reg_ex_mem_89_BIT_0_92_THEN_s3_reg_ex_me_ETC___d218)
    INST_s4_dmem0.METH_upd(DEF_IF_s3_reg_ex_mem_89_BITS_74_TO_72_96_EQ_0b0_06_ETC___d220, DEF_x__h3908);
  if (DEF_IF_s3_reg_ex_mem_89_BIT_0_92_THEN_s3_reg_ex_me_ETC___d225)
    INST_s4_dmem1.METH_upd(DEF_IF_s3_reg_ex_mem_89_BITS_74_TO_72_96_EQ_0b0_06_ETC___d220,
			   DEF_IF_s3_reg_ex_mem_89_BITS_74_TO_72_96_EQ_0b0_06_ETC___d227);
  if (DEF_IF_s3_reg_ex_mem_89_BIT_0_92_THEN_s3_reg_ex_me_ETC___d234)
    INST_s4_dmem2.METH_upd(DEF_IF_s3_reg_ex_mem_89_BITS_74_TO_72_96_EQ_0b0_06_ETC___d220,
			   DEF_IF_s3_reg_ex_mem_89_BITS_74_TO_72_96_EQ_0b0_06_ETC___d236);
  if (DEF_IF_s3_reg_ex_mem_89_BIT_0_92_THEN_s3_reg_ex_me_ETC___d240)
    INST_s4_dmem3.METH_upd(DEF_IF_s3_reg_ex_mem_89_BITS_74_TO_72_96_EQ_0b0_06_ETC___d220,
			   DEF_IF_s3_reg_ex_mem_89_BITS_74_TO_72_96_EQ_0b0_06_ETC___d242);
  if (!(PORT_RST_N == (tUInt8)0u))
  {
    if (DEF_IF_s3_reg_ex_mem_89_BIT_0_92_THEN_s3_reg_ex_me_ETC___d243)
      dollar_display(sim_hdl, this, "s,32,8", &__str_literal_30, DEF_addr_byte__h3845, DEF_x__h3908);
    if (DEF_IF_s3_reg_ex_mem_89_BIT_0_92_THEN_s3_reg_ex_me_ETC___d244)
      dollar_display(sim_hdl, this, "s,32,8", &__str_literal_31, DEF_addr_byte__h3845, DEF_x__h3908);
    if (DEF_IF_s3_reg_ex_mem_89_BIT_0_92_THEN_s3_reg_ex_me_ETC___d245)
      dollar_display(sim_hdl, this, "s,32,8", &__str_literal_32, DEF_addr_byte__h3845, DEF_x__h3908);
    if (DEF_IF_s3_reg_ex_mem_89_BIT_0_92_THEN_s3_reg_ex_me_ETC___d246)
      dollar_display(sim_hdl, this, "s,32,8", &__str_literal_33, DEF_addr_byte__h3845, DEF_x__h3908);
  }
  INST_s4_reg_mem_wb.METH_write(DEF_NOT_IF_s3_reg_ex_mem_89_BIT_0_92_THEN_s3_reg_e_ETC___d280);
  if (!(PORT_RST_N == (tUInt8)0u))
  {
    dollar_display(sim_hdl, this, "s", &__str_literal_34);
    dollar_display(sim_hdl, this, "s,1", &__str_literal_35, DEF_s4_reg_mem_wb_81_BIT_38___d282);
    dollar_display(sim_hdl,
		   this,
		   "s,32,5",
		   &__str_literal_36,
		   DEF__read_rd_val__h5179,
		   DEF__read_rd__h5178);
  }
  if (DEF_s4_reg_mem_wb_81_BIT_38_82_AND_s4_reg_mem_wb_8_ETC___d289)
    INST_regfile_regfile.METH_upd(DEF__read_rd__h5178, DEF__read_rd_val__h5179);
  if (!(PORT_RST_N == (tUInt8)0u))
    if (DEF_s4_reg_mem_wb_81_BIT_38_82_AND_s4_reg_mem_wb_8_ETC___d286)
      dollar_display(sim_hdl,
		     this,
		     "s,32,5",
		     &__str_literal_37,
		     DEF__read_rd_val__h5179,
		     DEF__read_rd__h5178);
  INST_step.METH_write(DEF_step_90_PLUS_1___d291);
}

void MOD_mkTestbench_pipe::RL_done()
{
  if (!(PORT_RST_N == (tUInt8)0u))
    dollar_finish(sim_hdl, "32", 1u);
}


/* Methods */


/* Reset routines */

void MOD_mkTestbench_pipe::reset_RST_N(tUInt8 ARG_rst_in)
{
  PORT_RST_N = ARG_rst_in;
  INST_step.reset_RST(ARG_rst_in);
  INST_s1_reg_pc.reset_RST(ARG_rst_in);
  INST_regfile_flag.reset_RST(ARG_rst_in);
}


/* Static handles to reset routines */


/* Functions for the parent module to register its reset fns */


/* Functions to set the elaborated clock id */

void MOD_mkTestbench_pipe::set_clk_0(char const *s)
{
  __clk_handle_0 = bk_get_or_define_clock(sim_hdl, s);
}


/* State dumping routine */
void MOD_mkTestbench_pipe::dump_state(unsigned int indent)
{
  printf("%*s%s:\n", indent, "", inst_name);
  INST_regfile_flag.dump_state(indent + 2u);
  INST_regfile_regfile.dump_state(indent + 2u);
  INST_s1_imem.dump_state(indent + 2u);
  INST_s1_reg_if_id.dump_state(indent + 2u);
  INST_s1_reg_pc.dump_state(indent + 2u);
  INST_s2_reg_branch.dump_state(indent + 2u);
  INST_s2_reg_id_ex.dump_state(indent + 2u);
  INST_s3_reg_ex_mem.dump_state(indent + 2u);
  INST_s4_dmem0.dump_state(indent + 2u);
  INST_s4_dmem1.dump_state(indent + 2u);
  INST_s4_dmem2.dump_state(indent + 2u);
  INST_s4_dmem3.dump_state(indent + 2u);
  INST_s4_reg_mem_wb.dump_state(indent + 2u);
  INST_step.dump_state(indent + 2u);
}


/* VCD dumping routines */

unsigned int MOD_mkTestbench_pipe::dump_VCD_defs(unsigned int levels)
{
  vcd_write_scope_start(sim_hdl, inst_name);
  vcd_num = vcd_reserve_ids(sim_hdl, 32u);
  unsigned int num = vcd_num;
  for (unsigned int clk = 0u; clk < bk_num_clocks(sim_hdl); ++clk)
    vcd_add_clock_def(sim_hdl, this, bk_clock_name(sim_hdl, clk), bk_clock_vcd_num(sim_hdl, clk));
  vcd_write_def(sim_hdl, bk_clock_vcd_num(sim_hdl, __clk_handle_0), "CLK", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_done", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_pipe", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "IF_s1_reg_if_id_8_BITS_20_TO_16_3_EQ_0_4_THEN__ETC___d80", 65u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "IF_s2_reg_branch_BIT_32_THEN_s2_reg_branch_BIT_ETC___d17", 65u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "IF_s2_reg_id_ex_2_BITS_204_TO_198_5_EQ_0b11001_ETC___d187", 72u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "IF_s2_reg_id_ex_2_BITS_204_TO_198_5_EQ_0b11001_ETC___d188", 107u);
  vcd_write_def(sim_hdl, num++, "RST_N", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_done", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_pipe", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h5326", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "s1_reg_if_id_8_BITS_25_TO_21_7_CONCAT_s1_reg_i_ETC___d78", 123u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "s1_reg_if_id_8_BITS_32_TO_26_4_CONCAT_s1_reg_i_ETC___d76", 74u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "s1_reg_if_id_8_BITS_32_TO_26_4_CONCAT_s1_reg_i_ETC___d77", 96u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "s1_reg_if_id_8_BITS_64_TO_33_2_CONCAT_s1_reg_i_ETC___d81", 237u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "s1_reg_if_id_8_BITS_7_TO_1_0_CONCAT_s1_reg_if__ETC___d79", 140u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "s1_reg_if_id___d18", 65u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "s2_reg_id_ex___d82", 237u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "s3_reg_ex_mem___d189", 107u);
  num = INST_regfile_flag.dump_VCD_defs(num);
  num = INST_regfile_regfile.dump_VCD_defs(num);
  num = INST_s1_imem.dump_VCD_defs(num);
  num = INST_s1_reg_if_id.dump_VCD_defs(num);
  num = INST_s1_reg_pc.dump_VCD_defs(num);
  num = INST_s2_reg_branch.dump_VCD_defs(num);
  num = INST_s2_reg_id_ex.dump_VCD_defs(num);
  num = INST_s3_reg_ex_mem.dump_VCD_defs(num);
  num = INST_s4_dmem0.dump_VCD_defs(num);
  num = INST_s4_dmem1.dump_VCD_defs(num);
  num = INST_s4_dmem2.dump_VCD_defs(num);
  num = INST_s4_dmem3.dump_VCD_defs(num);
  num = INST_s4_reg_mem_wb.dump_VCD_defs(num);
  num = INST_step.dump_VCD_defs(num);
  vcd_write_scope_end(sim_hdl);
  return num;
}

void MOD_mkTestbench_pipe::dump_VCD(tVCDDumpType dt,
				    unsigned int levels,
				    MOD_mkTestbench_pipe &backing)
{
  vcd_defs(dt, backing);
  vcd_prims(dt, backing);
}

void MOD_mkTestbench_pipe::vcd_defs(tVCDDumpType dt, MOD_mkTestbench_pipe &backing)
{
  unsigned int num = vcd_num;
  if (dt == VCD_DUMP_XS)
  {
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 65u);
    vcd_write_x(sim_hdl, num++, 65u);
    vcd_write_x(sim_hdl, num++, 72u);
    vcd_write_x(sim_hdl, num++, 107u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 123u);
    vcd_write_x(sim_hdl, num++, 74u);
    vcd_write_x(sim_hdl, num++, 96u);
    vcd_write_x(sim_hdl, num++, 237u);
    vcd_write_x(sim_hdl, num++, 140u);
    vcd_write_x(sim_hdl, num++, 65u);
    vcd_write_x(sim_hdl, num++, 237u);
    vcd_write_x(sim_hdl, num++, 107u);
  }
  else
    if (dt == VCD_DUMP_CHANGES)
    {
      if ((backing.DEF_CAN_FIRE_RL_done) != DEF_CAN_FIRE_RL_done)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_done, 1u);
	backing.DEF_CAN_FIRE_RL_done = DEF_CAN_FIRE_RL_done;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_pipe) != DEF_CAN_FIRE_RL_pipe)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_pipe, 1u);
	backing.DEF_CAN_FIRE_RL_pipe = DEF_CAN_FIRE_RL_pipe;
      }
      ++num;
      if ((backing.DEF_IF_s1_reg_if_id_8_BITS_20_TO_16_3_EQ_0_4_THEN__ETC___d80) != DEF_IF_s1_reg_if_id_8_BITS_20_TO_16_3_EQ_0_4_THEN__ETC___d80)
      {
	vcd_write_val(sim_hdl, num, DEF_IF_s1_reg_if_id_8_BITS_20_TO_16_3_EQ_0_4_THEN__ETC___d80, 65u);
	backing.DEF_IF_s1_reg_if_id_8_BITS_20_TO_16_3_EQ_0_4_THEN__ETC___d80 = DEF_IF_s1_reg_if_id_8_BITS_20_TO_16_3_EQ_0_4_THEN__ETC___d80;
      }
      ++num;
      if ((backing.DEF_IF_s2_reg_branch_BIT_32_THEN_s2_reg_branch_BIT_ETC___d17) != DEF_IF_s2_reg_branch_BIT_32_THEN_s2_reg_branch_BIT_ETC___d17)
      {
	vcd_write_val(sim_hdl, num, DEF_IF_s2_reg_branch_BIT_32_THEN_s2_reg_branch_BIT_ETC___d17, 65u);
	backing.DEF_IF_s2_reg_branch_BIT_32_THEN_s2_reg_branch_BIT_ETC___d17 = DEF_IF_s2_reg_branch_BIT_32_THEN_s2_reg_branch_BIT_ETC___d17;
      }
      ++num;
      if ((backing.DEF_IF_s2_reg_id_ex_2_BITS_204_TO_198_5_EQ_0b11001_ETC___d187) != DEF_IF_s2_reg_id_ex_2_BITS_204_TO_198_5_EQ_0b11001_ETC___d187)
      {
	vcd_write_val(sim_hdl, num, DEF_IF_s2_reg_id_ex_2_BITS_204_TO_198_5_EQ_0b11001_ETC___d187, 72u);
	backing.DEF_IF_s2_reg_id_ex_2_BITS_204_TO_198_5_EQ_0b11001_ETC___d187 = DEF_IF_s2_reg_id_ex_2_BITS_204_TO_198_5_EQ_0b11001_ETC___d187;
      }
      ++num;
      if ((backing.DEF_IF_s2_reg_id_ex_2_BITS_204_TO_198_5_EQ_0b11001_ETC___d188) != DEF_IF_s2_reg_id_ex_2_BITS_204_TO_198_5_EQ_0b11001_ETC___d188)
      {
	vcd_write_val(sim_hdl, num, DEF_IF_s2_reg_id_ex_2_BITS_204_TO_198_5_EQ_0b11001_ETC___d188, 107u);
	backing.DEF_IF_s2_reg_id_ex_2_BITS_204_TO_198_5_EQ_0b11001_ETC___d188 = DEF_IF_s2_reg_id_ex_2_BITS_204_TO_198_5_EQ_0b11001_ETC___d188;
      }
      ++num;
      if ((backing.PORT_RST_N) != PORT_RST_N)
      {
	vcd_write_val(sim_hdl, num, PORT_RST_N, 1u);
	backing.PORT_RST_N = PORT_RST_N;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_done) != DEF_WILL_FIRE_RL_done)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_done, 1u);
	backing.DEF_WILL_FIRE_RL_done = DEF_WILL_FIRE_RL_done;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_pipe) != DEF_WILL_FIRE_RL_pipe)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_pipe, 1u);
	backing.DEF_WILL_FIRE_RL_pipe = DEF_WILL_FIRE_RL_pipe;
      }
      ++num;
      if ((backing.DEF_b__h5326) != DEF_b__h5326)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h5326, 32u);
	backing.DEF_b__h5326 = DEF_b__h5326;
      }
      ++num;
      if ((backing.DEF_s1_reg_if_id_8_BITS_25_TO_21_7_CONCAT_s1_reg_i_ETC___d78) != DEF_s1_reg_if_id_8_BITS_25_TO_21_7_CONCAT_s1_reg_i_ETC___d78)
      {
	vcd_write_val(sim_hdl, num, DEF_s1_reg_if_id_8_BITS_25_TO_21_7_CONCAT_s1_reg_i_ETC___d78, 123u);
	backing.DEF_s1_reg_if_id_8_BITS_25_TO_21_7_CONCAT_s1_reg_i_ETC___d78 = DEF_s1_reg_if_id_8_BITS_25_TO_21_7_CONCAT_s1_reg_i_ETC___d78;
      }
      ++num;
      if ((backing.DEF_s1_reg_if_id_8_BITS_32_TO_26_4_CONCAT_s1_reg_i_ETC___d76) != DEF_s1_reg_if_id_8_BITS_32_TO_26_4_CONCAT_s1_reg_i_ETC___d76)
      {
	vcd_write_val(sim_hdl, num, DEF_s1_reg_if_id_8_BITS_32_TO_26_4_CONCAT_s1_reg_i_ETC___d76, 74u);
	backing.DEF_s1_reg_if_id_8_BITS_32_TO_26_4_CONCAT_s1_reg_i_ETC___d76 = DEF_s1_reg_if_id_8_BITS_32_TO_26_4_CONCAT_s1_reg_i_ETC___d76;
      }
      ++num;
      if ((backing.DEF_s1_reg_if_id_8_BITS_32_TO_26_4_CONCAT_s1_reg_i_ETC___d77) != DEF_s1_reg_if_id_8_BITS_32_TO_26_4_CONCAT_s1_reg_i_ETC___d77)
      {
	vcd_write_val(sim_hdl, num, DEF_s1_reg_if_id_8_BITS_32_TO_26_4_CONCAT_s1_reg_i_ETC___d77, 96u);
	backing.DEF_s1_reg_if_id_8_BITS_32_TO_26_4_CONCAT_s1_reg_i_ETC___d77 = DEF_s1_reg_if_id_8_BITS_32_TO_26_4_CONCAT_s1_reg_i_ETC___d77;
      }
      ++num;
      if ((backing.DEF_s1_reg_if_id_8_BITS_64_TO_33_2_CONCAT_s1_reg_i_ETC___d81) != DEF_s1_reg_if_id_8_BITS_64_TO_33_2_CONCAT_s1_reg_i_ETC___d81)
      {
	vcd_write_val(sim_hdl, num, DEF_s1_reg_if_id_8_BITS_64_TO_33_2_CONCAT_s1_reg_i_ETC___d81, 237u);
	backing.DEF_s1_reg_if_id_8_BITS_64_TO_33_2_CONCAT_s1_reg_i_ETC___d81 = DEF_s1_reg_if_id_8_BITS_64_TO_33_2_CONCAT_s1_reg_i_ETC___d81;
      }
      ++num;
      if ((backing.DEF_s1_reg_if_id_8_BITS_7_TO_1_0_CONCAT_s1_reg_if__ETC___d79) != DEF_s1_reg_if_id_8_BITS_7_TO_1_0_CONCAT_s1_reg_if__ETC___d79)
      {
	vcd_write_val(sim_hdl, num, DEF_s1_reg_if_id_8_BITS_7_TO_1_0_CONCAT_s1_reg_if__ETC___d79, 140u);
	backing.DEF_s1_reg_if_id_8_BITS_7_TO_1_0_CONCAT_s1_reg_if__ETC___d79 = DEF_s1_reg_if_id_8_BITS_7_TO_1_0_CONCAT_s1_reg_if__ETC___d79;
      }
      ++num;
      if ((backing.DEF_s1_reg_if_id___d18) != DEF_s1_reg_if_id___d18)
      {
	vcd_write_val(sim_hdl, num, DEF_s1_reg_if_id___d18, 65u);
	backing.DEF_s1_reg_if_id___d18 = DEF_s1_reg_if_id___d18;
      }
      ++num;
      if ((backing.DEF_s2_reg_id_ex___d82) != DEF_s2_reg_id_ex___d82)
      {
	vcd_write_val(sim_hdl, num, DEF_s2_reg_id_ex___d82, 237u);
	backing.DEF_s2_reg_id_ex___d82 = DEF_s2_reg_id_ex___d82;
      }
      ++num;
      if ((backing.DEF_s3_reg_ex_mem___d189) != DEF_s3_reg_ex_mem___d189)
      {
	vcd_write_val(sim_hdl, num, DEF_s3_reg_ex_mem___d189, 107u);
	backing.DEF_s3_reg_ex_mem___d189 = DEF_s3_reg_ex_mem___d189;
      }
      ++num;
    }
    else
    {
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_done, 1u);
      backing.DEF_CAN_FIRE_RL_done = DEF_CAN_FIRE_RL_done;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_pipe, 1u);
      backing.DEF_CAN_FIRE_RL_pipe = DEF_CAN_FIRE_RL_pipe;
      vcd_write_val(sim_hdl, num++, DEF_IF_s1_reg_if_id_8_BITS_20_TO_16_3_EQ_0_4_THEN__ETC___d80, 65u);
      backing.DEF_IF_s1_reg_if_id_8_BITS_20_TO_16_3_EQ_0_4_THEN__ETC___d80 = DEF_IF_s1_reg_if_id_8_BITS_20_TO_16_3_EQ_0_4_THEN__ETC___d80;
      vcd_write_val(sim_hdl, num++, DEF_IF_s2_reg_branch_BIT_32_THEN_s2_reg_branch_BIT_ETC___d17, 65u);
      backing.DEF_IF_s2_reg_branch_BIT_32_THEN_s2_reg_branch_BIT_ETC___d17 = DEF_IF_s2_reg_branch_BIT_32_THEN_s2_reg_branch_BIT_ETC___d17;
      vcd_write_val(sim_hdl, num++, DEF_IF_s2_reg_id_ex_2_BITS_204_TO_198_5_EQ_0b11001_ETC___d187, 72u);
      backing.DEF_IF_s2_reg_id_ex_2_BITS_204_TO_198_5_EQ_0b11001_ETC___d187 = DEF_IF_s2_reg_id_ex_2_BITS_204_TO_198_5_EQ_0b11001_ETC___d187;
      vcd_write_val(sim_hdl, num++, DEF_IF_s2_reg_id_ex_2_BITS_204_TO_198_5_EQ_0b11001_ETC___d188, 107u);
      backing.DEF_IF_s2_reg_id_ex_2_BITS_204_TO_198_5_EQ_0b11001_ETC___d188 = DEF_IF_s2_reg_id_ex_2_BITS_204_TO_198_5_EQ_0b11001_ETC___d188;
      vcd_write_val(sim_hdl, num++, PORT_RST_N, 1u);
      backing.PORT_RST_N = PORT_RST_N;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_done, 1u);
      backing.DEF_WILL_FIRE_RL_done = DEF_WILL_FIRE_RL_done;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_pipe, 1u);
      backing.DEF_WILL_FIRE_RL_pipe = DEF_WILL_FIRE_RL_pipe;
      vcd_write_val(sim_hdl, num++, DEF_b__h5326, 32u);
      backing.DEF_b__h5326 = DEF_b__h5326;
      vcd_write_val(sim_hdl, num++, DEF_s1_reg_if_id_8_BITS_25_TO_21_7_CONCAT_s1_reg_i_ETC___d78, 123u);
      backing.DEF_s1_reg_if_id_8_BITS_25_TO_21_7_CONCAT_s1_reg_i_ETC___d78 = DEF_s1_reg_if_id_8_BITS_25_TO_21_7_CONCAT_s1_reg_i_ETC___d78;
      vcd_write_val(sim_hdl, num++, DEF_s1_reg_if_id_8_BITS_32_TO_26_4_CONCAT_s1_reg_i_ETC___d76, 74u);
      backing.DEF_s1_reg_if_id_8_BITS_32_TO_26_4_CONCAT_s1_reg_i_ETC___d76 = DEF_s1_reg_if_id_8_BITS_32_TO_26_4_CONCAT_s1_reg_i_ETC___d76;
      vcd_write_val(sim_hdl, num++, DEF_s1_reg_if_id_8_BITS_32_TO_26_4_CONCAT_s1_reg_i_ETC___d77, 96u);
      backing.DEF_s1_reg_if_id_8_BITS_32_TO_26_4_CONCAT_s1_reg_i_ETC___d77 = DEF_s1_reg_if_id_8_BITS_32_TO_26_4_CONCAT_s1_reg_i_ETC___d77;
      vcd_write_val(sim_hdl, num++, DEF_s1_reg_if_id_8_BITS_64_TO_33_2_CONCAT_s1_reg_i_ETC___d81, 237u);
      backing.DEF_s1_reg_if_id_8_BITS_64_TO_33_2_CONCAT_s1_reg_i_ETC___d81 = DEF_s1_reg_if_id_8_BITS_64_TO_33_2_CONCAT_s1_reg_i_ETC___d81;
      vcd_write_val(sim_hdl, num++, DEF_s1_reg_if_id_8_BITS_7_TO_1_0_CONCAT_s1_reg_if__ETC___d79, 140u);
      backing.DEF_s1_reg_if_id_8_BITS_7_TO_1_0_CONCAT_s1_reg_if__ETC___d79 = DEF_s1_reg_if_id_8_BITS_7_TO_1_0_CONCAT_s1_reg_if__ETC___d79;
      vcd_write_val(sim_hdl, num++, DEF_s1_reg_if_id___d18, 65u);
      backing.DEF_s1_reg_if_id___d18 = DEF_s1_reg_if_id___d18;
      vcd_write_val(sim_hdl, num++, DEF_s2_reg_id_ex___d82, 237u);
      backing.DEF_s2_reg_id_ex___d82 = DEF_s2_reg_id_ex___d82;
      vcd_write_val(sim_hdl, num++, DEF_s3_reg_ex_mem___d189, 107u);
      backing.DEF_s3_reg_ex_mem___d189 = DEF_s3_reg_ex_mem___d189;
    }
}

void MOD_mkTestbench_pipe::vcd_prims(tVCDDumpType dt, MOD_mkTestbench_pipe &backing)
{
  INST_regfile_flag.dump_VCD(dt, backing.INST_regfile_flag);
  INST_regfile_regfile.dump_VCD(dt, backing.INST_regfile_regfile);
  INST_s1_imem.dump_VCD(dt, backing.INST_s1_imem);
  INST_s1_reg_if_id.dump_VCD(dt, backing.INST_s1_reg_if_id);
  INST_s1_reg_pc.dump_VCD(dt, backing.INST_s1_reg_pc);
  INST_s2_reg_branch.dump_VCD(dt, backing.INST_s2_reg_branch);
  INST_s2_reg_id_ex.dump_VCD(dt, backing.INST_s2_reg_id_ex);
  INST_s3_reg_ex_mem.dump_VCD(dt, backing.INST_s3_reg_ex_mem);
  INST_s4_dmem0.dump_VCD(dt, backing.INST_s4_dmem0);
  INST_s4_dmem1.dump_VCD(dt, backing.INST_s4_dmem1);
  INST_s4_dmem2.dump_VCD(dt, backing.INST_s4_dmem2);
  INST_s4_dmem3.dump_VCD(dt, backing.INST_s4_dmem3);
  INST_s4_reg_mem_wb.dump_VCD(dt, backing.INST_s4_reg_mem_wb);
  INST_step.dump_VCD(dt, backing.INST_step);
}
