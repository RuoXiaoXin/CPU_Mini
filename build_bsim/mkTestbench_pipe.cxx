/*
 * Generated by Bluespec Compiler (build 6a8cedf)
 * 
 * On Sat May 23 16:55:36 CST 2020
 * 
 */
#include "bluesim_primitives.h"
#include "mkTestbench_pipe.h"


/* String declarations */
static std::string const __str_literal_7("**************************************************************************",
					 74u);
static std::string const __str_literal_8("1:fetch", 7u);
static std::string const __str_literal_14("2:decode", 8u);
static std::string const __str_literal_19("3:execute", 9u);
static std::string const __str_literal_24("4:mem", 5u);
static std::string const __str_literal_34("5:write back", 12u);
static std::string const __str_literal_16("ID:Branch Instr", 15u);
static std::string const __str_literal_17("ID:Branch Target is %b", 22u);
static std::string const __str_literal_18("ID:Branch_EN is ", 16u);
static std::string const __str_literal_10("IF:branch taken", 15u);
static std::string const __str_literal_11("IF:branch target is %b", 22u);
static std::string const __str_literal_12("IF:branch untaken", 17u);
static std::string const __str_literal_29("LW:addr is %0d, data is %0d", 27u);
static std::string const __str_literal_37("RegFile:write %0d in %0d", 24u);
static std::string const __str_literal_25("addr:%0d", 8u);
static std::string const __str_literal_27("addr:%b", 7u);
static std::string const __str_literal_9("branch_EN is ", 13u);
static std::string const __str_literal_3("dmem0.txt", 9u);
static std::string const __str_literal_30("dmem0.upd(%0d,%b)", 17u);
static std::string const __str_literal_4("dmem1.txt", 9u);
static std::string const __str_literal_31("dmem1.upd(%0d,%b)", 17u);
static std::string const __str_literal_5("dmem2.txt", 9u);
static std::string const __str_literal_32("dmem2.upd(%0d,%b)", 17u);
static std::string const __str_literal_6("dmem3.txt", 9u);
static std::string const __str_literal_33("dmem3.upd(%0d,%b)", 17u);
static std::string const __str_literal_36("if valid,write %0d in %0d", 25u);
static std::string const __str_literal_2("imem_beq.txt", 12u);
static std::string const __str_literal_15("instr:%b", 8u);
static std::string const __str_literal_13("pc is %b", 8u);
static std::string const __str_literal_35("rd_valid:%b", 11u);
static std::string const __str_literal_1("regfile.txt", 11u);
static std::string const __str_literal_22("rs1_val:%0d", 11u);
static std::string const __str_literal_20("rs1_val:%b", 10u);
static std::string const __str_literal_23("rs2_val:%0d", 11u);
static std::string const __str_literal_21("rs2_val:%b", 10u);
static std::string const __str_literal_26("val :%0d", 8u);
static std::string const __str_literal_28("val :%b", 7u);


/* Constructor */
MOD_mkTestbench_pipe::MOD_mkTestbench_pipe(tSimStateHdl simHdl, char const *name, Module *parent)
  : Module(simHdl, name, parent),
    __clk_handle_0(BAD_CLOCK_HANDLE),
    INST_regfile_flag(simHdl, "regfile_flag", this, 1u, (tUInt8)0u, (tUInt8)0u),
    INST_regfile_regfile(simHdl,
			 "regfile_regfile",
			 this,
			 __str_literal_1,
			 5u,
			 32u,
			 (tUInt8)0u,
			 (tUInt8)31u,
			 (tUInt8)0u),
    INST_s1_imem(simHdl, "s1_imem", this, __str_literal_2, 32u, 8u, 0u, 4294967295u, (tUInt8)0u),
    INST_s1_reg_if_id(simHdl, "s1_reg_if_id", this, 64u),
    INST_s1_reg_pc(simHdl, "s1_reg_pc", this, 32u, 0u, (tUInt8)0u),
    INST_s2_reg_branch(simHdl, "s2_reg_branch", this, 33u),
    INST_s2_reg_id_ex(simHdl, "s2_reg_id_ex", this, 236u),
    INST_s3_reg_ex_mem(simHdl, "s3_reg_ex_mem", this, 106u),
    INST_s4_dmem0(simHdl, "s4_dmem0", this, __str_literal_3, 32u, 8u, 0u, 4294967295u, (tUInt8)0u),
    INST_s4_dmem1(simHdl, "s4_dmem1", this, __str_literal_4, 32u, 8u, 0u, 4294967295u, (tUInt8)0u),
    INST_s4_dmem2(simHdl, "s4_dmem2", this, __str_literal_5, 32u, 8u, 0u, 4294967295u, (tUInt8)0u),
    INST_s4_dmem3(simHdl, "s4_dmem3", this, __str_literal_6, 32u, 8u, 0u, 4294967295u, (tUInt8)0u),
    INST_s4_reg_mem_wb(simHdl, "s4_reg_mem_wb", this, 38u),
    INST_step(simHdl, "step", this, 32u, 0u, (tUInt8)0u),
    PORT_RST_N((tUInt8)1u),
    DEF_s2_reg_id_ex___d82(236u),
    DEF_s3_reg_ex_mem___d187(106u),
    DEF_s1_reg_if_id_8_BITS_63_TO_32_2_CONCAT_s1_reg_i_ETC___d81(236u),
    DEF_s1_reg_if_id_8_BITS_6_TO_0_0_CONCAT_s1_reg_if__ETC___d79(140u),
    DEF_s1_reg_if_id_8_BITS_24_TO_20_7_CONCAT_s1_reg_i_ETC___d78(123u),
    DEF_s1_reg_if_id_8_BITS_31_TO_25_4_CONCAT_s1_reg_i_ETC___d77(96u),
    DEF_IF_s2_reg_id_ex_2_BITS_203_TO_197_5_EQ_0b11001_ETC___d186(106u),
    DEF_IF_s2_reg_id_ex_2_BITS_203_TO_197_5_EQ_0b11001_ETC___d185(71u),
    DEF_s1_reg_if_id_8_BITS_31_TO_25_4_CONCAT_s1_reg_i_ETC___d76(74u)
{
  symbol_count = 21u;
  symbols = new tSym[symbol_count];
  init_symbols_0();
}


/* Symbol init fns */

void MOD_mkTestbench_pipe::init_symbols_0()
{
  init_symbol(&symbols[0u], "b__h5082", SYM_DEF, &DEF_b__h5082, 32u);
  init_symbol(&symbols[1u], "CAN_FIRE_RL_done", SYM_DEF, &DEF_CAN_FIRE_RL_done, 1u);
  init_symbol(&symbols[2u], "CAN_FIRE_RL_pipe", SYM_DEF, &DEF_CAN_FIRE_RL_pipe, 1u);
  init_symbol(&symbols[3u], "RL_done", SYM_RULE);
  init_symbol(&symbols[4u], "RL_pipe", SYM_RULE);
  init_symbol(&symbols[5u], "regfile_flag", SYM_MODULE, &INST_regfile_flag);
  init_symbol(&symbols[6u], "regfile_regfile", SYM_MODULE, &INST_regfile_regfile);
  init_symbol(&symbols[7u], "s1_imem", SYM_MODULE, &INST_s1_imem);
  init_symbol(&symbols[8u], "s1_reg_if_id", SYM_MODULE, &INST_s1_reg_if_id);
  init_symbol(&symbols[9u], "s1_reg_pc", SYM_MODULE, &INST_s1_reg_pc);
  init_symbol(&symbols[10u], "s2_reg_branch", SYM_MODULE, &INST_s2_reg_branch);
  init_symbol(&symbols[11u], "s2_reg_id_ex", SYM_MODULE, &INST_s2_reg_id_ex);
  init_symbol(&symbols[12u], "s3_reg_ex_mem", SYM_MODULE, &INST_s3_reg_ex_mem);
  init_symbol(&symbols[13u], "s4_dmem0", SYM_MODULE, &INST_s4_dmem0);
  init_symbol(&symbols[14u], "s4_dmem1", SYM_MODULE, &INST_s4_dmem1);
  init_symbol(&symbols[15u], "s4_dmem2", SYM_MODULE, &INST_s4_dmem2);
  init_symbol(&symbols[16u], "s4_dmem3", SYM_MODULE, &INST_s4_dmem3);
  init_symbol(&symbols[17u], "s4_reg_mem_wb", SYM_MODULE, &INST_s4_reg_mem_wb);
  init_symbol(&symbols[18u], "step", SYM_MODULE, &INST_step);
  init_symbol(&symbols[19u], "WILL_FIRE_RL_done", SYM_DEF, &DEF_WILL_FIRE_RL_done, 1u);
  init_symbol(&symbols[20u], "WILL_FIRE_RL_pipe", SYM_DEF, &DEF_WILL_FIRE_RL_pipe, 1u);
}


/* Rule actions */

void MOD_mkTestbench_pipe::RL_pipe()
{
  tUInt64 DEF_s1_reg_if_id_8_BITS_6_TO_0_0_EQ_0b1100011_1_AN_ETC___d60;
  tUInt64 DEF_NOT_s3_reg_ex_mem_87_BITS_70_TO_69_90_EQ_3_43__ETC___d275;
  tUInt32 DEF_decoded_instr_imm21_UJ__h1741;
  tUInt32 DEF_x__h1610;
  tUInt64 DEF_IF_s2_reg_branch_BIT_32_THEN_s2_reg_branch_BIT_ETC___d17;
  tUInt32 DEF_x__h2251;
  tUInt32 DEF_decoded_instr_funct10__h1736;
  tUInt32 DEF_x__h1579;
  tUInt32 DEF_step_83_PLUS_1___d284;
  tUInt32 DEF__0_CONCAT_s2_reg_id_ex_2_BITS_149_TO_138_40___d150;
  tUInt32 DEF_b__h3052;
  tUInt32 DEF_b__h3307;
  tUInt32 DEF_instr_SB_imm13__h1714;
  tUInt32 DEF_s4_dmem1_sub_s3_reg_ex_mem_87_BITS_36_TO_5_88__ETC___d199;
  tUInt8 DEF_NOT_s2_reg_branch_BIT_32___d4;
  tUInt8 DEF_s1_reg_if_id_8_BITS_6_TO_0_0_EQ_0b1100011_1_AN_ETC___d58;
  tUInt8 DEF_s3_reg_ex_mem_87_BITS_70_TO_69_90_EQ_1_91_AND__ETC___d194;
  tUInt8 DEF_NOT_s3_reg_ex_mem_87_BITS_73_TO_71_92_EQ_0b0_02___d206;
  tUInt8 DEF_s3_reg_ex_mem_87_BITS_70_TO_69_90_EQ_2_01_AND__ETC___d239;
  tUInt8 DEF_s3_reg_ex_mem_87_BITS_70_TO_69_90_EQ_2_01_AND__ETC___d240;
  tUInt8 DEF_s3_reg_ex_mem_87_BITS_70_TO_69_90_EQ_2_01_AND__ETC___d221;
  tUInt8 DEF_s3_reg_ex_mem_87_BITS_70_TO_69_90_EQ_2_01_AND__ETC___d214;
  tUInt8 DEF_s3_reg_ex_mem_87_BITS_70_TO_69_90_EQ_2_01_AND__ETC___d241;
  tUInt8 DEF_s3_reg_ex_mem_87_BITS_70_TO_69_90_EQ_2_01_AND__ETC___d230;
  tUInt8 DEF_s3_reg_ex_mem_87_BITS_70_TO_69_90_EQ_2_01_AND__ETC___d242;
  tUInt8 DEF_s3_reg_ex_mem_87_BITS_70_TO_69_90_EQ_2_01_AND__ETC___d236;
  tUInt8 DEF_s4_reg_mem_wb_76_BIT_37_77_AND_NOT_s4_reg_mem__ETC___d282;
  tUInt8 DEF_s3_reg_ex_mem_87_BITS_73_TO_71_92_EQ_0b0_02_AN_ETC___d205;
  tUInt8 DEF_NOT_s3_reg_ex_mem_87_BITS_73_TO_71_92_EQ_0b0_0_ETC___d212;
  tUInt8 DEF_s3_reg_ex_mem_87_BITS_73_TO_71_92_EQ_0b0_02_AN_ETC___d219;
  tUInt8 DEF_s3_reg_ex_mem_87_BITS_73_TO_71_92_EQ_0b0_02_AN_ETC___d225;
  tUInt8 DEF_NOT_s3_reg_ex_mem_87_BITS_73_TO_71_92_EQ_0b0_0_ETC___d228;
  tUInt8 DEF_s3_reg_ex_mem_87_BITS_73_TO_71_92_EQ_0b0_02_AN_ETC___d234;
  tUInt8 DEF_s1_reg_if_id_8_BITS_6_TO_0_0_EQ_0b1100011___d21;
  tUInt32 DEF_x__h2840;
  tUInt8 DEF_IF_s1_reg_if_id_8_BITS_19_TO_15_3_EQ_0_4_THEN__ETC___d45;
  tUInt8 DEF_IF_s1_reg_if_id_8_BITS_19_TO_15_3_EQ_0_4_THEN__ETC___d41;
  tUInt8 DEF_IF_s1_reg_if_id_8_BITS_14_TO_12_1_EQ_0b0_2_THE_ETC___d57;
  tUInt8 DEF_IF_s2_reg_id_ex_2_BITS_203_TO_197_5_EQ_0b11001_ETC___d103;
  tUInt8 DEF_x_f3__h2746;
  tUInt8 DEF_x_rd__h2750;
  tUInt8 DEF_x1_avValue_rd__h3678;
  tUInt8 DEF_IF_s3_reg_ex_mem_87_BITS_73_TO_71_92_EQ_0b0_02_ETC___d232;
  tUInt8 DEF_IF_s3_reg_ex_mem_87_BITS_73_TO_71_92_EQ_0b0_02_ETC___d223;
  tUInt8 DEF_IF_s3_reg_ex_mem_87_BITS_73_TO_71_92_EQ_0b0_02_ETC___d238;
  tUInt32 DEF_rs1_val__h1717;
  tUInt32 DEF_rs2_val__h1718;
  tUInt32 DEF_branch_target___1__h1778;
  tUInt32 DEF_x_branch_target__h2090;
  tUInt32 DEF__theResult___snd_val__h2730;
  tUInt32 DEF_addr___1__h2709;
  tUInt32 DEF__theResult___snd_addr__h2731;
  tUInt32 DEF__theResult___snd_val__h2736;
  tUInt32 DEF_x__h2836;
  tUInt32 DEF_x__h2610;
  tUInt32 DEF__theResult___snd_addr__h2737;
  tUInt32 DEF_x__h3282;
  tUInt32 DEF_result___1__h3025;
  tUInt32 DEF_result___1__h3020;
  tUInt32 DEF_result___1__h2973;
  tUInt32 DEF_result___1__h2927;
  tUInt32 DEF_result___1__h2922;
  tUInt32 DEF_result___1__h2913;
  tUInt32 DEF_result___1__h2904;
  tUInt32 DEF_result___1__h2858;
  tUInt32 DEF_result___1__h2852;
  tUInt32 DEF_result___1__h2846;
  tUInt32 DEF__theResult____h2666;
  tUInt32 DEF_result___1__h3203;
  tUInt32 DEF_result___1__h3160;
  tUInt32 DEF_result___1__h3256;
  tUInt32 DEF_result___1__h3249;
  tUInt32 DEF_result___1__h3132;
  tUInt32 DEF_result___1__h3121;
  tUInt32 DEF_result___1__h3109;
  tUInt32 DEF_result___1__h3063;
  tUInt32 DEF_result___1__h3046;
  tUInt32 DEF__theResult____h2682;
  tUInt32 DEF_rv___1_rd_val__h3654;
  tUInt32 DEF_x1_avValue_rd_val__h3679;
  tUInt32 DEF_addr_byte__h3735;
  tUInt8 DEF_s3_reg_ex_mem_87_BITS_73_TO_71_92_EQ_0b0___d202;
  tUInt32 DEF_IF_s3_reg_ex_mem_87_BITS_73_TO_71_92_EQ_0b0_02_ETC___d216;
  tUInt32 DEF_rv___1_rd_val__h3659;
  tUInt8 DEF_s3_reg_ex_mem_87_BITS_73_TO_71_92_EQ_0b1___d207;
  tUInt32 DEF_load_data__h3604;
  tUInt8 DEF_s3_reg_ex_mem_87_BITS_73_TO_71_92_EQ_0b10___d193;
  tUInt32 DEF_rv___1_rd_val__h3666;
  tUInt32 DEF_rv___1_rd_val__h3671;
  tUInt8 DEF_s3_reg_ex_mem_87_BITS_70_TO_69_90_EQ_1___d191;
  tUInt8 DEF_s3_reg_ex_mem_87_BITS_70_TO_69_90_EQ_2___d201;
  tUInt64 DEF_s3_reg_ex_mem_87_BITS_4_TO_0_56_CONCAT_s3_reg__ETC___d270;
  tUInt64 DEF_IF_s3_reg_ex_mem_87_BITS_70_TO_69_90_EQ_1_91_T_ETC___d273;
  tUInt8 DEF_s2_reg_branch_BIT_32___d2;
  tUInt8 DEF_s4_reg_mem_wb_76_BIT_37___d277;
  tUInt8 DEF_s1_reg_if_id_8_BIT_31___d23;
  tUInt8 DEF_s3_reg_ex_mem_87_BIT_5___d208;
  tUInt8 DEF_s3_reg_ex_mem_87_BITS_6_TO_5___d203;
  tUInt8 DEF_s3_reg_ex_mem_87_BITS_70_TO_69___d190;
  tUInt8 DEF_f3__h1716;
  tUInt8 DEF_f3__h2617;
  tUInt8 DEF__read_rd__h4944;
  tUInt8 DEF_x__h2127;
  tUInt8 DEF_rd__h3509;
  tUInt8 DEF_x__h2861;
  tUInt8 DEF_x__h3067;
  tUInt8 DEF_rd__h2615;
  tUInt8 DEF_op__h1715;
  tUInt8 DEF_x__h2171;
  tUInt8 DEF_f7__h2618;
  tUInt8 DEF_op__h2616;
  tUInt8 DEF_x__h3798;
  tUInt8 DEF_x__h4329;
  tUInt8 DEF_x__h4385;
  tUInt8 DEF_x__h4427;
  tUInt32 DEF_x__h2151;
  tUInt32 DEF_imm12_S__h2620;
  tUInt32 DEF_imm12_I__h2619;
  tUInt32 DEF_decoded_instr_imm20_U__h1740;
  tUInt32 DEF_branch_target__h1436;
  tUInt32 DEF__read_rd_val__h4945;
  tUInt32 DEF__read_instr__h1692;
  tUInt32 DEF_pc__h1709;
  tUInt32 DEF__read_val__h3412;
  tUInt32 DEF__read_rs2_val__h2508;
  tUInt32 DEF__read_rs1_val__h2507;
  tUInt32 DEF_pc__h2611;
  tUInt32 DEF_v__h1441;
  tUInt8 DEF_x__h1615;
  tUInt32 DEF_i__h1616;
  tUInt8 DEF_x__h1617;
  tUInt32 DEF_i__h1636;
  tUInt8 DEF_x__h1637;
  tUInt32 DEF_i__h1639;
  tUInt8 DEF_x__h1640;
  tUInt8 DEF_x__h3626;
  tUInt8 DEF_x__h3627;
  tUInt8 DEF_x__h3628;
  tUInt32 DEF__read_addr__h3413;
  tUInt8 DEF_x__h3629;
  tUInt8 DEF_rs1__h1712;
  tUInt32 DEF_x__h1998;
  tUInt8 DEF_rs2__h1713;
  tUInt32 DEF_x__h2019;
  tUInt32 DEF_v__h1507;
  tUInt64 DEF_s2_reg_branch___d1;
  tUInt64 DEF_s4_reg_mem_wb___d276;
  tUInt64 DEF_s1_reg_if_id___d18;
  tUInt8 DEF_f3__h3510;
  DEF_s2_reg_id_ex___d82 = INST_s2_reg_id_ex.METH_read();
  DEF_s3_reg_ex_mem___d187 = INST_s3_reg_ex_mem.METH_read();
  DEF_f3__h3510 = DEF_s3_reg_ex_mem___d187.get_bits_in_word8(2u, 7u, 3u);
  DEF_s1_reg_if_id___d18 = INST_s1_reg_if_id.METH_read();
  DEF_s4_reg_mem_wb___d276 = INST_s4_reg_mem_wb.METH_read();
  DEF_v__h1507 = INST_s1_reg_pc.METH_read();
  DEF_s2_reg_branch___d1 = INST_s2_reg_branch.METH_read();
  DEF_rs2__h1713 = (tUInt8)((tUInt8)31u & (DEF_s1_reg_if_id___d18 >> 20u));
  DEF_x__h2019 = INST_regfile_regfile.METH_sub(DEF_rs2__h1713);
  DEF_rs1__h1712 = (tUInt8)((tUInt8)31u & (DEF_s1_reg_if_id___d18 >> 15u));
  DEF_x__h1998 = INST_regfile_regfile.METH_sub(DEF_rs1__h1712);
  DEF_b__h5082 = INST_step.METH_read();
  DEF__read_addr__h3413 = primExtract32(32u, 106u, DEF_s3_reg_ex_mem___d187, 32u, 36u, 32u, 5u);
  DEF_x__h3629 = INST_s4_dmem0.METH_sub(DEF__read_addr__h3413);
  DEF_x__h3628 = INST_s4_dmem1.METH_sub(DEF__read_addr__h3413);
  DEF_x__h3627 = INST_s4_dmem2.METH_sub(DEF__read_addr__h3413);
  DEF_x__h3626 = INST_s4_dmem3.METH_sub(DEF__read_addr__h3413);
  DEF_pc__h2611 = primExtract32(32u, 236u, DEF_s2_reg_id_ex___d82, 32u, 235u, 32u, 204u);
  DEF__read_rs1_val__h2507 = DEF_s2_reg_id_ex___d82.get_whole_word(1u);
  DEF__read_rs2_val__h2508 = DEF_s2_reg_id_ex___d82.get_whole_word(0u);
  DEF__read_val__h3412 = primExtract32(32u, 106u, DEF_s3_reg_ex_mem___d187, 32u, 68u, 32u, 37u);
  DEF_pc__h1709 = (tUInt32)(DEF_s1_reg_if_id___d18 >> 32u);
  DEF__read_instr__h1692 = (tUInt32)(DEF_s1_reg_if_id___d18);
  DEF_branch_target__h1436 = (tUInt32)(DEF_s2_reg_branch___d1);
  DEF__read_rd_val__h4945 = (tUInt32)(DEF_s4_reg_mem_wb___d276);
  DEF_decoded_instr_imm20_U__h1740 = (tUInt32)(1048575u & (DEF_s1_reg_if_id___d18 >> 12u));
  DEF_imm12_I__h2619 = DEF_s2_reg_id_ex___d82.get_bits_in_word32(4u, 10u, 12u);
  DEF_imm12_S__h2620 = primExtract32(12u, 236u, DEF_s2_reg_id_ex___d82, 32u, 137u, 32u, 126u);
  DEF_x__h2151 = (tUInt32)(4095u & (DEF_s1_reg_if_id___d18 >> 20u));
  DEF_x__h4385 = DEF_s3_reg_ex_mem___d187.get_bits_in_word8(1u, 21u, 8u);
  DEF_x__h4427 = primExtract8(8u, 106u, DEF_s3_reg_ex_mem___d187, 32u, 68u, 32u, 61u);
  DEF_x__h4329 = DEF_s3_reg_ex_mem___d187.get_bits_in_word8(1u, 13u, 8u);
  DEF_x__h3798 = DEF_s3_reg_ex_mem___d187.get_bits_in_word8(1u, 5u, 8u);
  DEF_op__h2616 = DEF_s2_reg_id_ex___d82.get_bits_in_word8(6u, 5u, 7u);
  DEF_f7__h2618 = DEF_s2_reg_id_ex___d82.get_bits_in_word8(5u, 0u, 7u);
  DEF_op__h1715 = (tUInt8)((tUInt8)127u & DEF_s1_reg_if_id___d18);
  DEF_x__h2171 = (tUInt8)((tUInt8)127u & (DEF_s1_reg_if_id___d18 >> 25u));
  DEF_rd__h2615 = DEF_s2_reg_id_ex___d82.get_bits_in_word8(6u, 0u, 5u);
  DEF_x__h3067 = DEF_s2_reg_id_ex___d82.get_bits_in_word8(4u, 10u, 5u);
  DEF_x__h2861 = DEF_s2_reg_id_ex___d82.get_bits_in_word8(0u, 0u, 5u);
  DEF_rd__h3509 = DEF_s3_reg_ex_mem___d187.get_bits_in_word8(0u, 0u, 5u);
  DEF__read_rd__h4944 = (tUInt8)((tUInt8)31u & (DEF_s4_reg_mem_wb___d276 >> 32u));
  DEF_x__h2127 = (tUInt8)((tUInt8)31u & (DEF_s1_reg_if_id___d18 >> 7u));
  DEF_f3__h2617 = DEF_s2_reg_id_ex___d82.get_bits_in_word8(5u, 7u, 3u);
  DEF_f3__h1716 = (tUInt8)((tUInt8)7u & (DEF_s1_reg_if_id___d18 >> 12u));
  DEF_s3_reg_ex_mem_87_BITS_70_TO_69___d190 = DEF_s3_reg_ex_mem___d187.get_bits_in_word8(2u, 5u, 2u);
  DEF_s3_reg_ex_mem_87_BITS_6_TO_5___d203 = DEF_s3_reg_ex_mem___d187.get_bits_in_word8(0u, 5u, 2u);
  DEF_s3_reg_ex_mem_87_BIT_5___d208 = DEF_s3_reg_ex_mem___d187.get_bits_in_word8(0u, 5u, 1u);
  DEF_s4_reg_mem_wb_76_BIT_37___d277 = (tUInt8)(DEF_s4_reg_mem_wb___d276 >> 37u);
  DEF_s1_reg_if_id_8_BIT_31___d23 = (tUInt8)((tUInt8)1u & (DEF_s1_reg_if_id___d18 >> 31u));
  DEF_s2_reg_branch_BIT_32___d2 = (tUInt8)(DEF_s2_reg_branch___d1 >> 32u);
  DEF_v__h1441 = DEF_s2_reg_branch_BIT_32___d2 ? DEF_branch_target__h1436 : DEF_v__h1507;
  DEF_i__h1639 = DEF_v__h1441 + 3u;
  DEF_x__h1640 = INST_s1_imem.METH_sub(DEF_i__h1639);
  DEF_i__h1636 = DEF_v__h1441 + 2u;
  DEF_x__h1637 = INST_s1_imem.METH_sub(DEF_i__h1636);
  DEF_i__h1616 = DEF_v__h1441 + 1u;
  DEF_x__h1617 = INST_s1_imem.METH_sub(DEF_i__h1616);
  DEF_x__h1615 = INST_s1_imem.METH_sub(DEF_v__h1441);
  DEF_s3_reg_ex_mem_87_BITS_4_TO_0_56_CONCAT_s3_reg__ETC___d270 = 137438953471llu & ((((tUInt64)(DEF_rd__h3509)) << 32u) | (tUInt64)(DEF__read_val__h3412));
  DEF_s3_reg_ex_mem_87_BITS_70_TO_69_90_EQ_2___d201 = DEF_s3_reg_ex_mem_87_BITS_70_TO_69___d190 == (tUInt8)2u;
  DEF_s3_reg_ex_mem_87_BITS_70_TO_69_90_EQ_1___d191 = DEF_s3_reg_ex_mem_87_BITS_70_TO_69___d190 == (tUInt8)1u;
  DEF_rv___1_rd_val__h3666 = (tUInt32)(DEF_x__h3629);
  DEF_s3_reg_ex_mem_87_BITS_73_TO_71_92_EQ_0b10___d193 = DEF_f3__h3510 == (tUInt8)2u;
  DEF_s3_reg_ex_mem_87_BITS_73_TO_71_92_EQ_0b1___d207 = DEF_f3__h3510 == (tUInt8)1u;
  DEF_s3_reg_ex_mem_87_BITS_73_TO_71_92_EQ_0b0___d202 = DEF_f3__h3510 == (tUInt8)0u;
  DEF_addr_byte__h3735 = primShiftR32(32u, 32u, (tUInt32)(DEF__read_addr__h3413), 32u, 2u);
  DEF_IF_s3_reg_ex_mem_87_BITS_73_TO_71_92_EQ_0b0_02_ETC___d216 = DEF_s3_reg_ex_mem_87_BITS_73_TO_71_92_EQ_0b0___d202 ? DEF_addr_byte__h3735 : DEF__read_addr__h3413;
  DEF_rv___1_rd_val__h3654 = primSignExt32(32u, 8u, (tUInt8)(DEF_x__h3629));
  DEF_result___1__h3063 = primShiftL32(32u,
				       32u,
				       (tUInt32)(DEF__read_rs1_val__h2507),
				       5u,
				       (tUInt8)(DEF_x__h3067));
  DEF_result___1__h3160 = primShiftRA32(32u,
					32u,
					(tUInt32)(DEF__read_rs1_val__h2507),
					5u,
					(tUInt8)(DEF_x__h3067));
  DEF_result___1__h3203 = primShiftR32(32u,
				       32u,
				       (tUInt32)(DEF__read_rs1_val__h2507),
				       5u,
				       (tUInt8)(DEF_x__h3067));
  DEF_result___1__h2846 = DEF__read_rs1_val__h2507 + DEF__read_rs2_val__h2508;
  DEF_result___1__h2852 = DEF__read_rs1_val__h2507 - DEF__read_rs2_val__h2508;
  DEF_result___1__h2858 = primShiftL32(32u,
				       32u,
				       (tUInt32)(DEF__read_rs1_val__h2507),
				       5u,
				       (tUInt8)(DEF_x__h2861));
  DEF_result___1__h2904 = primSLT8(1u,
				   32u,
				   (tUInt32)(DEF__read_rs1_val__h2507),
				   32u,
				   (tUInt32)(DEF__read_rs2_val__h2508)) ? 1u : 0u;
  DEF_result___1__h2913 = DEF__read_rs1_val__h2507 < DEF__read_rs2_val__h2508 ? 1u : 0u;
  DEF_result___1__h2927 = primShiftR32(32u,
				       32u,
				       (tUInt32)(DEF__read_rs1_val__h2507),
				       5u,
				       (tUInt8)(DEF_x__h2861));
  DEF_result___1__h2922 = DEF__read_rs1_val__h2507 ^ DEF__read_rs2_val__h2508;
  DEF_result___1__h2973 = primShiftRA32(32u,
					32u,
					(tUInt32)(DEF__read_rs1_val__h2507),
					5u,
					(tUInt8)(DEF_x__h2861));
  DEF_result___1__h3025 = DEF__read_rs1_val__h2507 & DEF__read_rs2_val__h2508;
  DEF_result___1__h3020 = DEF__read_rs1_val__h2507 | DEF__read_rs2_val__h2508;
  DEF_x__h2610 = DEF_pc__h2611;
  DEF__theResult___snd_val__h2730 = DEF__read_rs2_val__h2508;
  DEF__theResult___snd_val__h2736 = DEF__theResult___snd_val__h2730;
  DEF_rs2_val__h1718 = DEF_rs2__h1713 == (tUInt8)0u ? 0u : DEF_x__h2019;
  DEF_rs1_val__h1717 = DEF_rs1__h1712 == (tUInt8)0u ? 0u : DEF_x__h1998;
  DEF_IF_s3_reg_ex_mem_87_BITS_73_TO_71_92_EQ_0b0_02_ETC___d238 = DEF_s3_reg_ex_mem_87_BITS_73_TO_71_92_EQ_0b0___d202 ? DEF_x__h3798 : DEF_x__h4427;
  DEF_IF_s3_reg_ex_mem_87_BITS_73_TO_71_92_EQ_0b0_02_ETC___d223 = DEF_s3_reg_ex_mem_87_BITS_73_TO_71_92_EQ_0b0___d202 ? DEF_x__h3798 : DEF_x__h4329;
  DEF_IF_s3_reg_ex_mem_87_BITS_73_TO_71_92_EQ_0b0_02_ETC___d232 = DEF_s3_reg_ex_mem_87_BITS_73_TO_71_92_EQ_0b0___d202 ? DEF_x__h3798 : DEF_x__h4385;
  DEF_x_rd__h2750 = DEF_rd__h2615;
  DEF_x1_avValue_rd__h3678 = DEF_rd__h3509;
  DEF_x_f3__h2746 = DEF_f3__h2617;
  switch (DEF_op__h2616) {
  case (tUInt8)19u:
  case (tUInt8)51u:
    DEF_IF_s2_reg_id_ex_2_BITS_203_TO_197_5_EQ_0b11001_ETC___d103 = (tUInt8)0u;
    break;
  case (tUInt8)3u:
    DEF_IF_s2_reg_id_ex_2_BITS_203_TO_197_5_EQ_0b11001_ETC___d103 = (tUInt8)1u;
    break;
  case (tUInt8)35u:
    DEF_IF_s2_reg_id_ex_2_BITS_203_TO_197_5_EQ_0b11001_ETC___d103 = (tUInt8)2u;
    break;
  default:
    DEF_IF_s2_reg_id_ex_2_BITS_203_TO_197_5_EQ_0b11001_ETC___d103 = (tUInt8)3u;
  }
  DEF_IF_s1_reg_if_id_8_BITS_19_TO_15_3_EQ_0_4_THEN__ETC___d41 = DEF_rs1_val__h1717 == DEF_rs2_val__h1718;
  DEF_IF_s1_reg_if_id_8_BITS_19_TO_15_3_EQ_0_4_THEN__ETC___d45 = primSLT8(1u,
									  32u,
									  (tUInt32)(DEF_rs1_val__h1717),
									  32u,
									  (tUInt32)(DEF_rs2_val__h1718));
  switch (DEF_f3__h1716) {
  case (tUInt8)0u:
    DEF_IF_s1_reg_if_id_8_BITS_14_TO_12_1_EQ_0b0_2_THE_ETC___d57 = DEF_IF_s1_reg_if_id_8_BITS_19_TO_15_3_EQ_0_4_THEN__ETC___d41;
    break;
  case (tUInt8)1u:
    DEF_IF_s1_reg_if_id_8_BITS_14_TO_12_1_EQ_0b0_2_THE_ETC___d57 = !DEF_IF_s1_reg_if_id_8_BITS_19_TO_15_3_EQ_0_4_THEN__ETC___d41;
    break;
  case (tUInt8)4u:
    DEF_IF_s1_reg_if_id_8_BITS_14_TO_12_1_EQ_0b0_2_THE_ETC___d57 = DEF_IF_s1_reg_if_id_8_BITS_19_TO_15_3_EQ_0_4_THEN__ETC___d45;
    break;
  case (tUInt8)5u:
    DEF_IF_s1_reg_if_id_8_BITS_14_TO_12_1_EQ_0b0_2_THE_ETC___d57 = !DEF_IF_s1_reg_if_id_8_BITS_19_TO_15_3_EQ_0_4_THEN__ETC___d45;
    break;
  case (tUInt8)6u:
    DEF_IF_s1_reg_if_id_8_BITS_14_TO_12_1_EQ_0b0_2_THE_ETC___d57 = DEF_rs1_val__h1717 < DEF_rs2_val__h1718;
    break;
  default:
    DEF_IF_s1_reg_if_id_8_BITS_14_TO_12_1_EQ_0b0_2_THE_ETC___d57 = DEF_f3__h1716 == (tUInt8)7u && DEF_rs1_val__h1717 <= DEF_rs2_val__h1718;
  }
  DEF_x__h2840 = 1023u & ((((tUInt32)(DEF_f7__h2618)) << 3u) | (tUInt32)(DEF_f3__h2617));
  switch (DEF_x__h2840) {
  case 0u:
    DEF__theResult____h2666 = DEF_result___1__h2846;
    break;
  case 256u:
    DEF__theResult____h2666 = DEF_result___1__h2852;
    break;
  case 1u:
    DEF__theResult____h2666 = DEF_result___1__h2858;
    break;
  case 2u:
    DEF__theResult____h2666 = DEF_result___1__h2904;
    break;
  case 3u:
    DEF__theResult____h2666 = DEF_result___1__h2913;
    break;
  case 4u:
    DEF__theResult____h2666 = DEF_result___1__h2922;
    break;
  case 5u:
    DEF__theResult____h2666 = DEF_result___1__h2927;
    break;
  case 261u:
    DEF__theResult____h2666 = DEF_result___1__h2973;
    break;
  case 6u:
    DEF__theResult____h2666 = DEF_result___1__h3020;
    break;
  default:
    DEF__theResult____h2666 = DEF_result___1__h3025;
  }
  DEF_s1_reg_if_id_8_BITS_6_TO_0_0_EQ_0b1100011___d21 = DEF_op__h1715 == (tUInt8)99u;
  DEF_s3_reg_ex_mem_87_BITS_73_TO_71_92_EQ_0b0_02_AN_ETC___d234 = DEF_s3_reg_ex_mem_87_BITS_73_TO_71_92_EQ_0b0___d202 && DEF_s3_reg_ex_mem_87_BITS_6_TO_5___d203 == (tUInt8)3u;
  DEF_s3_reg_ex_mem_87_BITS_73_TO_71_92_EQ_0b0_02_AN_ETC___d225 = DEF_s3_reg_ex_mem_87_BITS_73_TO_71_92_EQ_0b0___d202 && DEF_s3_reg_ex_mem_87_BITS_6_TO_5___d203 == (tUInt8)2u;
  DEF_s3_reg_ex_mem_87_BITS_73_TO_71_92_EQ_0b0_02_AN_ETC___d219 = DEF_s3_reg_ex_mem_87_BITS_73_TO_71_92_EQ_0b0___d202 && DEF_s3_reg_ex_mem_87_BITS_6_TO_5___d203 == (tUInt8)1u;
  DEF_s3_reg_ex_mem_87_BITS_73_TO_71_92_EQ_0b0_02_AN_ETC___d205 = DEF_s3_reg_ex_mem_87_BITS_73_TO_71_92_EQ_0b0___d202 && DEF_s3_reg_ex_mem_87_BITS_6_TO_5___d203 == (tUInt8)0u;
  DEF_s4_reg_mem_wb_76_BIT_37_77_AND_NOT_s4_reg_mem__ETC___d282 = DEF_s4_reg_mem_wb_76_BIT_37___d277 && !(DEF__read_rd__h4944 == (tUInt8)0u);
  DEF_s3_reg_ex_mem_87_BITS_70_TO_69_90_EQ_2_01_AND__ETC___d242 = DEF_s3_reg_ex_mem_87_BITS_70_TO_69_90_EQ_2___d201 && DEF_s3_reg_ex_mem_87_BITS_73_TO_71_92_EQ_0b0_02_AN_ETC___d234;
  DEF_s3_reg_ex_mem_87_BITS_70_TO_69_90_EQ_2_01_AND__ETC___d241 = DEF_s3_reg_ex_mem_87_BITS_70_TO_69_90_EQ_2___d201 && DEF_s3_reg_ex_mem_87_BITS_73_TO_71_92_EQ_0b0_02_AN_ETC___d225;
  DEF_s3_reg_ex_mem_87_BITS_70_TO_69_90_EQ_2_01_AND__ETC___d240 = DEF_s3_reg_ex_mem_87_BITS_70_TO_69_90_EQ_2___d201 && DEF_s3_reg_ex_mem_87_BITS_73_TO_71_92_EQ_0b0_02_AN_ETC___d219;
  DEF_s3_reg_ex_mem_87_BITS_70_TO_69_90_EQ_2_01_AND__ETC___d239 = DEF_s3_reg_ex_mem_87_BITS_70_TO_69_90_EQ_2___d201 && DEF_s3_reg_ex_mem_87_BITS_73_TO_71_92_EQ_0b0_02_AN_ETC___d205;
  DEF_NOT_s3_reg_ex_mem_87_BITS_73_TO_71_92_EQ_0b0_02___d206 = !DEF_s3_reg_ex_mem_87_BITS_73_TO_71_92_EQ_0b0___d202;
  DEF_NOT_s3_reg_ex_mem_87_BITS_73_TO_71_92_EQ_0b0_0_ETC___d228 = DEF_NOT_s3_reg_ex_mem_87_BITS_73_TO_71_92_EQ_0b0_02___d206 && ((DEF_s3_reg_ex_mem_87_BITS_73_TO_71_92_EQ_0b1___d207 && DEF_s3_reg_ex_mem_87_BIT_5___d208) || DEF_s3_reg_ex_mem_87_BITS_73_TO_71_92_EQ_0b10___d193);
  DEF_NOT_s3_reg_ex_mem_87_BITS_73_TO_71_92_EQ_0b0_0_ETC___d212 = DEF_NOT_s3_reg_ex_mem_87_BITS_73_TO_71_92_EQ_0b0_02___d206 && ((DEF_s3_reg_ex_mem_87_BITS_73_TO_71_92_EQ_0b1___d207 && !DEF_s3_reg_ex_mem_87_BIT_5___d208) || DEF_s3_reg_ex_mem_87_BITS_73_TO_71_92_EQ_0b10___d193);
  DEF_s3_reg_ex_mem_87_BITS_70_TO_69_90_EQ_2_01_AND__ETC___d236 = DEF_s3_reg_ex_mem_87_BITS_70_TO_69_90_EQ_2___d201 && (DEF_s3_reg_ex_mem_87_BITS_73_TO_71_92_EQ_0b0_02_AN_ETC___d234 || DEF_NOT_s3_reg_ex_mem_87_BITS_73_TO_71_92_EQ_0b0_0_ETC___d228);
  DEF_s3_reg_ex_mem_87_BITS_70_TO_69_90_EQ_2_01_AND__ETC___d230 = DEF_s3_reg_ex_mem_87_BITS_70_TO_69_90_EQ_2___d201 && (DEF_s3_reg_ex_mem_87_BITS_73_TO_71_92_EQ_0b0_02_AN_ETC___d225 || DEF_NOT_s3_reg_ex_mem_87_BITS_73_TO_71_92_EQ_0b0_0_ETC___d228);
  DEF_s3_reg_ex_mem_87_BITS_70_TO_69_90_EQ_2_01_AND__ETC___d214 = DEF_s3_reg_ex_mem_87_BITS_70_TO_69_90_EQ_2___d201 && (DEF_s3_reg_ex_mem_87_BITS_73_TO_71_92_EQ_0b0_02_AN_ETC___d205 || DEF_NOT_s3_reg_ex_mem_87_BITS_73_TO_71_92_EQ_0b0_0_ETC___d212);
  DEF_s3_reg_ex_mem_87_BITS_70_TO_69_90_EQ_2_01_AND__ETC___d221 = DEF_s3_reg_ex_mem_87_BITS_70_TO_69_90_EQ_2___d201 && (DEF_s3_reg_ex_mem_87_BITS_73_TO_71_92_EQ_0b0_02_AN_ETC___d219 || DEF_NOT_s3_reg_ex_mem_87_BITS_73_TO_71_92_EQ_0b0_0_ETC___d212);
  DEF_s3_reg_ex_mem_87_BITS_70_TO_69_90_EQ_1_91_AND__ETC___d194 = DEF_s3_reg_ex_mem_87_BITS_70_TO_69_90_EQ_1___d191 && DEF_s3_reg_ex_mem_87_BITS_73_TO_71_92_EQ_0b10___d193;
  DEF_s1_reg_if_id_8_BITS_6_TO_0_0_EQ_0b1100011_1_AN_ETC___d58 = DEF_s1_reg_if_id_8_BITS_6_TO_0_0_EQ_0b1100011___d21 && DEF_IF_s1_reg_if_id_8_BITS_14_TO_12_1_EQ_0b0_2_THE_ETC___d57;
  DEF_NOT_s2_reg_branch_BIT_32___d4 = !DEF_s2_reg_branch_BIT_32___d2;
  DEF_instr_SB_imm13__h1714 = 8191u & (((((((tUInt32)(DEF_s1_reg_if_id_8_BIT_31___d23)) << 12u) | (((tUInt32)((tUInt8)((tUInt8)1u & (DEF_s1_reg_if_id___d18 >> 7u)))) << 11u)) | (((tUInt32)((tUInt8)((tUInt8)63u & (DEF_s1_reg_if_id___d18 >> 25u)))) << 5u)) | (((tUInt32)((tUInt8)((tUInt8)15u & (DEF_s1_reg_if_id___d18 >> 8u)))) << 1u)) | (tUInt32)((tUInt8)0u));
  DEF_branch_target___1__h1778 = DEF_pc__h1709 + primSignExt32(32u,
							       13u,
							       (tUInt32)(DEF_instr_SB_imm13__h1714));
  DEF_x_branch_target__h2090 = DEF_branch_target___1__h1778;
  DEF_s4_dmem1_sub_s3_reg_ex_mem_87_BITS_36_TO_5_88__ETC___d199 = 65535u & ((((tUInt32)(DEF_x__h3628)) << 8u) | (tUInt32)(DEF_x__h3629));
  DEF_rv___1_rd_val__h3671 = DEF_s4_dmem1_sub_s3_reg_ex_mem_87_BITS_36_TO_5_88__ETC___d199;
  DEF_load_data__h3604 = ((((tUInt32)(DEF_x__h3626)) << 24u) | (((tUInt32)(DEF_x__h3627)) << 16u)) | DEF_s4_dmem1_sub_s3_reg_ex_mem_87_BITS_36_TO_5_88__ETC___d199;
  DEF_rv___1_rd_val__h3659 = primSignExt32(32u,
					   16u,
					   (tUInt32)(DEF_s4_dmem1_sub_s3_reg_ex_mem_87_BITS_36_TO_5_88__ETC___d199));
  switch (DEF_f3__h3510) {
  case (tUInt8)0u:
    DEF_x1_avValue_rd_val__h3679 = DEF_rv___1_rd_val__h3654;
    break;
  case (tUInt8)1u:
    DEF_x1_avValue_rd_val__h3679 = DEF_rv___1_rd_val__h3659;
    break;
  case (tUInt8)2u:
    DEF_x1_avValue_rd_val__h3679 = DEF_load_data__h3604;
    break;
  case (tUInt8)4u:
    DEF_x1_avValue_rd_val__h3679 = DEF_rv___1_rd_val__h3666;
    break;
  case (tUInt8)5u:
    DEF_x1_avValue_rd_val__h3679 = DEF_rv___1_rd_val__h3671;
    break;
  default:
    DEF_x1_avValue_rd_val__h3679 = DEF__read_val__h3412;
  }
  switch (DEF_s3_reg_ex_mem_87_BITS_70_TO_69___d190) {
  case (tUInt8)1u:
    DEF_IF_s3_reg_ex_mem_87_BITS_70_TO_69_90_EQ_1_91_T_ETC___d273 = 137438953471llu & ((((tUInt64)(DEF_x1_avValue_rd__h3678)) << 32u) | (tUInt64)(DEF_x1_avValue_rd_val__h3679));
    break;
  default:
    DEF_IF_s3_reg_ex_mem_87_BITS_70_TO_69_90_EQ_1_91_T_ETC___d273 = DEF_s3_reg_ex_mem_87_BITS_4_TO_0_56_CONCAT_s3_reg__ETC___d270;
  }
  DEF_b__h3307 = primSignExt32(32u, 12u, (tUInt32)(DEF_imm12_S__h2620));
  DEF_addr___1__h2709 = DEF__read_rs1_val__h2507 + DEF_b__h3307;
  DEF__theResult___snd_addr__h2731 = DEF_addr___1__h2709;
  DEF__0_CONCAT_s2_reg_id_ex_2_BITS_149_TO_138_40___d150 = DEF_imm12_I__h2619;
  DEF_result___1__h3121 = DEF__read_rs1_val__h2507 < DEF__0_CONCAT_s2_reg_id_ex_2_BITS_149_TO_138_40___d150 ? 1u : 0u;
  DEF_result___1__h3132 = DEF__read_rs1_val__h2507 ^ DEF__0_CONCAT_s2_reg_id_ex_2_BITS_149_TO_138_40___d150;
  DEF_result___1__h3249 = DEF__read_rs1_val__h2507 | DEF__0_CONCAT_s2_reg_id_ex_2_BITS_149_TO_138_40___d150;
  DEF_result___1__h3256 = DEF__read_rs1_val__h2507 & DEF__0_CONCAT_s2_reg_id_ex_2_BITS_149_TO_138_40___d150;
  DEF_b__h3052 = primSignExt32(32u, 12u, (tUInt32)(DEF_imm12_I__h2619));
  DEF_result___1__h3046 = DEF__read_rs1_val__h2507 + DEF_b__h3052;
  DEF_result___1__h3109 = primSLT8(1u,
				   32u,
				   (tUInt32)(DEF__read_rs1_val__h2507),
				   32u,
				   (tUInt32)(DEF_b__h3052)) ? 1u : 0u;
  switch (DEF_f3__h2617) {
  case (tUInt8)0u:
    DEF__theResult____h2682 = DEF_result___1__h3046;
    break;
  case (tUInt8)1u:
    DEF__theResult____h2682 = DEF_result___1__h3063;
    break;
  case (tUInt8)2u:
    DEF__theResult____h2682 = DEF_result___1__h3109;
    break;
  case (tUInt8)3u:
    DEF__theResult____h2682 = DEF_result___1__h3121;
    break;
  case (tUInt8)4u:
    DEF__theResult____h2682 = DEF_result___1__h3132;
    break;
  case (tUInt8)5u:
    DEF__theResult____h2682 = DEF_s2_reg_id_ex___d82.get_bits_in_word8(4u,
								       20u,
								       1u) ? DEF_result___1__h3160 : DEF_result___1__h3203;
    break;
  case (tUInt8)6u:
    DEF__theResult____h2682 = DEF_result___1__h3249;
    break;
  default:
    DEF__theResult____h2682 = DEF_result___1__h3256;
  }
  DEF__theResult___snd_addr__h2737 = DEF_op__h2616 == (tUInt8)3u ? DEF_result___1__h3046 : DEF__theResult___snd_addr__h2731;
  DEF_x__h3282 = DEF__theResult___snd_addr__h2737;
  switch (DEF_op__h2616) {
  case (tUInt8)51u:
    DEF_x__h2836 = DEF__theResult____h2666;
    break;
  case (tUInt8)19u:
    DEF_x__h2836 = DEF__theResult____h2682;
    break;
  default:
    DEF_x__h2836 = DEF__theResult___snd_val__h2736;
  }
  DEF_step_83_PLUS_1___d284 = DEF_b__h5082 + 1u;
  DEF_x__h1579 = DEF_v__h1441 + 4u;
  DEF_IF_s2_reg_id_ex_2_BITS_203_TO_197_5_EQ_0b11001_ETC___d185.set_bits_in_word((tUInt8)127u & ((DEF_IF_s2_reg_id_ex_2_BITS_203_TO_197_5_EQ_0b11001_ETC___d103 << 5u) | (tUInt8)(DEF_x__h2836 >> 27u)),
										 2u,
										 0u,
										 7u).set_whole_word((((tUInt32)(134217727u & DEF_x__h2836)) << 5u) | (tUInt32)((tUInt8)(DEF_x__h3282 >> 27u)),
												    1u).set_whole_word((((tUInt32)(134217727u & DEF_x__h3282)) << 5u) | (tUInt32)(DEF_x_rd__h2750),
														       0u);
  DEF_IF_s2_reg_id_ex_2_BITS_203_TO_197_5_EQ_0b11001_ETC___d186.set_bits_in_word((tUInt32)(DEF_x__h2610 >> 22u),
										 3u,
										 0u,
										 10u).set_whole_word(((((tUInt32)(4194303u & DEF_x__h2610)) << 10u) | (((tUInt32)(DEF_x_f3__h2746)) << 7u)) | (tUInt32)(DEF_IF_s2_reg_id_ex_2_BITS_203_TO_197_5_EQ_0b11001_ETC___d185.get_bits_in_word8(2u,
																																			0u,
																																			7u)),
												     2u).set_whole_word(DEF_IF_s2_reg_id_ex_2_BITS_203_TO_197_5_EQ_0b11001_ETC___d185.get_whole_word(1u),
															1u).set_whole_word(DEF_IF_s2_reg_id_ex_2_BITS_203_TO_197_5_EQ_0b11001_ETC___d185.get_whole_word(0u),
																	   0u);
  DEF_decoded_instr_funct10__h1736 = 1023u & ((((tUInt32)(DEF_x__h2171)) << 3u) | (tUInt32)(DEF_f3__h1716));
  DEF_x__h2251 = 4095u & ((((tUInt32)(DEF_x__h2171)) << 5u) | (tUInt32)(DEF_x__h2127));
  DEF_x__h1610 = (((((tUInt32)(DEF_x__h1615)) << 24u) | (((tUInt32)(DEF_x__h1617)) << 16u)) | (((tUInt32)(DEF_x__h1637)) << 8u)) | (tUInt32)(DEF_x__h1640);
  DEF_IF_s2_reg_branch_BIT_32_THEN_s2_reg_branch_BIT_ETC___d17 = (((tUInt64)(DEF_x__h1579)) << 32u) | (tUInt64)(DEF_x__h1610);
  if (!(PORT_RST_N == (tUInt8)0u))
    dollar_display(sim_hdl, this, "s", &__str_literal_7);
  DEF_decoded_instr_imm21_UJ__h1741 = 2097151u & (((((((tUInt32)(DEF_s1_reg_if_id_8_BIT_31___d23)) << 20u) | (((tUInt32)((tUInt8)((tUInt8)255u & (DEF_s1_reg_if_id___d18 >> 12u)))) << 12u)) | (((tUInt32)((tUInt8)((tUInt8)1u & (DEF_s1_reg_if_id___d18 >> 20u)))) << 11u)) | (((tUInt32)(1023u & (DEF_s1_reg_if_id___d18 >> 21u))) << 1u)) | (tUInt32)((tUInt8)0u));
  DEF_s1_reg_if_id_8_BITS_31_TO_25_4_CONCAT_s1_reg_i_ETC___d76.set_bits_in_word((tUInt32)(DEF_x__h2251 >> 2u),
										2u,
										0u,
										10u).set_whole_word(((((tUInt32)((tUInt8)((tUInt8)3u & DEF_x__h2251))) << 30u) | (DEF_instr_SB_imm13__h1714 << 17u)) | (tUInt32)(DEF_decoded_instr_imm20_U__h1740 >> 3u),
												    1u).set_whole_word(((((tUInt32)((tUInt8)((tUInt8)7u & DEF_decoded_instr_imm20_U__h1740))) << 29u) | (DEF_decoded_instr_imm21_UJ__h1741 << 8u)) | (tUInt32)((tUInt8)((tUInt8)255u & (DEF_s1_reg_if_id___d18 >> 20u))),
														       0u);
  DEF_s1_reg_if_id_8_BITS_31_TO_25_4_CONCAT_s1_reg_i_ETC___d77.set_whole_word(((DEF_decoded_instr_funct10__h1736 << 22u) | (DEF_x__h2151 << 10u)) | DEF_s1_reg_if_id_8_BITS_31_TO_25_4_CONCAT_s1_reg_i_ETC___d76.get_bits_in_word32(2u,
																												    0u,
																												    10u),
									      2u).set_whole_word(DEF_s1_reg_if_id_8_BITS_31_TO_25_4_CONCAT_s1_reg_i_ETC___d76.get_whole_word(1u),
												 1u).set_whole_word(DEF_s1_reg_if_id_8_BITS_31_TO_25_4_CONCAT_s1_reg_i_ETC___d76.get_whole_word(0u),
														    0u);
  DEF_s1_reg_if_id_8_BITS_24_TO_20_7_CONCAT_s1_reg_i_ETC___d78.build_concat(576460752303423487llu & (((((((tUInt64)(DEF_rs2__h1713)) << 54u) | (((tUInt64)(DEF_x__h2151)) << 42u)) | (((tUInt64)(DEF_f3__h1716)) << 39u)) | (((tUInt64)(DEF_x__h2171)) << 32u)) | (tUInt64)(DEF_s1_reg_if_id_8_BITS_31_TO_25_4_CONCAT_s1_reg_i_ETC___d77.get_whole_word(2u))),
									    64u,
									    59u).set_whole_word(DEF_s1_reg_if_id_8_BITS_31_TO_25_4_CONCAT_s1_reg_i_ETC___d77.get_whole_word(1u),
												1u).set_whole_word(DEF_s1_reg_if_id_8_BITS_31_TO_25_4_CONCAT_s1_reg_i_ETC___d77.get_whole_word(0u),
														   0u);
  DEF_s1_reg_if_id_8_BITS_6_TO_0_0_CONCAT_s1_reg_if__ETC___d79.build_concat(17592186044415llu & ((((((tUInt64)(DEF_op__h1715)) << 37u) | (((tUInt64)(DEF_x__h2127)) << 32u)) | (((tUInt64)(DEF_rs1__h1712)) << 27u)) | (tUInt64)(DEF_s1_reg_if_id_8_BITS_24_TO_20_7_CONCAT_s1_reg_i_ETC___d78.get_bits_in_word32(3u,
																																						 0u,
																																						 27u))),
									    96u,
									    44u).set_whole_word(DEF_s1_reg_if_id_8_BITS_24_TO_20_7_CONCAT_s1_reg_i_ETC___d78.get_whole_word(2u),
												2u).set_whole_word(DEF_s1_reg_if_id_8_BITS_24_TO_20_7_CONCAT_s1_reg_i_ETC___d78.get_whole_word(1u),
														   1u).set_whole_word(DEF_s1_reg_if_id_8_BITS_24_TO_20_7_CONCAT_s1_reg_i_ETC___d78.get_whole_word(0u),
																      0u);
  DEF_s1_reg_if_id_8_BITS_63_TO_32_2_CONCAT_s1_reg_i_ETC___d81.set_bits_in_word((tUInt32)(DEF_pc__h1709 >> 20u),
										7u,
										0u,
										12u).set_whole_word((((tUInt32)(1048575u & DEF_pc__h1709)) << 12u) | DEF_s1_reg_if_id_8_BITS_6_TO_0_0_CONCAT_s1_reg_if__ETC___d79.get_bits_in_word32(4u,
																												     0u,
																												     12u),
												    6u).set_whole_word(DEF_s1_reg_if_id_8_BITS_6_TO_0_0_CONCAT_s1_reg_if__ETC___d79.get_whole_word(3u),
														       5u).set_whole_word(DEF_s1_reg_if_id_8_BITS_6_TO_0_0_CONCAT_s1_reg_if__ETC___d79.get_whole_word(2u),
																	  4u).set_whole_word(DEF_s1_reg_if_id_8_BITS_6_TO_0_0_CONCAT_s1_reg_if__ETC___d79.get_whole_word(1u),
																			     3u).build_concat(bs_wide_tmp(96u).set_whole_word(DEF_s1_reg_if_id_8_BITS_6_TO_0_0_CONCAT_s1_reg_if__ETC___d79.get_whole_word(0u),
																									      2u).set_whole_word(DEF_rs1_val__h1717,
																												 1u).set_whole_word(DEF_rs2_val__h1718,
																														    0u),
																					      0u,
																					      96u);
  DEF_NOT_s3_reg_ex_mem_87_BITS_70_TO_69_90_EQ_3_43__ETC___d275 = 274877906943llu & ((((tUInt64)(!(DEF_s3_reg_ex_mem_87_BITS_70_TO_69___d190 == (tUInt8)3u) && (DEF_s3_reg_ex_mem_87_BITS_70_TO_69___d190 == (tUInt8)0u || (DEF_s3_reg_ex_mem_87_BITS_70_TO_69_90_EQ_1___d191 && (DEF_s3_reg_ex_mem_87_BITS_73_TO_71_92_EQ_0b0___d202 || (DEF_s3_reg_ex_mem_87_BITS_73_TO_71_92_EQ_0b1___d207 || (DEF_s3_reg_ex_mem_87_BITS_73_TO_71_92_EQ_0b10___d193 || (DEF_f3__h3510 == (tUInt8)4u || DEF_f3__h3510 == (tUInt8)5u)))))))) << 37u) | DEF_IF_s3_reg_ex_mem_87_BITS_70_TO_69_90_EQ_1_91_T_ETC___d273);
  DEF_s1_reg_if_id_8_BITS_6_TO_0_0_EQ_0b1100011_1_AN_ETC___d60 = 8589934591llu & ((((tUInt64)(DEF_s1_reg_if_id_8_BITS_6_TO_0_0_EQ_0b1100011_1_AN_ETC___d58)) << 32u) | (tUInt64)(DEF_x_branch_target__h2090));
  if (!(PORT_RST_N == (tUInt8)0u))
  {
    dollar_display(sim_hdl, this, "s", &__str_literal_8);
    dollar_display(sim_hdl, this, "s,1", &__str_literal_9, DEF_s2_reg_branch_BIT_32___d2);
    if (DEF_s2_reg_branch_BIT_32___d2)
      dollar_display(sim_hdl, this, "s", &__str_literal_10);
    if (DEF_s2_reg_branch_BIT_32___d2)
      dollar_display(sim_hdl, this, "s,32", &__str_literal_11, DEF_branch_target__h1436);
    if (DEF_NOT_s2_reg_branch_BIT_32___d4)
      dollar_display(sim_hdl, this, "s", &__str_literal_12);
    dollar_display(sim_hdl, this, "s,32", &__str_literal_13, DEF_v__h1441);
  }
  INST_s1_reg_pc.METH_write(DEF_x__h1579);
  INST_s1_reg_if_id.METH_write(DEF_IF_s2_reg_branch_BIT_32_THEN_s2_reg_branch_BIT_ETC___d17);
  if (!(PORT_RST_N == (tUInt8)0u))
  {
    dollar_display(sim_hdl, this, "s", &__str_literal_14);
    dollar_display(sim_hdl, this, "s,32", &__str_literal_15, DEF__read_instr__h1692);
    if (DEF_s1_reg_if_id_8_BITS_6_TO_0_0_EQ_0b1100011___d21)
      dollar_display(sim_hdl, this, "s", &__str_literal_16);
    if (DEF_s1_reg_if_id_8_BITS_6_TO_0_0_EQ_0b1100011___d21)
      dollar_display(sim_hdl, this, "s,32", &__str_literal_17, DEF_branch_target___1__h1778);
    dollar_display(sim_hdl,
		   this,
		   "s,1",
		   &__str_literal_18,
		   DEF_s1_reg_if_id_8_BITS_6_TO_0_0_EQ_0b1100011_1_AN_ETC___d58);
  }
  INST_s2_reg_branch.METH_write(DEF_s1_reg_if_id_8_BITS_6_TO_0_0_EQ_0b1100011_1_AN_ETC___d60);
  INST_s2_reg_id_ex.METH_write(DEF_s1_reg_if_id_8_BITS_63_TO_32_2_CONCAT_s1_reg_i_ETC___d81);
  if (!(PORT_RST_N == (tUInt8)0u))
  {
    dollar_display(sim_hdl, this, "s", &__str_literal_19);
    dollar_display(sim_hdl, this, "s,32", &__str_literal_20, DEF__read_rs1_val__h2507);
    dollar_display(sim_hdl, this, "s,32", &__str_literal_21, DEF__read_rs2_val__h2508);
    dollar_display(sim_hdl, this, "s,32", &__str_literal_22, DEF__read_rs1_val__h2507);
    dollar_display(sim_hdl, this, "s,32", &__str_literal_23, DEF__read_rs2_val__h2508);
  }
  INST_s3_reg_ex_mem.METH_write(DEF_IF_s2_reg_id_ex_2_BITS_203_TO_197_5_EQ_0b11001_ETC___d186);
  if (!(PORT_RST_N == (tUInt8)0u))
  {
    dollar_display(sim_hdl, this, "s", &__str_literal_24);
    dollar_display(sim_hdl, this, "s,32", &__str_literal_25, DEF__read_addr__h3413);
    dollar_display(sim_hdl, this, "s,32", &__str_literal_26, DEF__read_val__h3412);
    dollar_display(sim_hdl, this, "s,32", &__str_literal_27, DEF__read_addr__h3413);
    dollar_display(sim_hdl, this, "s,32", &__str_literal_28, DEF__read_val__h3412);
    if (DEF_s3_reg_ex_mem_87_BITS_70_TO_69_90_EQ_1_91_AND__ETC___d194)
      dollar_display(sim_hdl,
		     this,
		     "s,32,32",
		     &__str_literal_29,
		     DEF__read_addr__h3413,
		     DEF_load_data__h3604);
  }
  if (DEF_s3_reg_ex_mem_87_BITS_70_TO_69_90_EQ_2_01_AND__ETC___d214)
    INST_s4_dmem0.METH_upd(DEF_IF_s3_reg_ex_mem_87_BITS_73_TO_71_92_EQ_0b0_02_ETC___d216, DEF_x__h3798);
  if (DEF_s3_reg_ex_mem_87_BITS_70_TO_69_90_EQ_2_01_AND__ETC___d221)
    INST_s4_dmem1.METH_upd(DEF_IF_s3_reg_ex_mem_87_BITS_73_TO_71_92_EQ_0b0_02_ETC___d216,
			   DEF_IF_s3_reg_ex_mem_87_BITS_73_TO_71_92_EQ_0b0_02_ETC___d223);
  if (DEF_s3_reg_ex_mem_87_BITS_70_TO_69_90_EQ_2_01_AND__ETC___d230)
    INST_s4_dmem2.METH_upd(DEF_IF_s3_reg_ex_mem_87_BITS_73_TO_71_92_EQ_0b0_02_ETC___d216,
			   DEF_IF_s3_reg_ex_mem_87_BITS_73_TO_71_92_EQ_0b0_02_ETC___d232);
  if (DEF_s3_reg_ex_mem_87_BITS_70_TO_69_90_EQ_2_01_AND__ETC___d236)
    INST_s4_dmem3.METH_upd(DEF_IF_s3_reg_ex_mem_87_BITS_73_TO_71_92_EQ_0b0_02_ETC___d216,
			   DEF_IF_s3_reg_ex_mem_87_BITS_73_TO_71_92_EQ_0b0_02_ETC___d238);
  if (!(PORT_RST_N == (tUInt8)0u))
  {
    if (DEF_s3_reg_ex_mem_87_BITS_70_TO_69_90_EQ_2_01_AND__ETC___d239)
      dollar_display(sim_hdl, this, "s,32,8", &__str_literal_30, DEF_addr_byte__h3735, DEF_x__h3798);
    if (DEF_s3_reg_ex_mem_87_BITS_70_TO_69_90_EQ_2_01_AND__ETC___d240)
      dollar_display(sim_hdl, this, "s,32,8", &__str_literal_31, DEF_addr_byte__h3735, DEF_x__h3798);
    if (DEF_s3_reg_ex_mem_87_BITS_70_TO_69_90_EQ_2_01_AND__ETC___d241)
      dollar_display(sim_hdl, this, "s,32,8", &__str_literal_32, DEF_addr_byte__h3735, DEF_x__h3798);
    if (DEF_s3_reg_ex_mem_87_BITS_70_TO_69_90_EQ_2_01_AND__ETC___d242)
      dollar_display(sim_hdl, this, "s,32,8", &__str_literal_33, DEF_addr_byte__h3735, DEF_x__h3798);
  }
  INST_s4_reg_mem_wb.METH_write(DEF_NOT_s3_reg_ex_mem_87_BITS_70_TO_69_90_EQ_3_43__ETC___d275);
  if (!(PORT_RST_N == (tUInt8)0u))
  {
    dollar_display(sim_hdl, this, "s", &__str_literal_34);
    dollar_display(sim_hdl, this, "s,1", &__str_literal_35, DEF_s4_reg_mem_wb_76_BIT_37___d277);
    dollar_display(sim_hdl,
		   this,
		   "s,32,5",
		   &__str_literal_36,
		   DEF__read_rd_val__h4945,
		   DEF__read_rd__h4944);
  }
  if (DEF_s4_reg_mem_wb_76_BIT_37_77_AND_NOT_s4_reg_mem__ETC___d282)
    INST_regfile_regfile.METH_upd(DEF__read_rd__h4944, DEF__read_rd_val__h4945);
  if (!(PORT_RST_N == (tUInt8)0u))
    if (DEF_s4_reg_mem_wb_76_BIT_37___d277)
      dollar_display(sim_hdl,
		     this,
		     "s,32,5",
		     &__str_literal_37,
		     DEF__read_rd_val__h4945,
		     DEF__read_rd__h4944);
  INST_step.METH_write(DEF_step_83_PLUS_1___d284);
}

void MOD_mkTestbench_pipe::RL_done()
{
  if (!(PORT_RST_N == (tUInt8)0u))
    dollar_finish(sim_hdl, "32", 1u);
}


/* Methods */


/* Reset routines */

void MOD_mkTestbench_pipe::reset_RST_N(tUInt8 ARG_rst_in)
{
  PORT_RST_N = ARG_rst_in;
  INST_step.reset_RST(ARG_rst_in);
  INST_s1_reg_pc.reset_RST(ARG_rst_in);
  INST_regfile_flag.reset_RST(ARG_rst_in);
}


/* Static handles to reset routines */


/* Functions for the parent module to register its reset fns */


/* Functions to set the elaborated clock id */

void MOD_mkTestbench_pipe::set_clk_0(char const *s)
{
  __clk_handle_0 = bk_get_or_define_clock(sim_hdl, s);
}


/* State dumping routine */
void MOD_mkTestbench_pipe::dump_state(unsigned int indent)
{
  printf("%*s%s:\n", indent, "", inst_name);
  INST_regfile_flag.dump_state(indent + 2u);
  INST_regfile_regfile.dump_state(indent + 2u);
  INST_s1_imem.dump_state(indent + 2u);
  INST_s1_reg_if_id.dump_state(indent + 2u);
  INST_s1_reg_pc.dump_state(indent + 2u);
  INST_s2_reg_branch.dump_state(indent + 2u);
  INST_s2_reg_id_ex.dump_state(indent + 2u);
  INST_s3_reg_ex_mem.dump_state(indent + 2u);
  INST_s4_dmem0.dump_state(indent + 2u);
  INST_s4_dmem1.dump_state(indent + 2u);
  INST_s4_dmem2.dump_state(indent + 2u);
  INST_s4_dmem3.dump_state(indent + 2u);
  INST_s4_reg_mem_wb.dump_state(indent + 2u);
  INST_step.dump_state(indent + 2u);
}


/* VCD dumping routines */

unsigned int MOD_mkTestbench_pipe::dump_VCD_defs(unsigned int levels)
{
  vcd_write_scope_start(sim_hdl, inst_name);
  vcd_num = vcd_reserve_ids(sim_hdl, 29u);
  unsigned int num = vcd_num;
  for (unsigned int clk = 0u; clk < bk_num_clocks(sim_hdl); ++clk)
    vcd_add_clock_def(sim_hdl, this, bk_clock_name(sim_hdl, clk), bk_clock_vcd_num(sim_hdl, clk));
  vcd_write_def(sim_hdl, bk_clock_vcd_num(sim_hdl, __clk_handle_0), "CLK", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_done", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_pipe", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "IF_s2_reg_id_ex_2_BITS_203_TO_197_5_EQ_0b11001_ETC___d185", 71u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "IF_s2_reg_id_ex_2_BITS_203_TO_197_5_EQ_0b11001_ETC___d186", 106u);
  vcd_write_def(sim_hdl, num++, "RST_N", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_done", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_pipe", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h5082", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "s1_reg_if_id_8_BITS_24_TO_20_7_CONCAT_s1_reg_i_ETC___d78", 123u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "s1_reg_if_id_8_BITS_31_TO_25_4_CONCAT_s1_reg_i_ETC___d76", 74u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "s1_reg_if_id_8_BITS_31_TO_25_4_CONCAT_s1_reg_i_ETC___d77", 96u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "s1_reg_if_id_8_BITS_63_TO_32_2_CONCAT_s1_reg_i_ETC___d81", 236u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "s1_reg_if_id_8_BITS_6_TO_0_0_CONCAT_s1_reg_if__ETC___d79", 140u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "s2_reg_id_ex___d82", 236u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "s3_reg_ex_mem___d187", 106u);
  num = INST_regfile_flag.dump_VCD_defs(num);
  num = INST_regfile_regfile.dump_VCD_defs(num);
  num = INST_s1_imem.dump_VCD_defs(num);
  num = INST_s1_reg_if_id.dump_VCD_defs(num);
  num = INST_s1_reg_pc.dump_VCD_defs(num);
  num = INST_s2_reg_branch.dump_VCD_defs(num);
  num = INST_s2_reg_id_ex.dump_VCD_defs(num);
  num = INST_s3_reg_ex_mem.dump_VCD_defs(num);
  num = INST_s4_dmem0.dump_VCD_defs(num);
  num = INST_s4_dmem1.dump_VCD_defs(num);
  num = INST_s4_dmem2.dump_VCD_defs(num);
  num = INST_s4_dmem3.dump_VCD_defs(num);
  num = INST_s4_reg_mem_wb.dump_VCD_defs(num);
  num = INST_step.dump_VCD_defs(num);
  vcd_write_scope_end(sim_hdl);
  return num;
}

void MOD_mkTestbench_pipe::dump_VCD(tVCDDumpType dt,
				    unsigned int levels,
				    MOD_mkTestbench_pipe &backing)
{
  vcd_defs(dt, backing);
  vcd_prims(dt, backing);
}

void MOD_mkTestbench_pipe::vcd_defs(tVCDDumpType dt, MOD_mkTestbench_pipe &backing)
{
  unsigned int num = vcd_num;
  if (dt == VCD_DUMP_XS)
  {
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 71u);
    vcd_write_x(sim_hdl, num++, 106u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 123u);
    vcd_write_x(sim_hdl, num++, 74u);
    vcd_write_x(sim_hdl, num++, 96u);
    vcd_write_x(sim_hdl, num++, 236u);
    vcd_write_x(sim_hdl, num++, 140u);
    vcd_write_x(sim_hdl, num++, 236u);
    vcd_write_x(sim_hdl, num++, 106u);
  }
  else
    if (dt == VCD_DUMP_CHANGES)
    {
      if ((backing.DEF_CAN_FIRE_RL_done) != DEF_CAN_FIRE_RL_done)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_done, 1u);
	backing.DEF_CAN_FIRE_RL_done = DEF_CAN_FIRE_RL_done;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_pipe) != DEF_CAN_FIRE_RL_pipe)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_pipe, 1u);
	backing.DEF_CAN_FIRE_RL_pipe = DEF_CAN_FIRE_RL_pipe;
      }
      ++num;
      if ((backing.DEF_IF_s2_reg_id_ex_2_BITS_203_TO_197_5_EQ_0b11001_ETC___d185) != DEF_IF_s2_reg_id_ex_2_BITS_203_TO_197_5_EQ_0b11001_ETC___d185)
      {
	vcd_write_val(sim_hdl, num, DEF_IF_s2_reg_id_ex_2_BITS_203_TO_197_5_EQ_0b11001_ETC___d185, 71u);
	backing.DEF_IF_s2_reg_id_ex_2_BITS_203_TO_197_5_EQ_0b11001_ETC___d185 = DEF_IF_s2_reg_id_ex_2_BITS_203_TO_197_5_EQ_0b11001_ETC___d185;
      }
      ++num;
      if ((backing.DEF_IF_s2_reg_id_ex_2_BITS_203_TO_197_5_EQ_0b11001_ETC___d186) != DEF_IF_s2_reg_id_ex_2_BITS_203_TO_197_5_EQ_0b11001_ETC___d186)
      {
	vcd_write_val(sim_hdl, num, DEF_IF_s2_reg_id_ex_2_BITS_203_TO_197_5_EQ_0b11001_ETC___d186, 106u);
	backing.DEF_IF_s2_reg_id_ex_2_BITS_203_TO_197_5_EQ_0b11001_ETC___d186 = DEF_IF_s2_reg_id_ex_2_BITS_203_TO_197_5_EQ_0b11001_ETC___d186;
      }
      ++num;
      if ((backing.PORT_RST_N) != PORT_RST_N)
      {
	vcd_write_val(sim_hdl, num, PORT_RST_N, 1u);
	backing.PORT_RST_N = PORT_RST_N;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_done) != DEF_WILL_FIRE_RL_done)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_done, 1u);
	backing.DEF_WILL_FIRE_RL_done = DEF_WILL_FIRE_RL_done;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_pipe) != DEF_WILL_FIRE_RL_pipe)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_pipe, 1u);
	backing.DEF_WILL_FIRE_RL_pipe = DEF_WILL_FIRE_RL_pipe;
      }
      ++num;
      if ((backing.DEF_b__h5082) != DEF_b__h5082)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h5082, 32u);
	backing.DEF_b__h5082 = DEF_b__h5082;
      }
      ++num;
      if ((backing.DEF_s1_reg_if_id_8_BITS_24_TO_20_7_CONCAT_s1_reg_i_ETC___d78) != DEF_s1_reg_if_id_8_BITS_24_TO_20_7_CONCAT_s1_reg_i_ETC___d78)
      {
	vcd_write_val(sim_hdl, num, DEF_s1_reg_if_id_8_BITS_24_TO_20_7_CONCAT_s1_reg_i_ETC___d78, 123u);
	backing.DEF_s1_reg_if_id_8_BITS_24_TO_20_7_CONCAT_s1_reg_i_ETC___d78 = DEF_s1_reg_if_id_8_BITS_24_TO_20_7_CONCAT_s1_reg_i_ETC___d78;
      }
      ++num;
      if ((backing.DEF_s1_reg_if_id_8_BITS_31_TO_25_4_CONCAT_s1_reg_i_ETC___d76) != DEF_s1_reg_if_id_8_BITS_31_TO_25_4_CONCAT_s1_reg_i_ETC___d76)
      {
	vcd_write_val(sim_hdl, num, DEF_s1_reg_if_id_8_BITS_31_TO_25_4_CONCAT_s1_reg_i_ETC___d76, 74u);
	backing.DEF_s1_reg_if_id_8_BITS_31_TO_25_4_CONCAT_s1_reg_i_ETC___d76 = DEF_s1_reg_if_id_8_BITS_31_TO_25_4_CONCAT_s1_reg_i_ETC___d76;
      }
      ++num;
      if ((backing.DEF_s1_reg_if_id_8_BITS_31_TO_25_4_CONCAT_s1_reg_i_ETC___d77) != DEF_s1_reg_if_id_8_BITS_31_TO_25_4_CONCAT_s1_reg_i_ETC___d77)
      {
	vcd_write_val(sim_hdl, num, DEF_s1_reg_if_id_8_BITS_31_TO_25_4_CONCAT_s1_reg_i_ETC___d77, 96u);
	backing.DEF_s1_reg_if_id_8_BITS_31_TO_25_4_CONCAT_s1_reg_i_ETC___d77 = DEF_s1_reg_if_id_8_BITS_31_TO_25_4_CONCAT_s1_reg_i_ETC___d77;
      }
      ++num;
      if ((backing.DEF_s1_reg_if_id_8_BITS_63_TO_32_2_CONCAT_s1_reg_i_ETC___d81) != DEF_s1_reg_if_id_8_BITS_63_TO_32_2_CONCAT_s1_reg_i_ETC___d81)
      {
	vcd_write_val(sim_hdl, num, DEF_s1_reg_if_id_8_BITS_63_TO_32_2_CONCAT_s1_reg_i_ETC___d81, 236u);
	backing.DEF_s1_reg_if_id_8_BITS_63_TO_32_2_CONCAT_s1_reg_i_ETC___d81 = DEF_s1_reg_if_id_8_BITS_63_TO_32_2_CONCAT_s1_reg_i_ETC___d81;
      }
      ++num;
      if ((backing.DEF_s1_reg_if_id_8_BITS_6_TO_0_0_CONCAT_s1_reg_if__ETC___d79) != DEF_s1_reg_if_id_8_BITS_6_TO_0_0_CONCAT_s1_reg_if__ETC___d79)
      {
	vcd_write_val(sim_hdl, num, DEF_s1_reg_if_id_8_BITS_6_TO_0_0_CONCAT_s1_reg_if__ETC___d79, 140u);
	backing.DEF_s1_reg_if_id_8_BITS_6_TO_0_0_CONCAT_s1_reg_if__ETC___d79 = DEF_s1_reg_if_id_8_BITS_6_TO_0_0_CONCAT_s1_reg_if__ETC___d79;
      }
      ++num;
      if ((backing.DEF_s2_reg_id_ex___d82) != DEF_s2_reg_id_ex___d82)
      {
	vcd_write_val(sim_hdl, num, DEF_s2_reg_id_ex___d82, 236u);
	backing.DEF_s2_reg_id_ex___d82 = DEF_s2_reg_id_ex___d82;
      }
      ++num;
      if ((backing.DEF_s3_reg_ex_mem___d187) != DEF_s3_reg_ex_mem___d187)
      {
	vcd_write_val(sim_hdl, num, DEF_s3_reg_ex_mem___d187, 106u);
	backing.DEF_s3_reg_ex_mem___d187 = DEF_s3_reg_ex_mem___d187;
      }
      ++num;
    }
    else
    {
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_done, 1u);
      backing.DEF_CAN_FIRE_RL_done = DEF_CAN_FIRE_RL_done;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_pipe, 1u);
      backing.DEF_CAN_FIRE_RL_pipe = DEF_CAN_FIRE_RL_pipe;
      vcd_write_val(sim_hdl, num++, DEF_IF_s2_reg_id_ex_2_BITS_203_TO_197_5_EQ_0b11001_ETC___d185, 71u);
      backing.DEF_IF_s2_reg_id_ex_2_BITS_203_TO_197_5_EQ_0b11001_ETC___d185 = DEF_IF_s2_reg_id_ex_2_BITS_203_TO_197_5_EQ_0b11001_ETC___d185;
      vcd_write_val(sim_hdl, num++, DEF_IF_s2_reg_id_ex_2_BITS_203_TO_197_5_EQ_0b11001_ETC___d186, 106u);
      backing.DEF_IF_s2_reg_id_ex_2_BITS_203_TO_197_5_EQ_0b11001_ETC___d186 = DEF_IF_s2_reg_id_ex_2_BITS_203_TO_197_5_EQ_0b11001_ETC___d186;
      vcd_write_val(sim_hdl, num++, PORT_RST_N, 1u);
      backing.PORT_RST_N = PORT_RST_N;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_done, 1u);
      backing.DEF_WILL_FIRE_RL_done = DEF_WILL_FIRE_RL_done;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_pipe, 1u);
      backing.DEF_WILL_FIRE_RL_pipe = DEF_WILL_FIRE_RL_pipe;
      vcd_write_val(sim_hdl, num++, DEF_b__h5082, 32u);
      backing.DEF_b__h5082 = DEF_b__h5082;
      vcd_write_val(sim_hdl, num++, DEF_s1_reg_if_id_8_BITS_24_TO_20_7_CONCAT_s1_reg_i_ETC___d78, 123u);
      backing.DEF_s1_reg_if_id_8_BITS_24_TO_20_7_CONCAT_s1_reg_i_ETC___d78 = DEF_s1_reg_if_id_8_BITS_24_TO_20_7_CONCAT_s1_reg_i_ETC___d78;
      vcd_write_val(sim_hdl, num++, DEF_s1_reg_if_id_8_BITS_31_TO_25_4_CONCAT_s1_reg_i_ETC___d76, 74u);
      backing.DEF_s1_reg_if_id_8_BITS_31_TO_25_4_CONCAT_s1_reg_i_ETC___d76 = DEF_s1_reg_if_id_8_BITS_31_TO_25_4_CONCAT_s1_reg_i_ETC___d76;
      vcd_write_val(sim_hdl, num++, DEF_s1_reg_if_id_8_BITS_31_TO_25_4_CONCAT_s1_reg_i_ETC___d77, 96u);
      backing.DEF_s1_reg_if_id_8_BITS_31_TO_25_4_CONCAT_s1_reg_i_ETC___d77 = DEF_s1_reg_if_id_8_BITS_31_TO_25_4_CONCAT_s1_reg_i_ETC___d77;
      vcd_write_val(sim_hdl, num++, DEF_s1_reg_if_id_8_BITS_63_TO_32_2_CONCAT_s1_reg_i_ETC___d81, 236u);
      backing.DEF_s1_reg_if_id_8_BITS_63_TO_32_2_CONCAT_s1_reg_i_ETC___d81 = DEF_s1_reg_if_id_8_BITS_63_TO_32_2_CONCAT_s1_reg_i_ETC___d81;
      vcd_write_val(sim_hdl, num++, DEF_s1_reg_if_id_8_BITS_6_TO_0_0_CONCAT_s1_reg_if__ETC___d79, 140u);
      backing.DEF_s1_reg_if_id_8_BITS_6_TO_0_0_CONCAT_s1_reg_if__ETC___d79 = DEF_s1_reg_if_id_8_BITS_6_TO_0_0_CONCAT_s1_reg_if__ETC___d79;
      vcd_write_val(sim_hdl, num++, DEF_s2_reg_id_ex___d82, 236u);
      backing.DEF_s2_reg_id_ex___d82 = DEF_s2_reg_id_ex___d82;
      vcd_write_val(sim_hdl, num++, DEF_s3_reg_ex_mem___d187, 106u);
      backing.DEF_s3_reg_ex_mem___d187 = DEF_s3_reg_ex_mem___d187;
    }
}

void MOD_mkTestbench_pipe::vcd_prims(tVCDDumpType dt, MOD_mkTestbench_pipe &backing)
{
  INST_regfile_flag.dump_VCD(dt, backing.INST_regfile_flag);
  INST_regfile_regfile.dump_VCD(dt, backing.INST_regfile_regfile);
  INST_s1_imem.dump_VCD(dt, backing.INST_s1_imem);
  INST_s1_reg_if_id.dump_VCD(dt, backing.INST_s1_reg_if_id);
  INST_s1_reg_pc.dump_VCD(dt, backing.INST_s1_reg_pc);
  INST_s2_reg_branch.dump_VCD(dt, backing.INST_s2_reg_branch);
  INST_s2_reg_id_ex.dump_VCD(dt, backing.INST_s2_reg_id_ex);
  INST_s3_reg_ex_mem.dump_VCD(dt, backing.INST_s3_reg_ex_mem);
  INST_s4_dmem0.dump_VCD(dt, backing.INST_s4_dmem0);
  INST_s4_dmem1.dump_VCD(dt, backing.INST_s4_dmem1);
  INST_s4_dmem2.dump_VCD(dt, backing.INST_s4_dmem2);
  INST_s4_dmem3.dump_VCD(dt, backing.INST_s4_dmem3);
  INST_s4_reg_mem_wb.dump_VCD(dt, backing.INST_s4_reg_mem_wb);
  INST_step.dump_VCD(dt, backing.INST_step);
}
