/*
 * Generated by Bluespec Compiler (build 6a8cedf)
 * 
 * On Sat May 23 14:42:28 CST 2020
 * 
 */

/* Generation options: keep-fires */
#ifndef __mkTestbench_pipe_h__
#define __mkTestbench_pipe_h__

#include "bluesim_types.h"
#include "bs_module.h"
#include "bluesim_primitives.h"
#include "bs_vcd.h"


/* Class declaration for the mkTestbench_pipe module */
class MOD_mkTestbench_pipe : public Module {
 
 /* Clock handles */
 private:
  tClock __clk_handle_0;
 
 /* Clock gate handles */
 public:
  tUInt8 *clk_gate[0];
 
 /* Instantiation parameters */
 public:
 
 /* Module state */
 public:
  MOD_Reg<tUInt8> INST_regfile_flag;
  MOD_RegFile<tUInt8,tUInt32> INST_regfile_regfile;
  MOD_RegFile<tUInt32,tUInt8> INST_s1_imem;
  MOD_Reg<tUInt64> INST_s1_reg_if_id;
  MOD_Reg<tUInt32> INST_s1_reg_pc;
  MOD_Reg<tUWide> INST_s2_reg_id_ex;
  MOD_Reg<tUWide> INST_s3_reg_ex_mem;
  MOD_RegFile<tUInt32,tUInt8> INST_s4_dmem0;
  MOD_RegFile<tUInt32,tUInt8> INST_s4_dmem1;
  MOD_RegFile<tUInt32,tUInt8> INST_s4_dmem2;
  MOD_RegFile<tUInt32,tUInt8> INST_s4_dmem3;
  MOD_Reg<tUInt64> INST_s4_reg_mem_wb;
  MOD_Reg<tUInt32> INST_step;
 
 /* Constructor */
 public:
  MOD_mkTestbench_pipe(tSimStateHdl simHdl, char const *name, Module *parent);
 
 /* Symbol init methods */
 private:
  void init_symbols_0();
 
 /* Reset signal definitions */
 private:
  tUInt8 PORT_RST_N;
 
 /* Port definitions */
 public:
 
 /* Publicly accessible definitions */
 public:
  tUInt8 DEF_WILL_FIRE_RL_done;
  tUInt8 DEF_CAN_FIRE_RL_done;
  tUInt8 DEF_WILL_FIRE_RL_pipe;
  tUInt8 DEF_CAN_FIRE_RL_pipe;
  tUInt32 DEF_b__h4634;
 
 /* Local definitions */
 private:
  tUWide DEF_s2_reg_id_ex___d53;
  tUWide DEF_s3_reg_ex_mem___d158;
  tUWide DEF_s1_reg_if_id_3_BITS_63_TO_32_5_CONCAT_s1_reg_i_ETC___d52;
  tUWide DEF_s1_reg_if_id_3_BITS_6_TO_0_6_CONCAT_s1_reg_if__ETC___d44;
  tUWide DEF_s1_reg_if_id_3_BITS_24_TO_20_0_CONCAT_s1_reg_i_ETC___d43;
  tUWide DEF_s1_reg_if_id_3_BITS_31_TO_25_3_CONCAT_s1_reg_i_ETC___d42;
  tUWide DEF_IF_s2_reg_id_ex_3_BITS_203_TO_197_6_EQ_0b11001_ETC___d157;
  tUWide DEF_IF_s2_reg_id_ex_3_BITS_203_TO_197_6_EQ_0b11001_ETC___d156;
  tUWide DEF_s1_reg_if_id_3_BITS_31_TO_25_3_CONCAT_s1_reg_i_ETC___d41;
 
 /* Rules */
 public:
  void RL_pipe();
  void RL_done();
 
 /* Methods */
 public:
 
 /* Reset routines */
 public:
  void reset_RST_N(tUInt8 ARG_rst_in);
 
 /* Static handles to reset routines */
 public:
 
 /* Pointers to reset fns in parent module for asserting output resets */
 private:
 
 /* Functions for the parent module to register its reset fns */
 public:
 
 /* Functions to set the elaborated clock id */
 public:
  void set_clk_0(char const *s);
 
 /* State dumping routine */
 public:
  void dump_state(unsigned int indent);
 
 /* VCD dumping routines */
 public:
  unsigned int dump_VCD_defs(unsigned int levels);
  void dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkTestbench_pipe &backing);
  void vcd_defs(tVCDDumpType dt, MOD_mkTestbench_pipe &backing);
  void vcd_prims(tVCDDumpType dt, MOD_mkTestbench_pipe &backing);
};

#endif /* ifndef __mkTestbench_pipe_h__ */
